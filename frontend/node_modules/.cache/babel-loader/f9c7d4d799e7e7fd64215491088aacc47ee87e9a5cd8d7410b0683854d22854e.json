{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'react-flow-renderer';\n\n// Estilos atualizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flowContainerStyles = {\n  width: '100%',\n  height: '100vh',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    position: 'absolute',\n    top: '5px',\n    right: '5px',\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '20px',\n    height: '20px',\n    cursor: 'pointer'\n  }\n};\n\n// Componentes dos Nós com React.memo para otimização\nconst MessageNode = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"X\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 5\n}, this));\n_c2 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"X\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2753 Pergunta\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    style: nodeStyles.input,\n    value: data.question,\n    onChange: e => data.updateQuestion(e.target.value),\n    placeholder: \"Digite a pergunta\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Op\\xE7\\xF5es de Resposta:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: opt,\n        style: {\n          ...nodeStyles.input,\n          width: '80%'\n        },\n        onChange: e => data.updateOption(index, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"bottom\",\n        id: `option-${index}`,\n        style: {\n          left: '85%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: data.addOption,\n      children: \"+ Adicionar Op\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 5\n}, this));\n\n// ... (Outros componentes de nó com o botão de deletar)\n\n// Defina nodeTypes fora do componente FlowEditor\n_c4 = QuestionNode;\nconst nodeTypes = {\n  message: MessageNode,\n  question: QuestionNode\n  // ... (Outros tipos de nó)\n};\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    const targetNode = nodes.find(node => node.id === connection.target);\n\n    // Permite múltiplas conexões para perguntas e condições\n    if (sourceNode.type === 'question' || sourceNode.type === 'condition') {\n      return true;\n    }\n\n    // Verifica se o nó de origem já tem uma conexão\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: () => {\n          const currentOptions = initialData.options || [];\n          const newOption = `Opção ${currentOptions.length + 1}`;\n          updateNode(nodeId, {\n            options: [...currentOptions, newOption]\n          });\n        },\n        updateOption: (index, value) => {\n          const newOptions = [...(initialData.options || [])];\n          newOptions[index] = value;\n          updateNode(nodeId, {\n            options: newOptions\n          });\n        },\n        onDelete: deleteNode\n      }\n      // ... (Outros tipos de nó com onDelete)\n    };\n    return {\n      id: nodeId,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      }\n    };\n  }, [idCounter, updateNode, deleteNode]);\n  const addNode = useCallback(type => {\n    const nodeConfig = {\n      message: {\n        content: ''\n      },\n      question: {\n        question: '',\n        options: ['Sim', 'Não']\n      }\n      // ... (Outros tipos de nó)\n    };\n    setNodes(prevNodes => [...prevNodes, createNode(type, nodeConfig[type])]);\n  }, [createNode, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px',\n        padding: '20px',\n        backgroundColor: '#f8f9fa',\n        borderRight: '1px solid #ddd',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ferramentas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('message'),\n          children: \"Nova Mensagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('question'),\n          children: \"Nova Pergunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        isValidConnection: isValidConnection,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n_s(FlowEditor, \"whyRLpu3p1tZEk6faPA/ydCtt3M=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c5 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MessageNode$React.memo\");\n$RefreshReg$(_c2, \"MessageNode\");\n$RefreshReg$(_c3, \"QuestionNode$React.memo\");\n$RefreshReg$(_c4, \"QuestionNode\");\n$RefreshReg$(_c5, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","flowContainerStyles","width","height","position","overflow","nodeStyles","base","padding","backgroundColor","borderRadius","border","minWidth","boxShadow","input","margin","section","select","deleteButton","top","right","background","color","cursor","MessageNode","memo","_c","id","data","style","children","onClick","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","type","value","content","onChange","e","updateContent","target","placeholder","_c2","QuestionNode","_c3","question","updateQuestion","options","map","opt","index","updateOption","left","addOption","_c4","nodeTypes","message","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","onConnect","params","eds","isValidConnection","connection","sourceNode","find","node","source","targetNode","hasExistingConnection","some","edge","deleteNode","nodeId","nds","filter","updateNode","newData","prevNodes","createNode","initialData","prev","updateFunctions","currentOptions","newOption","length","newOptions","x","Math","random","y","draggable","addNode","nodeConfig","display","borderRight","overflowY","flexDirection","gap","fitView","_c5","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n    Handle,\r\n    useNodesState,\r\n    useEdgesState,\r\n    addEdge\r\n} from 'react-flow-renderer';\r\n\r\n// Estilos atualizados\r\nconst flowContainerStyles = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    position: 'relative',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n    base: {\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        border: '2px solid #2684ff',\r\n        minWidth: '300px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        position: 'relative'\r\n    },\r\n    input: {\r\n        margin: '10px 0',\r\n        padding: '8px',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd'\r\n    },\r\n    section: {\r\n        margin: '15px 0',\r\n        padding: '10px',\r\n        backgroundColor: '#f8f9fa',\r\n        borderRadius: '6px'\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        padding: '8px',\r\n        margin: '5px 0'\r\n    },\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        top: '5px',\r\n        right: '5px',\r\n        background: 'red',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '50%',\r\n        width: '20px',\r\n        height: '20px',\r\n        cursor: 'pointer'\r\n    }\r\n};\r\n\r\n// Componentes dos Nós com React.memo para otimização\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>X</button>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>💬 Mensagem</h4>\r\n        <textarea\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n            value={data.content}\r\n            onChange={(e) => data.updateContent(e.target.value)}\r\n            placeholder=\"Escreva sua mensagem...\"\r\n        />\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>X</button>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>❓ Pergunta</h4>\r\n        <input\r\n            type=\"text\"\r\n            style={nodeStyles.input}\r\n            value={data.question}\r\n            onChange={(e) => data.updateQuestion(e.target.value)}\r\n            placeholder=\"Digite a pergunta\"\r\n        />\r\n        <div style={nodeStyles.section}>\r\n            <h5>Opções de Resposta:</h5>\r\n            {data.options.map((opt, index) => (\r\n                <div key={index} style={{ margin: '5px 0' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={opt}\r\n                        style={{ ...nodeStyles.input, width: '80%' }}\r\n                        onChange={(e) => data.updateOption(index, e.target.value)}\r\n                    />\r\n                    <Handle\r\n                        type=\"source\"\r\n                        position=\"bottom\"\r\n                        id={`option-${index}`}\r\n                        style={{ left: '85%' }}\r\n                    />\r\n                </div>\r\n            ))}\r\n            <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n        </div>\r\n    </div>\r\n));\r\n\r\n// ... (Outros componentes de nó com o botão de deletar)\r\n\r\n// Defina nodeTypes fora do componente FlowEditor\r\nconst nodeTypes = {\r\n    message: MessageNode,\r\n    question: QuestionNode,\r\n    // ... (Outros tipos de nó)\r\n};\r\n\r\nconst FlowEditor = () => {\r\n    const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n    const [idCounter, setIdCounter] = useState(0);\r\n\r\n    const onConnect = useCallback(\r\n        (params) => setEdges((eds) => addEdge(params, eds)),\r\n        [setEdges]\r\n    );\r\n\r\n    const isValidConnection = useCallback((connection) => {\r\n        const sourceNode = nodes.find((node) => node.id === connection.source);\r\n        const targetNode = nodes.find((node) => node.id === connection.target);\r\n\r\n        // Permite múltiplas conexões para perguntas e condições\r\n        if (sourceNode.type === 'question' || sourceNode.type === 'condition') {\r\n            return true;\r\n        }\r\n\r\n        // Verifica se o nó de origem já tem uma conexão\r\n        const hasExistingConnection = edges.some(\r\n            (edge) => edge.source === connection.source\r\n        );\r\n\r\n        return !hasExistingConnection;\r\n    }, [nodes, edges]);\r\n\r\n    const deleteNode = useCallback((nodeId) => {\r\n        setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n        setEdges((eds) => eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId));\r\n    }, [setNodes, setEdges]);\r\n\r\n    const updateNode = useCallback((nodeId, newData) => {\r\n        setNodes((prevNodes) =>\r\n            prevNodes.map((node) =>\r\n                node.id === nodeId ? { ...node, data: { ...node.data, ...newData } } : node\r\n            )\r\n        );\r\n    }, [setNodes]);\r\n\r\n    const createNode = useCallback((type, initialData) => {\r\n        const nodeId = `${type}-${idCounter}`;\r\n        setIdCounter((prev) => prev + 1);\r\n\r\n        const updateFunctions = {\r\n            message: {\r\n                updateContent: (content) => updateNode(nodeId, { content }),\r\n                onDelete: deleteNode,\r\n            },\r\n            question: {\r\n                updateQuestion: (question) => updateNode(nodeId, { question }),\r\n                addOption: () => {\r\n                    const currentOptions = initialData.options || [];\r\n                    const newOption = `Opção ${currentOptions.length + 1}`;\r\n                    updateNode(nodeId, { options: [...currentOptions, newOption] });\r\n                },\r\n                updateOption: (index, value) => {\r\n                    const newOptions = [...(initialData.options || [])];\r\n                    newOptions[index] = value;\r\n                    updateNode(nodeId, { options: newOptions });\r\n                },\r\n                onDelete: deleteNode,\r\n            },\r\n            // ... (Outros tipos de nó com onDelete)\r\n        };\r\n\r\n        return {\r\n            id: nodeId,\r\n            type,\r\n            position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n            draggable: true,\r\n            data: {\r\n                ...initialData,\r\n                ...updateFunctions[type],\r\n            },\r\n        };\r\n    }, [idCounter, updateNode, deleteNode]);\r\n\r\n    const addNode = useCallback((type) => {\r\n        const nodeConfig = {\r\n            message: { content: '' },\r\n            question: { question: '', options: ['Sim', 'Não'] },\r\n            // ... (Outros tipos de nó)\r\n        };\r\n        setNodes((prevNodes) => [...prevNodes, createNode(type, nodeConfig[type])]);\r\n    }, [createNode, setNodes]);\r\n\r\n    return (\r\n        <div style={{ height: '100vh', display: 'flex' }}>\r\n            <div style={{\r\n                width: '250px',\r\n                padding: '20px',\r\n                backgroundColor: '#f8f9fa',\r\n                borderRight: '1px solid #ddd',\r\n                overflowY: 'auto'\r\n            }}>\r\n                <h3>Ferramentas</h3>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                    <button onClick={() => addNode('message')}>Nova Mensagem</button>\r\n                    <button onClick={() => addNode('question')}>Nova Pergunta</button>\r\n                    {/* ... (Outros botões de adicionar nó) */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Container para o React Flow */}\r\n            <div style={flowContainerStyles}>\r\n                <ReactFlow\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onConnect={onConnect}\r\n                    isValidConnection={isValidConnection}\r\n                    nodeTypes={nodeTypes}\r\n                    fitView\r\n                >\r\n                    <MiniMap />\r\n                    <Controls />\r\n                    <Background />\r\n                </ReactFlow>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlowEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}