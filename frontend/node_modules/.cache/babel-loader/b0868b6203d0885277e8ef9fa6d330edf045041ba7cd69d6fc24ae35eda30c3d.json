{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'react-flow-renderer';\n\n// =============== ESTILOS ===============\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sidebarStyles = {\n  width: '260px',\n  backgroundColor: '#fff',\n  borderRadius: '8px',\n  padding: '20px',\n  margin: '10px',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n};\nconst flowContainerStyles = {\n  flex: 1,\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    width: '100%'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '10px'\n  }\n};\nconst handleStyle = {\n  width: '15px',\n  height: '15px',\n  backgroundColor: '#2684ff',\n  border: '2px solid #fff',\n  borderRadius: '50%'\n};\nconst chipStyle = {\n  margin: '5px',\n  padding: '6px 12px',\n  border: '1px solid #ddd',\n  borderRadius: '20px',\n  background: '#f8f9fa',\n  cursor: 'pointer',\n  fontSize: '14px'\n};\n\n// =============== COMPONENTES DE NÓS ===============\n\n// [1] Removemos o botão \"Executar Fluxo\" da renderização\nconst MessageNode = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 3\n}, this));\n_c2 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => {\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...data.options];\n    newOptions[index] = value;\n    data.updateOptions(newOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.base,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      style: handleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u2753 Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: nodeStyles.input,\n      value: data.question,\n      onChange: e => data.updateQuestion(e.target.value),\n      placeholder: \"Digite a pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nodeStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Op\\xE7\\xF5es de Resposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: opt,\n          style: {\n            ...nodeStyles.input,\n            width: '80%'\n          },\n          onChange: e => handleOptionChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: \"right\",\n          id: `option-${index}`,\n          style: {\n            ...handleStyle,\n            right: '-8px',\n            top: '50%',\n            transform: 'translateY(-50%)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: data.addOption,\n        children: \"+ Adicionar Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.deleteButton,\n      onClick: () => data.onDelete(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n});\n\n// Outros nós permanecem o mesmo...\n_c4 = QuestionNode;\nconst nodeTypes = {\n  message: MessageNode,\n  question: QuestionNode\n  // Adicionar o restante dos tipos de nós aqui...\n};\nexport default function FlowEditor() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Função de envio de mensagem\n  const sendMessageToChannel = message => {\n    console.log('[FLOW] Enviando mensagem para o chat:', message);\n    // Ex.: fetch('/chat/send', { method: 'POST', body: JSON.stringify({ text: message }) })\n  };\n\n  // Função para executar o fluxo\n  const executeFlow = () => {\n    const nodeIdsWithIncoming = new Set(edges.map(e => e.target));\n    const startNodes = nodes.filter(n => !nodeIdsWithIncoming.has(n.id));\n    console.log('[FLOW] Iniciando fluxo...');\n    startNodes.forEach(startNode => {\n      executeNode(startNode);\n    });\n  };\n\n  // Ao conectar nós\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Validação de conexões\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'question' || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'condition') {\n      return true;\n    }\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n\n  // Deletar nó\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n\n  // Atualizar dados do nó\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n\n  // Criar nó\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: () => {\n          setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n            ...node,\n            data: {\n              ...node.data,\n              options: [...(node.data.options || []), `Opção ${node.data.options ? node.data.options.length + 1 : 1}`]\n            }\n          } : node));\n        },\n        updateOptions: options => updateNode(nodeId, {\n          options\n        }),\n        onDelete: deleteNode\n      }\n      // Outros nós permanecem o mesmo...\n    };\n    const newNode = {\n      id: nodeId,\n      type,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  }, [idCounter, updateNode, deleteNode, setNodes]);\n\n  // Categorias da sidebar\n  const categories = [{\n    title: 'Conversa',\n    items: [{\n      label: 'Mensagem',\n      nodeType: 'message',\n      initialData: {\n        content: ''\n      }\n    }, {\n      label: 'Pergunta',\n      nodeType: 'question',\n      initialData: {\n        question: '',\n        options: []\n      }\n    }, {\n      label: 'Mídia',\n      nodeType: 'media',\n      initialData: {\n        url: ''\n      }\n    }]\n  }\n  // Outras categorias permanecem o mesmo...\n  ];\n\n  // Render de cada categoria na sidebar\n  function CategoryBlock({\n    title,\n    items\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: chipStyle,\n          onClick: () => createNode(item.nodeType, item.initialData),\n          children: item.label\n        }, item.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: sidebarStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: \"Qual a intera\\xE7\\xE3o que deseja?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(CategoryBlock, {\n        title: cat.title,\n        items: cat.items\n      }, cat.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        connectionLineStyle: {\n          stroke: '#ddd',\n          strokeWidth: 2\n        },\n        snapToGrid: true,\n        snapGrid: [15, 15],\n        isValidConnection: isValidConnection,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowEditor, \"eHDobXln6VHoJAIhyjjycggf4ag=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c5 = FlowEditor;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MessageNode$React.memo\");\n$RefreshReg$(_c2, \"MessageNode\");\n$RefreshReg$(_c3, \"QuestionNode$React.memo\");\n$RefreshReg$(_c4, \"QuestionNode\");\n$RefreshReg$(_c5, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","sidebarStyles","width","backgroundColor","borderRadius","padding","margin","boxShadow","flowContainerStyles","flex","height","position","overflow","nodeStyles","base","border","minWidth","display","flexDirection","alignItems","input","section","select","deleteButton","background","color","cursor","justifyContent","marginTop","handleStyle","chipStyle","fontSize","MessageNode","memo","_c","id","data","style","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","content","onChange","e","updateContent","target","placeholder","onClick","onDelete","_c2","QuestionNode","_c3","handleOptionChange","index","newOptions","options","updateOptions","question","updateQuestion","map","opt","right","top","transform","addOption","_c4","nodeTypes","message","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","sendMessageToChannel","console","log","executeFlow","nodeIdsWithIncoming","Set","startNodes","filter","n","has","forEach","startNode","executeNode","onConnect","params","eds","isValidConnection","connection","sourceNode","find","node","source","hasExistingConnection","some","edge","deleteNode","nodeId","nds","updateNode","newData","prevNodes","createNode","initialData","idCounter","setIdCounter","prev","updateFunctions","length","newNode","x","Math","random","y","categories","title","items","label","nodeType","url","CategoryBlock","marginBottom","flexWrap","item","cat","connectionLineStyle","stroke","strokeWidth","snapToGrid","snapGrid","gap","_c5","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge\r\n} from 'react-flow-renderer';\r\n\r\n// =============== ESTILOS ===============\r\nconst sidebarStyles = {\r\n  width: '260px',\r\n  backgroundColor: '#fff',\r\n  borderRadius: '8px',\r\n  padding: '20px',\r\n  margin: '10px',\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n};\r\n\r\nconst flowContainerStyles = {\r\n  flex: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n  base: {\r\n    padding: '20px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '8px',\r\n    border: '2px solid #2684ff',\r\n    minWidth: '300px',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  input: {\r\n    margin: '10px 0',\r\n    padding: '8px',\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ddd'\r\n  },\r\n  section: {\r\n    margin: '15px 0',\r\n    padding: '10px',\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: '6px',\r\n    width: '100%'\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    margin: '5px 0'\r\n  },\r\n  deleteButton: {\r\n    background: 'red',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '50%',\r\n    width: '24px',\r\n    height: '24px',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '10px'\r\n  }\r\n};\r\n\r\nconst handleStyle = {\r\n  width: '15px',\r\n  height: '15px',\r\n  backgroundColor: '#2684ff',\r\n  border: '2px solid #fff',\r\n  borderRadius: '50%'\r\n};\r\n\r\nconst chipStyle = {\r\n  margin: '5px',\r\n  padding: '6px 12px',\r\n  border: '1px solid #ddd',\r\n  borderRadius: '20px',\r\n  background: '#f8f9fa',\r\n  cursor: 'pointer',\r\n  fontSize: '14px'\r\n};\r\n\r\n// =============== COMPONENTES DE NÓS ===============\r\n\r\n// [1] Removemos o botão \"Executar Fluxo\" da renderização\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>💬 Mensagem</h4>\r\n    <textarea\r\n      style={{ ...nodeStyles.input, height: '100px' }}\r\n      value={data.content}\r\n      onChange={(e) => data.updateContent(e.target.value)}\r\n      placeholder=\"Escreva sua mensagem...\"\r\n    />\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => {\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...data.options];\r\n    newOptions[index] = value;\r\n    data.updateOptions(newOptions);\r\n  };\r\n\r\n  return (\r\n    <div style={nodeStyles.base}>\r\n      <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n      <h4>❓ Pergunta</h4>\r\n      <input\r\n        type=\"text\"\r\n        style={nodeStyles.input}\r\n        value={data.question}\r\n        onChange={(e) => data.updateQuestion(e.target.value)}\r\n        placeholder=\"Digite a pergunta\"\r\n      />\r\n      <div style={nodeStyles.section}>\r\n        <h5>Opções de Resposta:</h5>\r\n        {data.options.map((opt, index) => (\r\n          <div key={index} style={{ margin: '5px 0', position: 'relative' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={opt}\r\n              style={{ ...nodeStyles.input, width: '80%' }}\r\n              onChange={(e) => handleOptionChange(index, e.target.value)}\r\n            />\r\n            <Handle\r\n              type=\"source\"\r\n              position=\"right\"\r\n              id={`option-${index}`}\r\n              style={{\r\n                ...handleStyle,\r\n                right: '-8px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)'\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n      </div>\r\n      <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n        🗑️\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Outros nós permanecem o mesmo...\r\n\r\nconst nodeTypes = {\r\n  message: MessageNode,\r\n  question: QuestionNode,\r\n  // Adicionar o restante dos tipos de nós aqui...\r\n};\r\n\r\nexport default function FlowEditor() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n\r\n  // Função de envio de mensagem\r\n  const sendMessageToChannel = (message) => {\r\n    console.log('[FLOW] Enviando mensagem para o chat:', message);\r\n    // Ex.: fetch('/chat/send', { method: 'POST', body: JSON.stringify({ text: message }) })\r\n  };\r\n\r\n  // Função para executar o fluxo\r\n  const executeFlow = () => {\r\n    const nodeIdsWithIncoming = new Set(edges.map((e) => e.target));\r\n    const startNodes = nodes.filter((n) => !nodeIdsWithIncoming.has(n.id));\r\n\r\n    console.log('[FLOW] Iniciando fluxo...');\r\n    startNodes.forEach((startNode) => {\r\n      executeNode(startNode);\r\n    });\r\n  };\r\n\r\n  // Ao conectar nós\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  // Validação de conexões\r\n  const isValidConnection = useCallback(\r\n    (connection) => {\r\n      const sourceNode = nodes.find((node) => node.id === connection.source);\r\n      if (sourceNode?.type === 'question' || sourceNode?.type === 'condition') {\r\n        return true;\r\n      }\r\n      const hasExistingConnection = edges.some(\r\n        (edge) => edge.source === connection.source\r\n      );\r\n      return !hasExistingConnection;\r\n    },\r\n    [nodes, edges]\r\n  );\r\n\r\n  // Deletar nó\r\n  const deleteNode = useCallback(\r\n    (nodeId) => {\r\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n      setEdges((eds) =>\r\n        eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n      );\r\n    },\r\n    [setNodes, setEdges]\r\n  );\r\n\r\n  // Atualizar dados do nó\r\n  const updateNode = useCallback(\r\n    (nodeId, newData) => {\r\n      setNodes((prevNodes) =>\r\n        prevNodes.map((node) =>\r\n          node.id === nodeId\r\n            ? { ...node, data: { ...node.data, ...newData } }\r\n            : node\r\n        )\r\n      );\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Criar nó\r\n  const createNode = useCallback(\r\n    (type, initialData) => {\r\n      const nodeId = `${type}-${idCounter}`;\r\n      setIdCounter((prev) => prev + 1);\r\n\r\n      const updateFunctions = {\r\n        message: {\r\n          updateContent: (content) => updateNode(nodeId, { content }),\r\n          onDelete: deleteNode\r\n        },\r\n        question: {\r\n          updateQuestion: (question) => updateNode(nodeId, { question }),\r\n          addOption: () => {\r\n            setNodes((prevNodes) =>\r\n              prevNodes.map((node) =>\r\n                node.id === nodeId\r\n                  ? {\r\n                      ...node,\r\n                      data: {\r\n                        ...node.data,\r\n                        options: [\r\n                          ...(node.data.options || []),\r\n                          `Opção ${\r\n                            node.data.options ? node.data.options.length + 1 : 1\r\n                          }`\r\n                        ]\r\n                      }\r\n                    }\r\n                  : node\r\n              )\r\n            );\r\n          },\r\n          updateOptions: (options) => updateNode(nodeId, { options }),\r\n          onDelete: deleteNode\r\n        },\r\n        // Outros nós permanecem o mesmo...\r\n      };\r\n\r\n      const newNode = {\r\n        id: nodeId,\r\n        type,\r\n        data: { ...initialData, ...updateFunctions[type] },\r\n        position: { x: Math.random() * 400, y: Math.random() * 400 }\r\n      };\r\n\r\n      setNodes((nds) => [...nds, newNode]);\r\n    },\r\n    [idCounter, updateNode, deleteNode, setNodes]\r\n  );\r\n\r\n  // Categorias da sidebar\r\n  const categories = [\r\n    {\r\n      title: 'Conversa',\r\n      items: [\r\n        { label: 'Mensagem', nodeType: 'message', initialData: { content: '' } },\r\n        {\r\n          label: 'Pergunta',\r\n          nodeType: 'question',\r\n          initialData: { question: '', options: [] }\r\n        },\r\n        { label: 'Mídia', nodeType: 'media', initialData: { url: '' } }\r\n      ]\r\n    },\r\n    // Outras categorias permanecem o mesmo...\r\n  ];\r\n\r\n  // Render de cada categoria na sidebar\r\n  function CategoryBlock({ title, items }) {\r\n    return (\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h4 style={{ marginBottom: '10px' }}>{title}</h4>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n          {items.map((item) => (\r\n            <button\r\n              key={item.label}\r\n              style={chipStyle}\r\n              onClick={() => createNode(item.nodeType, item.initialData)}\r\n            >\r\n              {item.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      {/* SIDEBAR */}\r\n      <div style={sidebarStyles}>\r\n        <h3 style={{ marginBottom: '20px' }}>Qual a interação que deseja?</h3>\r\n\r\n        {categories.map((cat) => (\r\n          <CategoryBlock key={cat.title} title={cat.title} items={cat.items} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* ÁREA DO FLUXO */}\r\n      <div style={flowContainerStyles}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          nodeTypes={nodeTypes}\r\n          connectionLineStyle={{ stroke: '#ddd', strokeWidth: 2 }}\r\n          snapToGrid={true}\r\n          snapGrid={[15, 15]}\r\n          isValidConnection={isValidConnection}\r\n        >\r\n          <MiniMap />\r\n          <Controls />\r\n          <Background color=\"#aaa\" gap={16} />\r\n        </ReactFlow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}