{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\";\n// src/FlowEditor.js\nimport React, { useState } from \"react\";\nimport ReactFlow, { addEdge, MiniMap, Controls, Handle } from \"react-flow-renderer\";\nimport { saveFlow } from \"./services\"; // Para salvar os fluxos\n\n// Componente FlowEditor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowEditor = ({\n  elements,\n  setElements\n}) => {\n  // Função de adicionar um nó\n  const addMessageNode = () => {\n    const newNode = {\n      id: `node-${elements.length + 1}`,\n      type: \"message\",\n      data: {\n        label: `Mensagem ${elements.length + 1}`\n      },\n      position: {\n        x: 100,\n        y: 100 + elements.length * 100\n      },\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\"\n      }\n    };\n    setElements(els => [...els, newNode]);\n  };\n\n  // Função de salvar o fluxo\n  const handleSaveFlow = async () => {\n    const flowData = {\n      elements\n    }; // Aqui você pode enviar os dados para o backend\n    await saveFlow(flowData);\n    alert(\"Fluxo salvo com sucesso!\");\n  };\n\n  // Lógica de conexão dos nós\n  const onConnect = params => setElements(els => addEdge(params, els));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 20,\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMessageNode,\n        children: \"Adicionar Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveFlow,\n        children: \"Salvar Fluxo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onConnect: onConnect,\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = FlowEditor;\nexport default FlowEditor;\nvar _c;\n$RefreshReg$(_c, \"FlowEditor\");","map":{"version":3,"names":["React","useState","ReactFlow","addEdge","MiniMap","Controls","Handle","saveFlow","jsxDEV","_jsxDEV","FlowEditor","elements","setElements","addMessageNode","newNode","id","length","type","data","label","position","x","y","style","border","padding","els","handleSaveFlow","flowData","alert","onConnect","params","height","children","top","left","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["// src/FlowEditor.js\r\nimport React, { useState } from \"react\";\r\nimport ReactFlow, { addEdge, MiniMap, Controls, Handle } from \"react-flow-renderer\";\r\nimport { saveFlow } from \"./services\"; // Para salvar os fluxos\r\n\r\n// Componente FlowEditor\r\nconst FlowEditor = ({ elements, setElements }) => {\r\n  // Função de adicionar um nó\r\n  const addMessageNode = () => {\r\n    const newNode = {\r\n      id: `node-${elements.length + 1}`,\r\n      type: \"message\",\r\n      data: { label: `Mensagem ${elements.length + 1}` },\r\n      position: { x: 100, y: 100 + elements.length * 100 },\r\n      style: { border: \"1px solid #ddd\", padding: \"10px\" },\r\n    };\r\n    setElements((els) => [...els, newNode]);\r\n  };\r\n\r\n  // Função de salvar o fluxo\r\n  const handleSaveFlow = async () => {\r\n    const flowData = { elements }; // Aqui você pode enviar os dados para o backend\r\n    await saveFlow(flowData);\r\n    alert(\"Fluxo salvo com sucesso!\");\r\n  };\r\n\r\n  // Lógica de conexão dos nós\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div style={{ position: \"absolute\", top: 20, left: 20 }}>\r\n        <button onClick={addMessageNode}>Adicionar Mensagem</button>\r\n        <button onClick={handleSaveFlow}>Salvar Fluxo</button>\r\n      </div>\r\n      <ReactFlow\r\n        elements={elements}\r\n        onConnect={onConnect}\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <MiniMap />\r\n        <Controls />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowEditor;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,IAAIC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,qBAAqB;AACnF,SAASC,QAAQ,QAAQ,YAAY,CAAC,CAAC;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAChD;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAE,QAAQJ,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;MACjCC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;QAAEC,KAAK,EAAE,YAAYR,QAAQ,CAACK,MAAM,GAAG,CAAC;MAAG,CAAC;MAClDI,QAAQ,EAAE;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,GAAG,GAAGX,QAAQ,CAACK,MAAM,GAAG;MAAI,CAAC;MACpDO,KAAK,EAAE;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO;IACrD,CAAC;IACDb,WAAW,CAAEc,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEZ,OAAO,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG;MAAEjB;IAAS,CAAC,CAAC,CAAC;IAC/B,MAAMJ,QAAQ,CAACqB,QAAQ,CAAC;IACxBC,KAAK,CAAC,0BAA0B,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,MAAM,IAAKnB,WAAW,CAAEc,GAAG,IAAKvB,OAAO,CAAC4B,MAAM,EAAEL,GAAG,CAAC,CAAC;EAExE,oBACEjB,OAAA;IAAKc,KAAK,EAAE;MAAES,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9BxB,OAAA;MAAKc,KAAK,EAAE;QAAEH,QAAQ,EAAE,UAAU;QAAEc,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MAAAF,QAAA,gBACtDxB,OAAA;QAAQ2B,OAAO,EAAEvB,cAAe;QAAAoB,QAAA,EAAC;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5D/B,OAAA;QAAQ2B,OAAO,EAAET,cAAe;QAAAM,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACN/B,OAAA,CAACP,SAAS;MACRS,QAAQ,EAAEA,QAAS;MACnBmB,SAAS,EAAEA,SAAU;MACrBP,KAAK,EAAE;QAAES,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAE1BxB,OAAA,CAACL,OAAO;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX/B,OAAA,CAACJ,QAAQ;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACC,EAAA,GAvCI/B,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}