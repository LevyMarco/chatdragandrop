{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// src/FlowEditor.js (versão corrigida)\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [idCounter, setIdCounter] = useState(0);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const addNode = (type, label) => {\n    const newNode = {\n      id: `${type}-${idCounter}`,\n      type,\n      data: {\n        label\n      },\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500\n      },\n      draggable: true\n    };\n    setIdCounter(idCounter + 1);\n    setNodes(nds => [...nds, newNode]); // Atualização segura do estado\n  };\n  const handleSaveFlow = async () => {\n    const flowData = {\n      nodes,\n      edges\n    };\n    await saveFlow(flowData);\n    alert(\"Fluxo salvo com sucesso!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.sidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onConnect: onConnect,\n        onNodesChange: changes => {\n          setNodes(nds => nds.map(node => {\n            const change = changes.find(c => c.id === node.id);\n            return change !== null && change !== void 0 && change.position ? {\n              ...node,\n              position: change.position\n            } : node;\n          }));\n        },\n        nodeTypes: nodeTypes,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowEditor, \"TbhDoYjpsFbf0UleJ9Yj7IME4lo=\");\n_c = FlowEditor;\nvar _c;\n$RefreshReg$(_c, \"FlowEditor\");","map":{"version":3,"names":["FlowEditor","_s","nodes","setNodes","useState","edges","setEdges","idCounter","setIdCounter","onConnect","useCallback","params","eds","addEdge","addNode","type","label","newNode","id","data","position","x","Math","random","y","draggable","nds","handleSaveFlow","flowData","saveFlow","alert","_jsxDEV","style","height","display","children","styles","sidebar","fileName","_jsxFileName","lineNumber","columnNumber","flex","ReactFlow","onNodesChange","changes","map","node","change","find","c","nodeTypes","MiniMap","Controls","Background","_c","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["// src/FlowEditor.js (versão corrigida)\r\nconst FlowEditor = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [idCounter, setIdCounter] = useState(0);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const addNode = (type, label) => {\r\n    const newNode = {\r\n      id: `${type}-${idCounter}`,\r\n      type,\r\n      data: { label },\r\n      position: { x: Math.random() * 500, y: Math.random() * 500 },\r\n      draggable: true,\r\n    };\r\n    setIdCounter(idCounter + 1);\r\n    setNodes((nds) => [...nds, newNode]); // Atualização segura do estado\r\n  };\r\n\r\n  const handleSaveFlow = async () => {\r\n    const flowData = { nodes, edges };\r\n    await saveFlow(flowData);\r\n    alert(\"Fluxo salvo com sucesso!\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", display: \"flex\" }}>\r\n      <div style={styles.sidebar}>\r\n        {/* Botões de interação (mantidos conforme o código anterior) */}\r\n      </div>\r\n      <div style={{ flex: 1, position: \"relative\" }}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onConnect={onConnect}\r\n          onNodesChange={(changes) => {\r\n            setNodes((nds) =>\r\n              nds.map((node) => {\r\n                const change = changes.find((c) => c.id === node.id);\r\n                return change?.position ? { ...node, position: change.position } : node;\r\n              })\r\n            );\r\n          }}\r\n          nodeTypes={nodeTypes}\r\n        >\r\n          <MiniMap />\r\n          <Controls />\r\n          <Background />\r\n        </ReactFlow>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}