{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\n// src/FlowEditor.js\nimport React, { useState } from \"react\";\nimport ReactFlow, { Handle, addEdge, MiniMap, Controls } from \"react-flow-renderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowEditor = () => {\n  _s();\n  const [elements, setElements] = useState([]);\n\n  // Função que conecta os nós\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  // Função para adicionar um nó de mensagem\n  const addNode = type => {\n    const newNode = {\n      id: `node-${elements.length + 1}`,\n      type: type,\n      // 'message' ou 'question'\n      data: {\n        label: `Novo Node ${elements.length + 1}`\n      },\n      position: {\n        x: 100,\n        y: 100 + elements.length * 150\n      } // Ajustando a posição para ser visível\n    };\n    setElements(els => [...els, newNode]);\n  };\n\n  // Função para adicionar um nó de pergunta com opções\n  const addQuestionNode = options => {\n    const newQuestionNode = {\n      id: `node-${elements.length + 1}`,\n      type: \"question\",\n      // Tipo personalizado para perguntas\n      data: {\n        label: \"Escolha uma opção\",\n        options: options // Passa as opções para o nó\n      },\n      position: {\n        x: 200,\n        y: 200 + elements.length * 150\n      } // Ajustando a posição\n    };\n    setElements(els => [...els, newQuestionNode]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onConnect: onConnect,\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(\"message\"),\n        children: \"Adicionar Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestionNode([\"Vendas\", \"Cobrança\", \"E-commerce\"]),\n        children: \"Adicionar Pergunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowEditor, \"8g6up/Nhv10jAGONUu4uljkLqNw=\");\n_c = FlowEditor;\nexport default FlowEditor;\nvar _c;\n$RefreshReg$(_c, \"FlowEditor\");","map":{"version":3,"names":["React","useState","ReactFlow","Handle","addEdge","MiniMap","Controls","jsxDEV","_jsxDEV","FlowEditor","_s","elements","setElements","onConnect","params","els","addNode","type","newNode","id","length","data","label","position","x","y","addQuestionNode","options","newQuestionNode","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["// src/FlowEditor.js\r\nimport React, { useState } from \"react\";\r\nimport ReactFlow, { Handle, addEdge, MiniMap, Controls } from \"react-flow-renderer\";\r\n\r\nconst FlowEditor = () => {\r\n  const [elements, setElements] = useState([]);\r\n  \r\n  // Função que conecta os nós\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  // Função para adicionar um nó de mensagem\r\n  const addNode = (type) => {\r\n    const newNode = {\r\n      id: `node-${elements.length + 1}`,\r\n      type: type,  // 'message' ou 'question'\r\n      data: { label: `Novo Node ${elements.length + 1}` },\r\n      position: { x: 100, y: 100 + elements.length * 150 }, // Ajustando a posição para ser visível\r\n    };\r\n    setElements((els) => [...els, newNode]);\r\n  };\r\n\r\n  // Função para adicionar um nó de pergunta com opções\r\n  const addQuestionNode = (options) => {\r\n    const newQuestionNode = {\r\n      id: `node-${elements.length + 1}`,\r\n      type: \"question\", // Tipo personalizado para perguntas\r\n      data: {\r\n        label: \"Escolha uma opção\",\r\n        options: options, // Passa as opções para o nó\r\n      },\r\n      position: { x: 200, y: 200 + elements.length * 150 }, // Ajustando a posição\r\n    };\r\n    setElements((els) => [...els, newQuestionNode]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <ReactFlow\r\n        elements={elements}\r\n        onConnect={onConnect}\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <MiniMap />\r\n        <Controls />\r\n\r\n        {/* Botões para adicionar mensagem ou pergunta */}\r\n        <button onClick={() => addNode(\"message\")}>Adicionar Mensagem</button>\r\n        <button onClick={() => addQuestionNode([\"Vendas\", \"Cobrança\", \"E-commerce\"])}>Adicionar Pergunta</button>\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}