{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'reactflow';\n\n// =============== ESTILOS ===============\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sidebarStyles = {\n  width: '260px',\n  backgroundColor: '#fff',\n  borderRadius: '8px',\n  padding: '20px',\n  margin: '10px',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n};\nconst flowContainerStyles = {\n  flex: 1,\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    width: '100%'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '10px'\n  }\n};\nconst handleStyle = {\n  width: '15px',\n  height: '15px',\n  backgroundColor: '#2684ff',\n  border: '2px solid #fff',\n  borderRadius: '50%'\n};\nconst chipStyle = {\n  margin: '5px',\n  padding: '6px 12px',\n  border: '1px solid #ddd',\n  borderRadius: '20px',\n  background: '#f8f9fa',\n  cursor: 'pointer',\n  fontSize: '14px'\n};\n\n// =============== COMPONENTES DE NÓS ===============\nconst MessageNode = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 3\n}, this));\n_c2 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => {\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...data.options];\n    newOptions[index] = value;\n    data.updateOptions(newOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.base,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      style: handleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u2753 Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: nodeStyles.input,\n      value: data.question,\n      onChange: e => data.updateQuestion(e.target.value),\n      placeholder: \"Digite a pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nodeStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Op\\xE7\\xF5es de Resposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: opt,\n          style: {\n            ...nodeStyles.input,\n            width: '80%'\n          },\n          onChange: e => handleOptionChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: \"right\",\n          id: `option-${index}`,\n          style: {\n            ...handleStyle,\n            right: '-8px',\n            top: '50%',\n            transform: 'translateY(-50%)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: data.addOption,\n        children: \"+ Adicionar Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.deleteButton,\n      onClick: () => data.onDelete(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n});\n\n// Outros componentes de nó (MediaNode, ConditionNode, etc.) permanecem os mesmos...\n\n// REGISTRO DE TIPOS\n_c4 = QuestionNode;\nconst nodeTypes = {\n  message: MessageNode,\n  question: QuestionNode,\n  media: MediaNode,\n  condition: ConditionNode,\n  interval: IntervalNode,\n  chatgpt: ChatGPTNode,\n  api: APINode,\n  updateCRM: UpdateCRMNode,\n  createRecord: CreateRecordNode,\n  transfer: TransferNode,\n  schedule: ScheduleNode,\n  end: EndNode\n};\nexport default function FlowEditor() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n\n  // Função para executar o fluxo (será chamada pelo Bitrix24)\n  const executeFlow = useCallback(() => {\n    const nodeIdsWithIncoming = new Set(edges.map(e => e.target));\n    const startNodes = nodes.filter(n => !nodeIdsWithIncoming.has(n.id));\n    if (startNodes.length === 0) {\n      console.log('[FLOW] Nenhum nó inicial encontrado.');\n      return;\n    }\n    console.log('[FLOW] Iniciando fluxo...');\n    startNodes.forEach(startNode => {\n      executeNode(startNode);\n    });\n  }, [nodes, edges]);\n\n  // Função para executar um nó específico\n  const executeNode = useCallback((node, visited = new Set()) => {\n    if (visited.has(node.id)) return;\n    visited.add(node.id);\n    switch (node.type) {\n      case 'message':\n        console.log('[FLOW] Enviando mensagem:', node.data.content);\n        break;\n      case 'api':\n        console.log('[FLOW] Chamando API:', node.data.url);\n        break;\n      case 'condition':\n        console.log('[FLOW] Verificando condição:', node.data.conditionType);\n        break;\n      default:\n        console.log('[FLOW] Executando nó:', node.type);\n        break;\n    }\n\n    // Executar nós conectados\n    const nextEdges = edges.filter(e => e.source === node.id);\n    nextEdges.forEach(edge => {\n      const nextNode = nodes.find(n => n.id === edge.target);\n      if (nextNode) {\n        executeNode(nextNode, visited);\n      }\n    });\n  }, [nodes, edges]);\n\n  // Ao conectar nós\n  const onConnect = useCallback(connection => setEdges(eds => addEdge(connection, eds)), [setEdges]);\n\n  // Validação de conexões\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'question' || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'condition') {\n      return true;\n    }\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n\n  // Deletar nó\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n\n  // Atualizar dados do nó\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n\n  // Criar nó\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: () => {\n          setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n            ...node,\n            data: {\n              ...node.data,\n              options: [...(node.data.options || []), `Opção ${node.data.options.length + 1}`]\n            }\n          } : node));\n        },\n        updateOptions: options => updateNode(nodeId, {\n          options\n        }),\n        onDelete: deleteNode\n      }\n      // Outros tipos de nós...\n    };\n    const newNode = {\n      id: nodeId,\n      type,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  }, [idCounter, updateNode, deleteNode, setNodes]);\n\n  // Categorias da sidebar\n  const categories = [{\n    title: 'Conversa',\n    items: [{\n      label: 'Mensagem',\n      nodeType: 'message',\n      initialData: {\n        content: ''\n      }\n    }, {\n      label: 'Pergunta',\n      nodeType: 'question',\n      initialData: {\n        question: '',\n        options: []\n      }\n    }, {\n      label: 'Mídia',\n      nodeType: 'media',\n      initialData: {\n        url: ''\n      }\n    }]\n  }\n  // Outras categorias...\n  ];\n\n  // Render de cada categoria na sidebar\n  function CategoryBlock({\n    title,\n    items\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: chipStyle,\n          onClick: () => createNode(item.nodeType, item.initialData),\n          children: item.label\n        }, item.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: sidebarStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: \"Qual a intera\\xE7\\xE3o que deseja?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(CategoryBlock, {\n        title: cat.title,\n        items: cat.items\n      }, cat.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        connectionLineStyle: {\n          stroke: '#ddd',\n          strokeWidth: 2\n        },\n        snapToGrid: true,\n        snapGrid: [15, 15],\n        isValidConnection: isValidConnection,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowEditor, \"vmGmlWRoRRUEjvevLC1TUR0Vw1w=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c5 = FlowEditor;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MessageNode$React.memo\");\n$RefreshReg$(_c2, \"MessageNode\");\n$RefreshReg$(_c3, \"QuestionNode$React.memo\");\n$RefreshReg$(_c4, \"QuestionNode\");\n$RefreshReg$(_c5, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","sidebarStyles","width","backgroundColor","borderRadius","padding","margin","boxShadow","flowContainerStyles","flex","height","position","overflow","nodeStyles","base","border","minWidth","display","flexDirection","alignItems","input","section","select","deleteButton","background","color","cursor","justifyContent","marginTop","handleStyle","chipStyle","fontSize","MessageNode","memo","_c","id","data","style","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","content","onChange","e","updateContent","target","placeholder","onClick","onDelete","_c2","QuestionNode","_c3","handleOptionChange","index","newOptions","options","updateOptions","question","updateQuestion","map","opt","right","top","transform","addOption","_c4","nodeTypes","message","media","MediaNode","condition","ConditionNode","interval","IntervalNode","chatgpt","ChatGPTNode","api","APINode","updateCRM","UpdateCRMNode","createRecord","CreateRecordNode","transfer","TransferNode","schedule","ScheduleNode","end","EndNode","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","executeFlow","nodeIdsWithIncoming","Set","startNodes","filter","n","has","length","console","log","forEach","startNode","executeNode","node","visited","add","url","conditionType","nextEdges","source","edge","nextNode","find","onConnect","connection","eds","isValidConnection","sourceNode","hasExistingConnection","some","deleteNode","nodeId","nds","updateNode","newData","prevNodes","createNode","initialData","prev","updateFunctions","newNode","x","Math","random","y","categories","title","items","label","nodeType","CategoryBlock","marginBottom","flexWrap","item","cat","connectionLineStyle","stroke","strokeWidth","snapToGrid","snapGrid","gap","_c5","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge\r\n} from 'reactflow';\r\n\r\n// =============== ESTILOS ===============\r\nconst sidebarStyles = {\r\n  width: '260px',\r\n  backgroundColor: '#fff',\r\n  borderRadius: '8px',\r\n  padding: '20px',\r\n  margin: '10px',\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n};\r\n\r\nconst flowContainerStyles = {\r\n  flex: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n  base: {\r\n    padding: '20px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '8px',\r\n    border: '2px solid #2684ff',\r\n    minWidth: '300px',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  input: {\r\n    margin: '10px 0',\r\n    padding: '8px',\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ddd'\r\n  },\r\n  section: {\r\n    margin: '15px 0',\r\n    padding: '10px',\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: '6px',\r\n    width: '100%'\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    margin: '5px 0'\r\n  },\r\n  deleteButton: {\r\n    background: 'red',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '50%',\r\n    width: '24px',\r\n    height: '24px',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '10px'\r\n  }\r\n};\r\n\r\nconst handleStyle = {\r\n  width: '15px',\r\n  height: '15px',\r\n  backgroundColor: '#2684ff',\r\n  border: '2px solid #fff',\r\n  borderRadius: '50%'\r\n};\r\n\r\nconst chipStyle = {\r\n  margin: '5px',\r\n  padding: '6px 12px',\r\n  border: '1px solid #ddd',\r\n  borderRadius: '20px',\r\n  background: '#f8f9fa',\r\n  cursor: 'pointer',\r\n  fontSize: '14px'\r\n};\r\n\r\n// =============== COMPONENTES DE NÓS ===============\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>💬 Mensagem</h4>\r\n    <textarea\r\n      style={{ ...nodeStyles.input, height: '100px' }}\r\n      value={data.content}\r\n      onChange={(e) => data.updateContent(e.target.value)}\r\n      placeholder=\"Escreva sua mensagem...\"\r\n    />\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => {\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...data.options];\r\n    newOptions[index] = value;\r\n    data.updateOptions(newOptions);\r\n  };\r\n\r\n  return (\r\n    <div style={nodeStyles.base}>\r\n      <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n      <h4>❓ Pergunta</h4>\r\n      <input\r\n        type=\"text\"\r\n        style={nodeStyles.input}\r\n        value={data.question}\r\n        onChange={(e) => data.updateQuestion(e.target.value)}\r\n        placeholder=\"Digite a pergunta\"\r\n      />\r\n      <div style={nodeStyles.section}>\r\n        <h5>Opções de Resposta:</h5>\r\n        {data.options.map((opt, index) => (\r\n          <div key={index} style={{ margin: '5px 0', position: 'relative' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={opt}\r\n              style={{ ...nodeStyles.input, width: '80%' }}\r\n              onChange={(e) => handleOptionChange(index, e.target.value)}\r\n            />\r\n            <Handle\r\n              type=\"source\"\r\n              position=\"right\"\r\n              id={`option-${index}`}\r\n              style={{\r\n                ...handleStyle,\r\n                right: '-8px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)'\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n      </div>\r\n      <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n        🗑️\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Outros componentes de nó (MediaNode, ConditionNode, etc.) permanecem os mesmos...\r\n\r\n// REGISTRO DE TIPOS\r\nconst nodeTypes = {\r\n  message: MessageNode,\r\n  question: QuestionNode,\r\n  media: MediaNode,\r\n  condition: ConditionNode,\r\n  interval: IntervalNode,\r\n  chatgpt: ChatGPTNode,\r\n  api: APINode,\r\n  updateCRM: UpdateCRMNode,\r\n  createRecord: CreateRecordNode,\r\n  transfer: TransferNode,\r\n  schedule: ScheduleNode,\r\n  end: EndNode\r\n};\r\n\r\nexport default function FlowEditor() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [idCounter, setIdCounter] = useState(0);\r\n\r\n  // Função para executar o fluxo (será chamada pelo Bitrix24)\r\n  const executeFlow = useCallback(() => {\r\n    const nodeIdsWithIncoming = new Set(edges.map((e) => e.target));\r\n    const startNodes = nodes.filter((n) => !nodeIdsWithIncoming.has(n.id));\r\n\r\n    if (startNodes.length === 0) {\r\n      console.log('[FLOW] Nenhum nó inicial encontrado.');\r\n      return;\r\n    }\r\n\r\n    console.log('[FLOW] Iniciando fluxo...');\r\n    startNodes.forEach((startNode) => {\r\n      executeNode(startNode);\r\n    });\r\n  }, [nodes, edges]);\r\n\r\n  // Função para executar um nó específico\r\n  const executeNode = useCallback((node, visited = new Set()) => {\r\n    if (visited.has(node.id)) return;\r\n    visited.add(node.id);\r\n\r\n    switch (node.type) {\r\n      case 'message':\r\n        console.log('[FLOW] Enviando mensagem:', node.data.content);\r\n        break;\r\n      case 'api':\r\n        console.log('[FLOW] Chamando API:', node.data.url);\r\n        break;\r\n      case 'condition':\r\n        console.log('[FLOW] Verificando condição:', node.data.conditionType);\r\n        break;\r\n      default:\r\n        console.log('[FLOW] Executando nó:', node.type);\r\n        break;\r\n    }\r\n\r\n    // Executar nós conectados\r\n    const nextEdges = edges.filter((e) => e.source === node.id);\r\n    nextEdges.forEach((edge) => {\r\n      const nextNode = nodes.find((n) => n.id === edge.target);\r\n      if (nextNode) {\r\n        executeNode(nextNode, visited);\r\n      }\r\n    });\r\n  }, [nodes, edges]);\r\n\r\n  // Ao conectar nós\r\n  const onConnect = useCallback(\r\n    (connection) => setEdges((eds) => addEdge(connection, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  // Validação de conexões\r\n  const isValidConnection = useCallback(\r\n    (connection) => {\r\n      const sourceNode = nodes.find((node) => node.id === connection.source);\r\n      if (sourceNode?.type === 'question' || sourceNode?.type === 'condition') {\r\n        return true;\r\n      }\r\n      const hasExistingConnection = edges.some(\r\n        (edge) => edge.source === connection.source\r\n      );\r\n      return !hasExistingConnection;\r\n    },\r\n    [nodes, edges]\r\n  );\r\n\r\n  // Deletar nó\r\n  const deleteNode = useCallback(\r\n    (nodeId) => {\r\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n      setEdges((eds) =>\r\n        eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n      );\r\n    },\r\n    [setNodes, setEdges]\r\n  );\r\n\r\n  // Atualizar dados do nó\r\n  const updateNode = useCallback(\r\n    (nodeId, newData) => {\r\n      setNodes((prevNodes) =>\r\n        prevNodes.map((node) =>\r\n          node.id === nodeId\r\n            ? { ...node, data: { ...node.data, ...newData } }\r\n            : node\r\n        )\r\n      );\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Criar nó\r\n  const createNode = useCallback(\r\n    (type, initialData) => {\r\n      const nodeId = `${type}-${idCounter}`;\r\n      setIdCounter((prev) => prev + 1);\r\n\r\n      const updateFunctions = {\r\n        message: {\r\n          updateContent: (content) => updateNode(nodeId, { content }),\r\n          onDelete: deleteNode\r\n        },\r\n        question: {\r\n          updateQuestion: (question) => updateNode(nodeId, { question }),\r\n          addOption: () => {\r\n            setNodes((prevNodes) =>\r\n              prevNodes.map((node) =>\r\n                node.id === nodeId\r\n                  ? {\r\n                      ...node,\r\n                      data: {\r\n                        ...node.data,\r\n                        options: [\r\n                          ...(node.data.options || []),\r\n                          `Opção ${node.data.options.length + 1}`\r\n                        ]\r\n                      }\r\n                    }\r\n                  : node\r\n              )\r\n            );\r\n          },\r\n          updateOptions: (options) => updateNode(nodeId, { options }),\r\n          onDelete: deleteNode\r\n        },\r\n        // Outros tipos de nós...\r\n      };\r\n\r\n      const newNode = {\r\n        id: nodeId,\r\n        type,\r\n        data: { ...initialData, ...updateFunctions[type] },\r\n        position: { x: Math.random() * 400, y: Math.random() * 400 }\r\n      };\r\n\r\n      setNodes((nds) => [...nds, newNode]);\r\n    },\r\n    [idCounter, updateNode, deleteNode, setNodes]\r\n  );\r\n\r\n  // Categorias da sidebar\r\n  const categories = [\r\n    {\r\n      title: 'Conversa',\r\n      items: [\r\n        { label: 'Mensagem', nodeType: 'message', initialData: { content: '' } },\r\n        {\r\n          label: 'Pergunta',\r\n          nodeType: 'question',\r\n          initialData: { question: '', options: [] }\r\n        },\r\n        { label: 'Mídia', nodeType: 'media', initialData: { url: '' } }\r\n      ]\r\n    },\r\n    // Outras categorias...\r\n  ];\r\n\r\n  // Render de cada categoria na sidebar\r\n  function CategoryBlock({ title, items }) {\r\n    return (\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h4 style={{ marginBottom: '10px' }}>{title}</h4>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n          {items.map((item) => (\r\n            <button\r\n              key={item.label}\r\n              style={chipStyle}\r\n              onClick={() => createNode(item.nodeType, item.initialData)}\r\n            >\r\n              {item.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      {/* SIDEBAR */}\r\n      <div style={sidebarStyles}>\r\n        <h3 style={{ marginBottom: '20px' }}>Qual a interação que deseja?</h3>\r\n\r\n        {categories.map((cat) => (\r\n          <CategoryBlock key={cat.title} title={cat.title} items={cat.items} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* ÁREA DO FLUXO */}\r\n      <div style={flowContainerStyles}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          nodeTypes={nodeTypes}\r\n          connectionLineStyle={{ stroke: '#ddd', strokeWidth: 2 }}\r\n          snapToGrid={true}\r\n          snapGrid={[15, 15]}\r\n          isValidConnection={isValidConnection}\r\n        >\r\n          <MiniMap />\r\n          <Controls />\r\n          <Background color=\"#aaa\" gap={16} />\r\n        </ReactFlow>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}