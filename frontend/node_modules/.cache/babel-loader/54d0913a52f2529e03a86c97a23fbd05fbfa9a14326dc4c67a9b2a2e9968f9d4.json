{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'react-flow-renderer';\n\n// Estilos atualizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flowContainerStyles = {\n  width: '100%',\n  height: '100vh',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    width: '100%'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '10px'\n  }\n};\n\n// Componentes dos Nós com React.memo para otimização\nconst MessageNode = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 5\n}, this));\n_c2 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => {\n  // Função para criar um novo caminho\n  const handleAddOption = () => {\n    const currentOptions = data.options || [];\n    const newOption = `Opção ${currentOptions.length + 1}`;\n    data.addOption(newOption); // Adiciona uma nova opção\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.base,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u2753 Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: nodeStyles.input,\n      value: data.question,\n      onChange: e => data.updateQuestion(e.target.value),\n      placeholder: \"Digite a pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nodeStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Op\\xE7\\xF5es de Resposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: opt,\n          style: {\n            ...nodeStyles.input,\n            width: '80%'\n          },\n          onChange: e => data.updateOption(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: \"right\",\n          id: `option-${index}`,\n          style: {\n            left: '85%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddOption,\n        children: \"+ Adicionar Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.deleteButton,\n      onClick: () => data.onDelete(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n});\n_c4 = QuestionNode;\nconst MediaNode = /*#__PURE__*/React.memo(_c5 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDDBC\\uFE0F M\\xEDdia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: e => data.handleFileUpload(e.target.files[0]),\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Ou insira URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: e => data.updateUrl(e.target.value),\n      placeholder: \"https://exemplo.com/imagem.jpg\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 129,\n  columnNumber: 5\n}, this));\n\n// Outros nós omitidos para brevidade...\n_c6 = MediaNode;\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    const targetNode = nodes.find(node => node.id === connection.target);\n\n    // Permite múltiplas conexões para perguntas e condições\n    if (sourceNode.type === 'question' || sourceNode.type === 'condition') {\n      return true;\n    }\n\n    // Verifica se o nó de origem já tem uma conexão\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: newOption => {\n          const currentOptions = initialData.options || [];\n          updateNode(nodeId, {\n            options: [...currentOptions, newOption]\n          });\n        },\n        updateOption: (index, value) => {\n          const newOptions = [...(initialData.options || [])];\n          newOptions[index] = value;\n          updateNode(nodeId, {\n            options: newOptions\n          });\n        },\n        onDelete: deleteNode\n      },\n      media: {\n        handleFileUpload: file => updateNode(nodeId, {\n          file\n        }),\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        onDelete: deleteNode\n      },\n      condition: {\n        updateConditionType: conditionType => updateNode(nodeId, {\n          conditionType\n        }),\n        updateField: field => updateNode(nodeId, {\n          field\n        }),\n        updateComparison: comparison => updateNode(nodeId, {\n          comparison\n        }),\n        onDelete: deleteNode\n      },\n      interval: {\n        updateDuration: duration => updateNode(nodeId, {\n          duration\n        }),\n        onDelete: deleteNode\n      },\n      chatgpt: {\n        updateApiKey: apiKey => updateNode(nodeId, {\n          apiKey\n        }),\n        updateInstructions: instructions => updateNode(nodeId, {\n          instructions\n        }),\n        onDelete: deleteNode\n      },\n      api: {\n        updateMethod: method => updateNode(nodeId, {\n          method\n        }),\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        updateHeaders: headers => updateNode(nodeId, {\n          headers\n        }),\n        updateBody: body => updateNode(nodeId, {\n          body\n        }),\n        onDelete: deleteNode\n      },\n      updateCRM: {\n        updateEntity: entity => updateNode(nodeId, {\n          entity\n        }),\n        updateField: field => updateNode(nodeId, {\n          field\n        }),\n        updateValue: value => updateNode(nodeId, {\n          value\n        }),\n        onDelete: deleteNode\n      },\n      createRecord: {\n        updateEntity: entity => updateNode(nodeId, {\n          entity\n        }),\n        updateStage: stage => updateNode(nodeId, {\n          stage\n        }),\n        updateFields: fields => updateNode(nodeId, {\n          fields\n        }),\n        onDelete: deleteNode\n      }\n    };\n    return {\n      id: nodeId,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      }\n    };\n  }, [idCounter, updateNode, deleteNode]);\n  const addNode = useCallback(type => {\n    const nodeConfig = {\n      message: {\n        content: ''\n      },\n      question: {\n        question: '',\n        options: ['Sim', 'Não']\n      },\n      media: {\n        url: '',\n        file: null\n      },\n      condition: {\n        conditionType: 'cadastro',\n        field: '',\n        comparison: ''\n      },\n      interval: {\n        duration: 300\n      },\n      chatgpt: {\n        apiKey: '',\n        instructions: ''\n      },\n      api: {\n        method: 'GET',\n        url: '',\n        headers: '',\n        body: ''\n      },\n      updateCRM: {\n        entity: 'lead',\n        field: '',\n        value: ''\n      },\n      createRecord: {\n        entity: 'lead',\n        stage: 'new',\n        fields: '{}'\n      }\n    };\n    setNodes(prevNodes => [...prevNodes, createNode(type, nodeConfig[type])]);\n  }, [createNode, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px',\n        padding: '20px',\n        backgroundColor: '#f8f9fa',\n        borderRight: '1px solid #ddd',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ferramentas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('message'),\n          children: \"Nova Mensagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('question'),\n          children: \"Nova Pergunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('media'),\n          children: \"Nova M\\xEDdia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('condition'),\n          children: \"Nova Condi\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('interval'),\n          children: \"Novo Intervalo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('chatgpt'),\n          children: \"Chat GPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('api'),\n          children: \"API Externa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('updateCRM'),\n          children: \"Atualizar CRM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('createRecord'),\n          children: \"Criar Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        isValidConnection: isValidConnection,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n_s(FlowEditor, \"whyRLpu3p1tZEk6faPA/ydCtt3M=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c7 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"MessageNode$React.memo\");\n$RefreshReg$(_c2, \"MessageNode\");\n$RefreshReg$(_c3, \"QuestionNode$React.memo\");\n$RefreshReg$(_c4, \"QuestionNode\");\n$RefreshReg$(_c5, \"MediaNode$React.memo\");\n$RefreshReg$(_c6, \"MediaNode\");\n$RefreshReg$(_c7, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","flowContainerStyles","width","height","position","overflow","nodeStyles","base","padding","backgroundColor","borderRadius","border","minWidth","boxShadow","display","flexDirection","alignItems","input","margin","section","select","deleteButton","background","color","cursor","justifyContent","marginTop","MessageNode","memo","_c","id","data","style","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","content","onChange","e","updateContent","target","placeholder","onClick","onDelete","_c2","QuestionNode","_c3","handleAddOption","currentOptions","options","newOption","length","addOption","question","updateQuestion","map","opt","index","updateOption","left","_c4","MediaNode","_c5","handleFileUpload","files","url","updateUrl","_c6","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","onConnect","params","eds","isValidConnection","connection","sourceNode","find","node","source","targetNode","hasExistingConnection","some","edge","deleteNode","nodeId","nds","filter","updateNode","newData","prevNodes","createNode","initialData","prev","updateFunctions","message","newOptions","media","file","condition","updateConditionType","conditionType","updateField","field","updateComparison","comparison","interval","updateDuration","duration","chatgpt","updateApiKey","apiKey","updateInstructions","instructions","api","updateMethod","method","updateHeaders","headers","updateBody","body","updateCRM","updateEntity","entity","updateValue","createRecord","updateStage","stage","updateFields","fields","x","Math","random","y","draggable","addNode","nodeConfig","borderRight","overflowY","gap","nodeTypes","fitView","_c7","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n    Handle,\r\n    useNodesState,\r\n    useEdgesState,\r\n    addEdge\r\n} from 'react-flow-renderer';\r\n\r\n// Estilos atualizados\r\nconst flowContainerStyles = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    position: 'relative',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n    base: {\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        border: '2px solid #2684ff',\r\n        minWidth: '300px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        margin: '10px 0',\r\n        padding: '8px',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd'\r\n    },\r\n    section: {\r\n        margin: '15px 0',\r\n        padding: '10px',\r\n        backgroundColor: '#f8f9fa',\r\n        borderRadius: '6px',\r\n        width: '100%'\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        padding: '8px',\r\n        margin: '5px 0'\r\n    },\r\n    deleteButton: {\r\n        background: 'red',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '50%',\r\n        width: '24px',\r\n        height: '24px',\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: '10px'\r\n    }\r\n};\r\n\r\n// Componentes dos Nós com React.memo para otimização\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" />\r\n        <h4>💬 Mensagem</h4>\r\n        <textarea\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n            value={data.content}\r\n            onChange={(e) => data.updateContent(e.target.value)}\r\n            placeholder=\"Escreva sua mensagem...\"\r\n        />\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" />\r\n    </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => {\r\n    // Função para criar um novo caminho\r\n    const handleAddOption = () => {\r\n        const currentOptions = data.options || [];\r\n        const newOption = `Opção ${currentOptions.length + 1}`;\r\n        data.addOption(newOption); // Adiciona uma nova opção\r\n    };\r\n\r\n    return (\r\n        <div style={nodeStyles.base}>\r\n            <Handle type=\"target\" position=\"left\" />\r\n            <h4>❓ Pergunta</h4>\r\n            <input\r\n                type=\"text\"\r\n                style={nodeStyles.input}\r\n                value={data.question}\r\n                onChange={(e) => data.updateQuestion(e.target.value)}\r\n                placeholder=\"Digite a pergunta\"\r\n            />\r\n            <div style={nodeStyles.section}>\r\n                <h5>Opções de Resposta:</h5>\r\n                {data.options.map((opt, index) => (\r\n                    <div key={index} style={{ margin: '5px 0' }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={opt}\r\n                            style={{ ...nodeStyles.input, width: '80%' }}\r\n                            onChange={(e) => data.updateOption(index, e.target.value)}\r\n                        />\r\n                        <Handle\r\n                            type=\"source\"\r\n                            position=\"right\"\r\n                            id={`option-${index}`}\r\n                            style={{ left: '85%' }}\r\n                        />\r\n                    </div>\r\n                ))}\r\n                <button onClick={handleAddOption}>+ Adicionar Opção</button>\r\n            </div>\r\n            <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n            <Handle type=\"source\" position=\"right\" />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst MediaNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" />\r\n        <h4>🖼️ Mídia</h4>\r\n        <input\r\n            type=\"file\"\r\n            onChange={(e) => data.handleFileUpload(e.target.files[0])}\r\n            style={nodeStyles.input}\r\n        />\r\n        <div style={nodeStyles.section}>\r\n            <h5>Ou insira URL:</h5>\r\n            <input\r\n                type=\"text\"\r\n                value={data.url}\r\n                onChange={(e) => data.updateUrl(e.target.value)}\r\n                placeholder=\"https://exemplo.com/imagem.jpg\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" />\r\n    </div>\r\n));\r\n\r\n// Outros nós omitidos para brevidade...\r\n\r\nconst FlowEditor = () => {\r\n    const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n    const [idCounter, setIdCounter] = useState(0);\r\n\r\n    const onConnect = useCallback(\r\n        (params) => setEdges((eds) => addEdge(params, eds)),\r\n        [setEdges]\r\n    );\r\n\r\n    const isValidConnection = useCallback((connection) => {\r\n        const sourceNode = nodes.find((node) => node.id === connection.source);\r\n        const targetNode = nodes.find((node) => node.id === connection.target);\r\n\r\n        // Permite múltiplas conexões para perguntas e condições\r\n        if (sourceNode.type === 'question' || sourceNode.type === 'condition') {\r\n            return true;\r\n        }\r\n\r\n        // Verifica se o nó de origem já tem uma conexão\r\n        const hasExistingConnection = edges.some(\r\n            (edge) => edge.source === connection.source\r\n        );\r\n\r\n        return !hasExistingConnection;\r\n    }, [nodes, edges]);\r\n\r\n    const deleteNode = useCallback((nodeId) => {\r\n        setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n        setEdges((eds) => eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId));\r\n    }, [setNodes, setEdges]);\r\n\r\n    const updateNode = useCallback((nodeId, newData) => {\r\n        setNodes((prevNodes) =>\r\n            prevNodes.map((node) =>\r\n                node.id === nodeId ? { ...node, data: { ...node.data, ...newData } } : node\r\n            )\r\n        );\r\n    }, [setNodes]);\r\n\r\n    const createNode = useCallback((type, initialData) => {\r\n        const nodeId = `${type}-${idCounter}`;\r\n        setIdCounter((prev) => prev + 1);\r\n\r\n        const updateFunctions = {\r\n            message: {\r\n                updateContent: (content) => updateNode(nodeId, { content }),\r\n                onDelete: deleteNode,\r\n            },\r\n            question: {\r\n                updateQuestion: (question) => updateNode(nodeId, { question }),\r\n                addOption: (newOption) => {\r\n                    const currentOptions = initialData.options || [];\r\n                    updateNode(nodeId, { options: [...currentOptions, newOption] });\r\n                },\r\n                updateOption: (index, value) => {\r\n                    const newOptions = [...(initialData.options || [])];\r\n                    newOptions[index] = value;\r\n                    updateNode(nodeId, { options: newOptions });\r\n                },\r\n                onDelete: deleteNode,\r\n            },\r\n            media: {\r\n                handleFileUpload: (file) => updateNode(nodeId, { file }),\r\n                updateUrl: (url) => updateNode(nodeId, { url }),\r\n                onDelete: deleteNode,\r\n            },\r\n            condition: {\r\n                updateConditionType: (conditionType) => updateNode(nodeId, { conditionType }),\r\n                updateField: (field) => updateNode(nodeId, { field }),\r\n                updateComparison: (comparison) => updateNode(nodeId, { comparison }),\r\n                onDelete: deleteNode,\r\n            },\r\n            interval: {\r\n                updateDuration: (duration) => updateNode(nodeId, { duration }),\r\n                onDelete: deleteNode,\r\n            },\r\n            chatgpt: {\r\n                updateApiKey: (apiKey) => updateNode(nodeId, { apiKey }),\r\n                updateInstructions: (instructions) => updateNode(nodeId, { instructions }),\r\n                onDelete: deleteNode,\r\n            },\r\n            api: {\r\n                updateMethod: (method) => updateNode(nodeId, { method }),\r\n                updateUrl: (url) => updateNode(nodeId, { url }),\r\n                updateHeaders: (headers) => updateNode(nodeId, { headers }),\r\n                updateBody: (body) => updateNode(nodeId, { body }),\r\n                onDelete: deleteNode,\r\n            },\r\n            updateCRM: {\r\n                updateEntity: (entity) => updateNode(nodeId, { entity }),\r\n                updateField: (field) => updateNode(nodeId, { field }),\r\n                updateValue: (value) => updateNode(nodeId, { value }),\r\n                onDelete: deleteNode,\r\n            },\r\n            createRecord: {\r\n                updateEntity: (entity) => updateNode(nodeId, { entity }),\r\n                updateStage: (stage) => updateNode(nodeId, { stage }),\r\n                updateFields: (fields) => updateNode(nodeId, { fields }),\r\n                onDelete: deleteNode,\r\n            },\r\n        };\r\n\r\n        return {\r\n            id: nodeId,\r\n            type,\r\n            position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n            draggable: true,\r\n            data: {\r\n                ...initialData,\r\n                ...updateFunctions[type],\r\n            },\r\n        };\r\n    }, [idCounter, updateNode, deleteNode]);\r\n\r\n    const addNode = useCallback((type) => {\r\n        const nodeConfig = {\r\n            message: { content: '' },\r\n            question: { question: '', options: ['Sim', 'Não'] },\r\n            media: { url: '', file: null },\r\n            condition: { conditionType: 'cadastro', field: '', comparison: '' },\r\n            interval: { duration: 300 },\r\n            chatgpt: { apiKey: '', instructions: '' },\r\n            api: { method: 'GET', url: '', headers: '', body: '' },\r\n            updateCRM: { entity: 'lead', field: '', value: '' },\r\n            createRecord: { entity: 'lead', stage: 'new', fields: '{}' },\r\n        };\r\n        setNodes((prevNodes) => [...prevNodes, createNode(type, nodeConfig[type])]);\r\n    }, [createNode, setNodes]);\r\n\r\n    return (\r\n        <div style={{ height: '100vh', display: 'flex' }}>\r\n            <div style={{\r\n                width: '250px',\r\n                padding: '20px',\r\n                backgroundColor: '#f8f9fa',\r\n                borderRight: '1px solid #ddd',\r\n                overflowY: 'auto'\r\n            }}>\r\n                <h3>Ferramentas</h3>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                    <button onClick={() => addNode('message')}>Nova Mensagem</button>\r\n                    <button onClick={() => addNode('question')}>Nova Pergunta</button>\r\n                    <button onClick={() => addNode('media')}>Nova Mídia</button>\r\n                    <button onClick={() => addNode('condition')}>Nova Condição</button>\r\n                    <button onClick={() => addNode('interval')}>Novo Intervalo</button>\r\n                    <button onClick={() => addNode('chatgpt')}>Chat GPT</button>\r\n                    <button onClick={() => addNode('api')}>API Externa</button>\r\n                    <button onClick={() => addNode('updateCRM')}>Atualizar CRM</button>\r\n                    <button onClick={() => addNode('createRecord')}>Criar Cadastro</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Container para o React Flow */}\r\n            <div style={flowContainerStyles}>\r\n                <ReactFlow\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onConnect={onConnect}\r\n                    isValidConnection={isValidConnection}\r\n                    nodeTypes={nodeTypes}\r\n                    fitView\r\n                >\r\n                    <MiniMap />\r\n                    <Controls />\r\n                    <Background />\r\n                </ReactFlow>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlowEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}