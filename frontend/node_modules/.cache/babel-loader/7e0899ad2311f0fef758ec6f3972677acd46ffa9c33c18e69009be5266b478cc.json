{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport { saveFlow } from './services';\n\n// Estilos atualizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flowContainerStyles = {\n  width: '100%',\n  height: '100vh',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  }\n};\n\n// Componentes dos Nós com React.memo para otimização\nconst MessageNode = /*#__PURE__*/React.memo(_c = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: data.updateContent,\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this));\n_c2 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c3 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2753 Pergunta\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    style: nodeStyles.input,\n    value: data.question,\n    onChange: data.updateQuestion,\n    placeholder: \"Digite a pergunta\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Op\\xE7\\xF5es de Resposta:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: opt,\n        style: {\n          ...nodeStyles.input,\n          width: '80%'\n        },\n        onChange: e => data.updateOption(index, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"bottom\",\n        id: `option-${index}`,\n        style: {\n          left: '85%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: data.addOption,\n      children: \"+ Adicionar Op\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 5\n}, this));\n_c4 = QuestionNode;\nconst MediaNode = /*#__PURE__*/React.memo(_c5 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDDBC\\uFE0F M\\xEDdia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: e => data.handleFileUpload(e.target.files[0]),\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Ou insira URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: data.updateUrl,\n      placeholder: \"https://exemplo.com/imagem.jpg\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 5\n}, this));\n_c6 = MediaNode;\nconst ConditionNode = /*#__PURE__*/React.memo(_c7 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2696\\uFE0F Condi\\xE7\\xE3o\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: data.conditionType,\n    onChange: data.updateConditionType,\n    style: nodeStyles.select,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"cadastro\",\n      children: \"Verificar Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"valor\",\n      children: \"Comparar Valores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this), data.conditionType === 'cadastro' && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.field,\n      onChange: data.updateField,\n      placeholder: \"Campo para verifica\\xE7\\xE3o (ex: PHONE)\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 13\n  }, this), data.conditionType === 'valor' && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.comparison,\n      onChange: data.updateComparison,\n      placeholder: \"Express\\xE3o (ex: VALUE > 100)\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '15px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"bottom\",\n      id: \"true\",\n      style: {\n        left: '30%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"bottom\",\n      id: \"false\",\n      style: {\n        left: '70%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 122,\n  columnNumber: 5\n}, this));\n_c8 = ConditionNode;\nconst IntervalNode = /*#__PURE__*/React.memo(_c9 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u23F1\\uFE0F Intervalo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: data.duration,\n      onChange: data.updateDuration,\n      placeholder: \"Dura\\xE7\\xE3o em segundos\",\n      min: \"1\",\n      max: \"7200\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: \"M\\xE1ximo: 2 horas (7200 segundos)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 166,\n  columnNumber: 5\n}, this));\n_c10 = IntervalNode;\nconst ChatGPTNode = /*#__PURE__*/React.memo(_c11 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83E\\uDD16 Chat GPT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    value: data.apiKey,\n    onChange: data.updateApiKey,\n    placeholder: \"Insira sua API Key da OpenAI\",\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    value: data.instructions,\n    onChange: data.updateInstructions,\n    placeholder: \"Instru\\xE7\\xF5es para o assistente...\",\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 186,\n  columnNumber: 5\n}, this));\n_c12 = ChatGPTNode;\nconst APINode = /*#__PURE__*/React.memo(_c13 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83C\\uDF10 API Externa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.method,\n      onChange: data.updateMethod,\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GET\",\n        children: \"GET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"POST\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"PUT\",\n        children: \"PUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"DELETE\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: data.updateUrl,\n      placeholder: \"URL da API\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Cabe\\xE7alhos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.headers,\n      onChange: data.updateHeaders,\n      placeholder: \"JSON de cabe\\xE7alhos\",\n      style: {\n        ...nodeStyles.input,\n        height: '80px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Corpo da Requisi\\xE7\\xE3o:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.body,\n      onChange: data.updateBody,\n      placeholder: \"JSON do corpo\",\n      style: {\n        ...nodeStyles.input,\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 207,\n  columnNumber: 5\n}, this));\n_c14 = APINode;\nconst UpdateCRMNode = /*#__PURE__*/React.memo(_c15 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDD04 Atualizar CRM\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.entity,\n      onChange: data.updateEntity,\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lead\",\n        children: \"Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deal\",\n        children: \"Neg\\xF3cio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"contact\",\n        children: \"Contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"company\",\n        children: \"Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.field,\n      onChange: data.updateField,\n      placeholder: \"Campo para atualizar\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.value,\n      onChange: data.updateValue,\n      placeholder: \"Novo valor\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 254,\n  columnNumber: 5\n}, this));\n_c16 = UpdateCRMNode;\nconst CreateRecordNode = /*#__PURE__*/React.memo(_c17 = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCDD Criar Cadastro\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.entity,\n      onChange: data.updateEntity,\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lead\",\n        children: \"Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deal\",\n        children: \"Neg\\xF3cio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"contact\",\n        children: \"Contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"company\",\n        children: \"Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.stage,\n      onChange: data.updateStage,\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"new\",\n        children: \"Novo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"qualified\",\n        children: \"Qualificado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"proposal\",\n        children: \"Proposta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"closed\",\n        children: \"Fechado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.fields,\n      onChange: data.updateFields,\n      placeholder: \"Campos (JSON)\",\n      style: {\n        ...nodeStyles.input,\n        height: '150px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 290,\n  columnNumber: 5\n}, this));\n_c18 = CreateRecordNode;\nconst FlowEditor = () => {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const [nodes, setNodes, onNodesChange] = useNodesState();\n  const [edges, setEdges, onEdgesChange] = useEdgesState();\n  const [idCounter, setIdCounter] = useState(0);\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => {\n      if (!Array.isArray(prevNodes)) {\n        console.error(\"Previous nodes state is not an array:\", prevNodes);\n        return; // Retorna um array vazio como fallback\n      }\n      return prevNodes.map(node => node.id === nodeId ? {\n        ...node,\n        data: {\n          ...node.data,\n          ...newData\n        }\n      } : node);\n    });\n  }, [setNodes]);\n  const createNode = _s2(useCallback(_s2((type, initialData) => {\n    var _s = $RefreshSig$();\n    _s2();\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(idCounter + 1);\n    const updateFunctions = _s(useMemo(_s(() => {\n      _s();\n      return {\n        message: {\n          updateContent: useCallback(content => updateNode(nodeId, {\n            content\n          }), [nodeId, updateNode])\n        },\n        question: {\n          updateQuestion: useCallback(question => updateNode(nodeId, {\n            question\n          }), [nodeId, updateNode]),\n          addOption: useCallback(() => {\n            const currentOptions = initialData.options || [];\n            const newOption = `Opção ${currentOptions.length + 1}`;\n            updateNode(nodeId, {\n              options: [...currentOptions, newOption]\n            });\n          }, [initialData, nodeId, updateNode]),\n          updateOption: useCallback((index, value) => {\n            const newOptions = [...(initialData.options || [])];\n            newOptions[index] = value;\n            updateNode(nodeId, {\n              options: newOptions\n            });\n          }, [initialData, nodeId, updateNode])\n        },\n        media: {\n          handleFileUpload: useCallback(file => updateNode(nodeId, {\n            file\n          }), [nodeId, updateNode]),\n          updateUrl: useCallback(url => updateNode(nodeId, {\n            url\n          }), [nodeId, updateNode])\n        },\n        condition: {\n          updateConditionType: useCallback(conditionType => updateNode(nodeId, {\n            conditionType\n          }), [nodeId, updateNode]),\n          updateField: useCallback(field => updateNode(nodeId, {\n            field\n          }), [nodeId, updateNode]),\n          updateComparison: useCallback(comparison => updateNode(nodeId, {\n            comparison\n          }), [nodeId, updateNode])\n        },\n        interval: {\n          updateDuration: useCallback(duration => updateNode(nodeId, {\n            duration\n          }), [nodeId, updateNode])\n        },\n        chatgpt: {\n          updateApiKey: useCallback(apiKey => updateNode(nodeId, {\n            apiKey\n          }), [nodeId, updateNode]),\n          updateInstructions: useCallback(instructions => updateNode(nodeId, {\n            instructions\n          }), [nodeId, updateNode])\n        },\n        api: {\n          updateMethod: useCallback(method => updateNode(nodeId, {\n            method\n          }), [nodeId, updateNode]),\n          updateUrl: useCallback(url => updateNode(nodeId, {\n            url\n          }), [nodeId, updateNode]),\n          updateHeaders: useCallback(headers => updateNode(nodeId, {\n            headers\n          }), [nodeId, updateNode]),\n          updateBody: useCallback(body => updateNode(nodeId, {\n            body\n          }), [nodeId, updateNode])\n        },\n        updateCRM: {\n          updateEntity: useCallback(entity => updateNode(nodeId, {\n            entity\n          }), [nodeId, updateNode]),\n          updateField: useCallback(field => updateNode(nodeId, {\n            field\n          }), [nodeId, updateNode]),\n          updateValue: useCallback(value => updateNode(nodeId, {\n            value\n          }), [nodeId, updateNode])\n        },\n        createRecord: {\n          updateEntity: useCallback(entity => updateNode(nodeId, {\n            entity\n          }), [nodeId, updateNode]),\n          updateStage: useCallback(stage => updateNode(nodeId, {\n            stage\n          }), [nodeId, updateNode]),\n          updateFields: useCallback(fields => updateNode(nodeId, {\n            fields\n          }), [nodeId, updateNode])\n        }\n      };\n    }, \"KQ1i1Me9gLsOERH/sP9SPPRc+BA=\"), [initialData, nodeId, updateNode]), \"KQ1i1Me9gLsOERH/sP9SPPRc+BA=\");\n    return {\n      id: nodeId,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      data: {\n        ...initialData,\n        ...updateFunctions\n      }\n    };\n  }, \"2k6ISDG6jJUHF/yBBkMs39raj8s=\"), [idCounter, updateNode]), \"2k6ISDG6jJUHF/yBBkMs39raj8s=\");\n  const addNode = useCallback(type => {\n    const nodeConfig = {\n      message: {\n        content: ''\n      },\n      question: {\n        question: '',\n        options: ['Sim', 'Não']\n      },\n      media: {\n        url: '',\n        file: null\n      },\n      condition: {\n        conditionType: 'cadastro',\n        field: '',\n        comparison: ''\n      },\n      interval: {\n        duration: 300\n      },\n      chatgpt: {\n        apiKey: '',\n        instructions: ''\n      },\n      api: {\n        method: 'GET',\n        url: '',\n        headers: '',\n        body: ''\n      },\n      updateCRM: {\n        entity: 'lead',\n        field: '',\n        value: ''\n      },\n      createRecord: {\n        entity: 'lead',\n        stage: 'new',\n        fields: '{}'\n      }\n    };\n    setNodes(prevNodes => [...(prevNodes || []), createNode(type, nodeConfig[type])]);\n  }, [createNode, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px',\n        padding: '20px',\n        backgroundColor: '#f8f9fa',\n        borderRight: '1px solid #ddd',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ferramentas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('message'),\n          children: \"Nova Mensagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('question'),\n          children: \"Nova Pergunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('media'),\n          children: \"Nova M\\xEDdia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('condition'),\n          children: \"Nova Condi\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('interval'),\n          children: \"Novo Intervalo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('chatgpt'),\n          children: \"Chat GPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('api'),\n          children: \"API Externa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('updateCRM'),\n          children: \"Atualizar CRM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNode('createRecord'),\n          children: \"Criar Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow\n      // key={nodes.length} // Você pode tentar descomentar isso se ainda tiver problemas de renderização\n      , {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        nodeTypes: {\n          message: MessageNode,\n          question: QuestionNode,\n          media: MediaNode,\n          condition: ConditionNode,\n          interval: IntervalNode,\n          chatgpt: ChatGPTNode,\n          api: APINode,\n          updateCRM: UpdateCRMNode,\n          createRecord: CreateRecordNode\n        },\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 9\n  }, this);\n};\n_s3(FlowEditor, \"Rd9dTV9gMZNK2Uuay3H2cOjqMdU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c19 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"MessageNode$React.memo\");\n$RefreshReg$(_c2, \"MessageNode\");\n$RefreshReg$(_c3, \"QuestionNode$React.memo\");\n$RefreshReg$(_c4, \"QuestionNode\");\n$RefreshReg$(_c5, \"MediaNode$React.memo\");\n$RefreshReg$(_c6, \"MediaNode\");\n$RefreshReg$(_c7, \"ConditionNode$React.memo\");\n$RefreshReg$(_c8, \"ConditionNode\");\n$RefreshReg$(_c9, \"IntervalNode$React.memo\");\n$RefreshReg$(_c10, \"IntervalNode\");\n$RefreshReg$(_c11, \"ChatGPTNode$React.memo\");\n$RefreshReg$(_c12, \"ChatGPTNode\");\n$RefreshReg$(_c13, \"APINode$React.memo\");\n$RefreshReg$(_c14, \"APINode\");\n$RefreshReg$(_c15, \"UpdateCRMNode$React.memo\");\n$RefreshReg$(_c16, \"UpdateCRMNode\");\n$RefreshReg$(_c17, \"CreateRecordNode$React.memo\");\n$RefreshReg$(_c18, \"CreateRecordNode\");\n$RefreshReg$(_c19, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","saveFlow","jsxDEV","_jsxDEV","flowContainerStyles","width","height","position","overflow","nodeStyles","base","padding","backgroundColor","borderRadius","border","minWidth","boxShadow","input","margin","section","select","MessageNode","memo","_c","data","style","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","content","onChange","updateContent","placeholder","_c2","QuestionNode","_c3","question","updateQuestion","options","map","opt","index","e","updateOption","target","id","left","onClick","addOption","_c4","MediaNode","_c5","handleFileUpload","files","url","updateUrl","_c6","ConditionNode","_c7","conditionType","updateConditionType","field","updateField","comparison","updateComparison","display","justifyContent","marginTop","_c8","IntervalNode","_c9","duration","updateDuration","min","max","_c10","ChatGPTNode","_c11","apiKey","updateApiKey","instructions","updateInstructions","_c12","APINode","_c13","method","updateMethod","headers","updateHeaders","body","updateBody","_c14","UpdateCRMNode","_c15","entity","updateEntity","updateValue","_c16","CreateRecordNode","_c17","stage","updateStage","fields","updateFields","_c18","FlowEditor","_s3","_s2","$RefreshSig$","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","updateNode","nodeId","newData","prevNodes","Array","isArray","console","error","node","createNode","initialData","_s","updateFunctions","message","currentOptions","newOption","length","newOptions","media","file","condition","interval","chatgpt","api","updateCRM","createRecord","x","Math","random","y","draggable","addNode","nodeConfig","borderRight","overflowY","flexDirection","gap","nodeTypes","fitView","_c19","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport ReactFlow, {\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n    Handle,\r\n    useNodesState,\r\n    useEdgesState\r\n} from 'react-flow-renderer';\r\nimport { saveFlow } from './services';\r\n\r\n// Estilos atualizados\r\nconst flowContainerStyles = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    position: 'relative',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n    base: {\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        border: '2px solid #2684ff',\r\n        minWidth: '300px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n    },\r\n    input: {\r\n        margin: '10px 0',\r\n        padding: '8px',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd'\r\n    },\r\n    section: {\r\n        margin: '15px 0',\r\n        padding: '10px',\r\n        backgroundColor: '#f8f9fa',\r\n        borderRadius: '6px'\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        padding: '8px',\r\n        margin: '5px 0'\r\n    }\r\n};\r\n\r\n// Componentes dos Nós com React.memo para otimização\r\nconst MessageNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>💬 Mensagem</h4>\r\n        <textarea\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n            value={data.content}\r\n            onChange={data.updateContent}\r\n            placeholder=\"Escreva sua mensagem...\"\r\n        />\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>❓ Pergunta</h4>\r\n        <input\r\n            type=\"text\"\r\n            style={nodeStyles.input}\r\n            value={data.question}\r\n            onChange={data.updateQuestion}\r\n            placeholder=\"Digite a pergunta\"\r\n        />\r\n        <div style={nodeStyles.section}>\r\n            <h5>Opções de Resposta:</h5>\r\n            {data.options.map((opt, index) => (\r\n                <div key={index} style={{ margin: '5px 0' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={opt}\r\n                        style={{ ...nodeStyles.input, width: '80%' }}\r\n                        onChange={(e) => data.updateOption(index, e.target.value)}\r\n                    />\r\n                    <Handle\r\n                        type=\"source\"\r\n                        position=\"bottom\"\r\n                        id={`option-${index}`}\r\n                        style={{ left: '85%' }}\r\n                    />\r\n                </div>\r\n            ))}\r\n            <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n        </div>\r\n    </div>\r\n));\r\n\r\nconst MediaNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>🖼️ Mídia</h4>\r\n        <input\r\n            type=\"file\"\r\n            onChange={(e) => data.handleFileUpload(e.target.files[0])}\r\n            style={nodeStyles.input}\r\n        />\r\n        <div style={nodeStyles.section}>\r\n            <h5>Ou insira URL:</h5>\r\n            <input\r\n                type=\"text\"\r\n                value={data.url}\r\n                onChange={data.updateUrl}\r\n                placeholder=\"https://exemplo.com/imagem.jpg\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst ConditionNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>⚖️ Condição</h4>\r\n        <select\r\n            value={data.conditionType}\r\n            onChange={data.updateConditionType}\r\n            style={nodeStyles.select}\r\n        >\r\n            <option value=\"cadastro\">Verificar Cadastro</option>\r\n            <option value=\"valor\">Comparar Valores</option>\r\n        </select>\r\n\r\n        {data.conditionType === 'cadastro' && (\r\n            <div style={nodeStyles.section}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={data.field}\r\n                    onChange={data.updateField}\r\n                    placeholder=\"Campo para verificação (ex: PHONE)\"\r\n                    style={nodeStyles.input}\r\n                />\r\n            </div>\r\n        )}\r\n\r\n        {data.conditionType === 'valor' && (\r\n            <div style={nodeStyles.section}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={data.comparison}\r\n                    onChange={data.updateComparison}\r\n                    placeholder=\"Expressão (ex: VALUE > 100)\"\r\n                    style={nodeStyles.input}\r\n                />\r\n            </div>\r\n        )}\r\n\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '15px' }}>\r\n            <Handle type=\"source\" position=\"bottom\" id=\"true\" style={{ left: '30%' }} />\r\n            <Handle type=\"source\" position=\"bottom\" id=\"false\" style={{ left: '70%' }} />\r\n        </div>\r\n    </div>\r\n));\r\n\r\nconst IntervalNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>⏱️ Intervalo</h4>\r\n        <div style={nodeStyles.section}>\r\n            <input\r\n                type=\"number\"\r\n                value={data.duration}\r\n                onChange={data.updateDuration}\r\n                placeholder=\"Duração em segundos\"\r\n                min=\"1\"\r\n                max=\"7200\"\r\n                style={nodeStyles.input}\r\n            />\r\n            <small>Máximo: 2 horas (7200 segundos)</small>\r\n        </div>\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst ChatGPTNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>🤖 Chat GPT</h4>\r\n        <input\r\n            type=\"password\"\r\n            value={data.apiKey}\r\n            onChange={data.updateApiKey}\r\n            placeholder=\"Insira sua API Key da OpenAI\"\r\n            style={nodeStyles.input}\r\n        />\r\n        <textarea\r\n            value={data.instructions}\r\n            onChange={data.updateInstructions}\r\n            placeholder=\"Instruções para o assistente...\"\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n        />\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst APINode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>🌐 API Externa</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select\r\n                value={data.method}\r\n                onChange={data.updateMethod}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"GET\">GET</option>\r\n                <option value=\"POST\">POST</option>\r\n                <option value=\"PUT\">PUT</option>\r\n                <option value=\"DELETE\">DELETE</option>\r\n            </select>\r\n            <input\r\n                type=\"text\"\r\n                value={data.url}\r\n                onChange={data.updateUrl}\r\n                placeholder=\"URL da API\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n\r\n        <div style={nodeStyles.section}>\r\n            <h5>Cabeçalhos:</h5>\r\n            <textarea\r\n                value={data.headers}\r\n                onChange={data.updateHeaders}\r\n                placeholder=\"JSON de cabeçalhos\"\r\n                style={{ ...nodeStyles.input, height: '80px' }}\r\n            />\r\n        </div>\r\n\r\n        <div style={nodeStyles.section}>\r\n            <h5>Corpo da Requisição:</h5>\r\n            <textarea\r\n                value={data.body}\r\n                onChange={data.updateBody}\r\n                placeholder=\"JSON do corpo\"\r\n                style={{ ...nodeStyles.input, height: '100px' }}\r\n            />\r\n        </div>\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst UpdateCRMNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>🔄 Atualizar CRM</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select\r\n                value={data.entity}\r\n                onChange={data.updateEntity}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"lead\">Lead</option>\r\n                <option value=\"deal\">Negócio</option>\r\n                <option value=\"contact\">Contato</option>\r\n                <option value=\"company\">Empresa</option>\r\n            </select>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={data.field}\r\n                onChange={data.updateField}\r\n                placeholder=\"Campo para atualizar\"\r\n                style={nodeStyles.input}\r\n            />\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={data.value}\r\n                onChange={data.updateValue}\r\n                placeholder=\"Novo valor\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst CreateRecordNode = React.memo(({ data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"top\" />\r\n        <h4>📝 Criar Cadastro</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select\r\n                value={data.entity}\r\n                onChange={data.updateEntity}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"lead\">Lead</option>\r\n                <option value=\"deal\">Negócio</option>\r\n                <option value=\"contact\">Contato</option>\r\n                <option value=\"company\">Empresa</option>\r\n            </select>\r\n\r\n            <select\r\n                value={data.stage}\r\n                onChange={data.updateStage}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"new\">Novo</option>\r\n                <option value=\"qualified\">Qualificado</option>\r\n                <option value=\"proposal\">Proposta</option>\r\n                <option value=\"closed\">Fechado</option>\r\n            </select>\r\n\r\n            <textarea\r\n                value={data.fields}\r\n                onChange={data.updateFields}\r\n                placeholder=\"Campos (JSON)\"\r\n                style={{ ...nodeStyles.input, height: '150px' }}\r\n            />\r\n        </div>\r\n        <Handle type=\"source\" position=\"bottom\" />\r\n    </div>\r\n));\r\n\r\nconst FlowEditor = () => {\r\n    const [nodes, setNodes, onNodesChange] = useNodesState();\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState();\r\n    const [idCounter, setIdCounter] = useState(0);\r\n\r\n    const updateNode = useCallback((nodeId, newData) => {\r\n        setNodes(prevNodes => {\r\n            if (!Array.isArray(prevNodes)) {\r\n                console.error(\"Previous nodes state is not an array:\", prevNodes);\r\n                return; // Retorna um array vazio como fallback\r\n            }\r\n            return prevNodes.map(node =>\r\n                node.id === nodeId ? { ...node, data: { ...node.data, ...newData } } : node\r\n            );\r\n        });\r\n    }, [setNodes]);\r\n\r\n    const createNode = useCallback((type, initialData) => {\r\n        const nodeId = `${type}-${idCounter}`;\r\n        setIdCounter(idCounter + 1);\r\n\r\n        const updateFunctions = useMemo(() => {\r\n            return {\r\n                message: {\r\n                    updateContent: useCallback((content) => updateNode(nodeId, { content }), [nodeId, updateNode])\r\n                },\r\n                question: {\r\n                    updateQuestion: useCallback((question) => updateNode(nodeId, { question }), [nodeId, updateNode]),\r\n                    addOption: useCallback(() => {\r\n                        const currentOptions = initialData.options || [];\r\n                        const newOption = `Opção ${currentOptions.length + 1}`;\r\n                        updateNode(nodeId, { options: [...currentOptions, newOption] });\r\n                    }, [initialData, nodeId, updateNode]),\r\n                    updateOption: useCallback((index, value) => {\r\n                        const newOptions = [...(initialData.options || [])];\r\n                        newOptions[index] = value;\r\n                        updateNode(nodeId, { options: newOptions });\r\n                    }, [initialData, nodeId, updateNode])\r\n                },\r\n                media: {\r\n                    handleFileUpload: useCallback((file) => updateNode(nodeId, { file }), [nodeId, updateNode]),\r\n                    updateUrl: useCallback((url) => updateNode(nodeId, { url }), [nodeId, updateNode])\r\n                },\r\n                condition: {\r\n                    updateConditionType: useCallback((conditionType) => updateNode(nodeId, { conditionType }), [nodeId, updateNode]),\r\n                    updateField: useCallback((field) => updateNode(nodeId, { field }), [nodeId, updateNode]),\r\n                    updateComparison: useCallback((comparison) => updateNode(nodeId, { comparison }), [nodeId, updateNode])\r\n                },\r\n                interval: {\r\n                    updateDuration: useCallback((duration) => updateNode(nodeId, { duration }), [nodeId, updateNode])\r\n                },\r\n                chatgpt: {\r\n                    updateApiKey: useCallback((apiKey) => updateNode(nodeId, { apiKey }), [nodeId, updateNode]),\r\n                    updateInstructions: useCallback((instructions) => updateNode(nodeId, { instructions }), [nodeId, updateNode])\r\n                },\r\n                api: {\r\n                    updateMethod: useCallback((method) => updateNode(nodeId, { method }), [nodeId, updateNode]),\r\n                    updateUrl: useCallback((url) => updateNode(nodeId, { url }), [nodeId, updateNode]),\r\n                    updateHeaders: useCallback((headers) => updateNode(nodeId, { headers }), [nodeId, updateNode]),\r\n                    updateBody: useCallback((body) => updateNode(nodeId, { body }), [nodeId, updateNode])\r\n                },\r\n                updateCRM: {\r\n                    updateEntity: useCallback((entity) => updateNode(nodeId, { entity }), [nodeId, updateNode]),\r\n                    updateField: useCallback((field) => updateNode(nodeId, { field }), [nodeId, updateNode]),\r\n                    updateValue: useCallback((value) => updateNode(nodeId, { value }), [nodeId, updateNode])\r\n                },\r\n                createRecord: {\r\n                    updateEntity: useCallback((entity) => updateNode(nodeId, { entity }), [nodeId, updateNode]),\r\n                    updateStage: useCallback((stage) => updateNode(nodeId, { stage }), [nodeId, updateNode]),\r\n                    updateFields: useCallback((fields) => updateNode(nodeId, { fields }), [nodeId, updateNode])\r\n                }\r\n            };\r\n        }, [initialData, nodeId, updateNode]);\r\n\r\n        return {\r\n            id: nodeId,\r\n            type,\r\n            position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n            draggable: true,\r\n            data: {\r\n                ...initialData,\r\n                ...updateFunctions\r\n            }\r\n        };\r\n    }, [idCounter, updateNode]);\r\n\r\n    const addNode = useCallback((type) => {\r\n        const nodeConfig = {\r\n            message: { content: '' },\r\n            question: { question: '', options: ['Sim', 'Não'] },\r\n            media: { url: '', file: null },\r\n            condition: { conditionType: 'cadastro', field: '', comparison: '' },\r\n            interval: { duration: 300 },\r\n            chatgpt: { apiKey: '', instructions: '' },\r\n            api: { method: 'GET', url: '', headers: '', body: '' },\r\n            updateCRM: { entity: 'lead', field: '', value: '' },\r\n            createRecord: { entity: 'lead', stage: 'new', fields: '{}' }\r\n        };\r\n        setNodes(prevNodes => [...(prevNodes || []), createNode(type, nodeConfig[type])]);\r\n    }, [createNode, setNodes]);\r\n\r\n    return (\r\n        <div style={{ height: '100vh', display: 'flex' }}>\r\n            <div style={{\r\n                width: '250px',\r\n                padding: '20px',\r\n                backgroundColor: '#f8f9fa',\r\n                borderRight: '1px solid #ddd',\r\n                overflowY: 'auto'\r\n            }}>\r\n                <h3>Ferramentas</h3>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                    <button onClick={() => addNode('message')}>Nova Mensagem</button>\r\n                    <button onClick={() => addNode('question')}>Nova Pergunta</button>\r\n                    <button onClick={() => addNode('media')}>Nova Mídia</button>\r\n                    <button onClick={() => addNode('condition')}>Nova Condição</button>\r\n                    <button onClick={() => addNode('interval')}>Novo Intervalo</button>\r\n                    <button onClick={() => addNode('chatgpt')}>Chat GPT</button>\r\n                    <button onClick={() => addNode('api')}>API Externa</button>\r\n                    <button onClick={() => addNode('updateCRM')}>Atualizar CRM</button>\r\n                    <button onClick={() => addNode('createRecord')}>Criar Cadastro</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Container para o React Flow */}\r\n            <div style={flowContainerStyles}>\r\n                <ReactFlow\r\n                    // key={nodes.length} // Você pode tentar descomentar isso se ainda tiver problemas de renderização\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    nodeTypes={{\r\n                        message: MessageNode,\r\n                        question: QuestionNode,\r\n                        media: MediaNode,\r\n                        condition: ConditionNode,\r\n                        interval: IntervalNode,\r\n                        chatgpt: ChatGPTNode,\r\n                        api: APINode,\r\n                        updateCRM: UpdateCRMNode,\r\n                        createRecord: CreateRecordNode\r\n                    }}\r\n                    fitView\r\n                >\r\n                    <MiniMap />\r\n                    <Controls />\r\n                    <Background />\r\n                </ReactFlow>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlowEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}