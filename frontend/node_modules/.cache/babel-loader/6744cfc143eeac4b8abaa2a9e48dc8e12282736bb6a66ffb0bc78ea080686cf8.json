{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\n// src/FlowEditor.js\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls, Background, Handle, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport { saveFlow } from './services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeStyles = {\n  node: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '200px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n  },\n  input: {\n    marginTop: '10px',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  optionsContainer: {\n    marginTop: '15px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px'\n  }\n};\nconst MessageNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.node,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '80px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Digite a mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this);\n_c = MessageNode;\nconst QuestionNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.node,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '60px'\n    },\n    value: data.content,\n    onChange: e => data.updateQuestion(e.target.value),\n    placeholder: \"Digite a pergunta...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.optionsContainer,\n    children: data.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: option.label,\n        onChange: e => data.updateOption(index, e.target.value),\n        style: nodeStyles.input,\n        placeholder: \"Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"bottom\",\n        id: option.value,\n        style: {\n          left: '50%',\n          transform: 'translateX(-50%)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this);\n_c2 = QuestionNode;\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const updateNodeData = (nodeId, newData) => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            ...newData\n          }\n        };\n      }\n      return node;\n    }));\n  };\n  const addNode = (type, label) => {\n    const newNode = {\n      id: `${type}-${idCounter}`,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      data: {\n        label,\n        content: '',\n        options: [{\n          label: 'Sim',\n          value: 'yes'\n        }, {\n          label: 'NÃ£o',\n          value: 'no'\n        }],\n        updateContent: content => updateNodeData(`${type}-${idCounter}`, {\n          content\n        }),\n        updateQuestion: content => updateNodeData(`${type}-${idCounter}`, {\n          content\n        }),\n        updateOption: (index, label) => {\n          const newOptions = [...newNode.data.options];\n          newOptions[index].label = label;\n          updateNodeData(`${type}-${idCounter}`, {\n            options: newOptions\n          });\n        }\n      }\n    };\n    setIdCounter(idCounter + 1);\n    setNodes(nds => [...nds, newNode]);\n  };\n  const handleSave = async () => {\n    try {\n      await saveFlow({\n        nodes,\n        edges\n      });\n      alert('Fluxo salvo com sucesso!');\n    } catch (error) {\n      alert('Erro ao salvar fluxo!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px',\n        padding: '20px',\n        backgroundColor: '#f5f7fa',\n        borderRight: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"A\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode('message', 'Mensagem'),\n        children: \"Nova Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode('question', 'Pergunta'),\n        children: \"Nova Pergunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#28a745'\n        },\n        children: \"Salvar Fluxo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      nodeTypes: {\n        message: MessageNode,\n        question: QuestionNode\n      },\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowEditor, \"nrTN6QXNk+V9tBL7SMmrn8RiCs8=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c3 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessageNode\");\n$RefreshReg$(_c2, \"QuestionNode\");\n$RefreshReg$(_c3, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","addEdge","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","saveFlow","jsxDEV","_jsxDEV","nodeStyles","node","padding","backgroundColor","borderRadius","border","minWidth","boxShadow","input","marginTop","width","optionsContainer","display","flexDirection","gap","MessageNode","data","style","children","type","position","fileName","_jsxFileName","lineNumber","columnNumber","label","height","value","content","onChange","e","updateContent","target","placeholder","_c","QuestionNode","updateQuestion","options","map","option","index","updateOption","id","left","transform","_c2","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","onConnect","params","eds","updateNodeData","nodeId","newData","nds","addNode","newNode","x","Math","random","y","draggable","newOptions","handleSave","alert","error","borderRight","onClick","nodeTypes","message","question","fitView","_c3","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["// src/FlowEditor.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  useNodesState,\r\n  useEdgesState\r\n} from 'react-flow-renderer';\r\nimport { saveFlow } from './services';\r\n\r\nconst nodeStyles = {\r\n  node: {\r\n    padding: '20px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '8px',\r\n    border: '2px solid #2684ff',\r\n    minWidth: '200px',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n  },\r\n  input: {\r\n    marginTop: '10px',\r\n    padding: '8px',\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ddd'\r\n  },\r\n  optionsContainer: {\r\n    marginTop: '15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '8px'\r\n  }\r\n};\r\n\r\nconst MessageNode = ({ data }) => (\r\n  <div style={nodeStyles.node}>\r\n    <Handle type=\"target\" position=\"top\" />\r\n    <strong>{data.label}</strong>\r\n    <textarea\r\n      style={{ ...nodeStyles.input, height: '80px' }}\r\n      value={data.content}\r\n      onChange={(e) => data.updateContent(e.target.value)}\r\n      placeholder=\"Digite a mensagem...\"\r\n    />\r\n    <Handle type=\"source\" position=\"bottom\" />\r\n  </div>\r\n);\r\n\r\nconst QuestionNode = ({ data }) => (\r\n  <div style={nodeStyles.node}>\r\n    <Handle type=\"target\" position=\"top\" />\r\n    <strong>{data.label}</strong>\r\n    <textarea\r\n      style={{ ...nodeStyles.input, height: '60px' }}\r\n      value={data.content}\r\n      onChange={(e) => data.updateQuestion(e.target.value)}\r\n      placeholder=\"Digite a pergunta...\"\r\n    />\r\n    <div style={nodeStyles.optionsContainer}>\r\n      {data.options.map((option, index) => (\r\n        <div key={index} style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={option.label}\r\n            onChange={(e) => data.updateOption(index, e.target.value)}\r\n            style={nodeStyles.input}\r\n            placeholder=\"OpÃ§Ã£o\"\r\n          />\r\n          <Handle\r\n            type=\"source\"\r\n            position=\"bottom\"\r\n            id={option.value}\r\n            style={{ left: '50%', transform: 'translateX(-50%)' }}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst FlowEditor = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [idCounter, setIdCounter] = useState(0);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const updateNodeData = (nodeId, newData) => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === nodeId) {\r\n          return { ...node, data: { ...node.data, ...newData } };\r\n        }\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addNode = (type, label) => {\r\n    const newNode = {\r\n      id: `${type}-${idCounter}`,\r\n      type,\r\n      position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n      draggable: true,\r\n      data: {\r\n        label,\r\n        content: '',\r\n        options: [{ label: 'Sim', value: 'yes' }, { label: 'NÃ£o', value: 'no' }],\r\n        updateContent: (content) => updateNodeData(`${type}-${idCounter}`, { content }),\r\n        updateQuestion: (content) => updateNodeData(`${type}-${idCounter}`, { content }),\r\n        updateOption: (index, label) => {\r\n          const newOptions = [...newNode.data.options];\r\n          newOptions[index].label = label;\r\n          updateNodeData(`${type}-${idCounter}`, { options: newOptions });\r\n        }\r\n      }\r\n    };\r\n    setIdCounter(idCounter + 1);\r\n    setNodes((nds) => [...nds, newNode]);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await saveFlow({ nodes, edges });\r\n      alert('Fluxo salvo com sucesso!');\r\n    } catch (error) {\r\n      alert('Erro ao salvar fluxo!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex' }}>\r\n      <div style={{\r\n        width: '250px',\r\n        padding: '20px',\r\n        backgroundColor: '#f5f7fa',\r\n        borderRight: '1px solid #ddd'\r\n      }}>\r\n        <h3>AÃ§Ãµes</h3>\r\n        <button onClick={() => addNode('message', 'Mensagem')}>Nova Mensagem</button>\r\n        <button onClick={() => addNode('question', 'Pergunta')}>Nova Pergunta</button>\r\n        <button onClick={handleSave} style={{ marginTop: '20px', backgroundColor: '#28a745' }}>\r\n          Salvar Fluxo\r\n        </button>\r\n      </div>\r\n\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        nodeTypes={{ message: MessageNode, question: QuestionNode }}\r\n        fitView\r\n      >\r\n        <MiniMap />\r\n        <Controls />\r\n        <Background />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}