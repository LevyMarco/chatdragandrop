{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport ReactFlow, { addEdge, MiniMap, Controls } from \"react-flow-renderer\";\nimport { saveFlow, startChat } from \"./services\"; // Função para enviar o fluxo para o backend\nimport FlowEditor from \"./FlowEditor\";\nimport StartChat from \"./StartChat\";\n\n// Definindo os tipos de nós\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  message: ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n};\nfunction App() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [chatStarted, setChatStarted] = useState(false);\n\n  // Função para adicionar um nó de tipo mensagem\n  const addNode = () => {\n    const newNode = {\n      id: `node-${elements.length + 1}`,\n      type: \"message\",\n      // Tipo de nó que vai renderizar uma mensagem\n      data: {\n        label: `Mensagem ${elements.length + 1}`\n      },\n      // Adicionando label\n      position: {\n        x: 100,\n        y: 100 + elements.length * 150\n      },\n      // Ajuste a posição\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\"\n      }\n    };\n\n    // Atualizando o estado com o novo nó\n    setElements(els => [...els, newNode]);\n  };\n\n  // Função para salvar o fluxo no backend\n  const saveChatFlow = async () => {\n    const flowData = {\n      elements\n    };\n    await saveFlow(flowData); // Salva o fluxo no backend\n    alert(\"Fluxo salvo com sucesso!\");\n  };\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  // Adicionando um nó inicial quando o componente for montado\n  useEffect(() => {\n    if (chatStarted) {\n      const initialElements = [{\n        id: '1',\n        type: 'message',\n        data: {\n          label: 'Escolha o setor'\n        },\n        position: {\n          x: 100,\n          y: 100\n        }\n      }, {\n        id: '2',\n        type: 'message',\n        data: {\n          label: 'Mensagem de resposta'\n        },\n        position: {\n          x: 300,\n          y: 100\n        }\n      }, {\n        id: 'e1-2',\n        source: '1',\n        target: '2',\n        animated: true\n      } // Conectando os dois nós\n      ];\n      setElements(initialElements);\n    }\n  }, [chatStarted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: !chatStarted ? /*#__PURE__*/_jsxDEV(StartChat, {\n      onStart: () => setChatStarted(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 20,\n          left: 20,\n          zIndex: 1000\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNode,\n          children: \"Adicionar Mensagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveChatFlow,\n          children: \"Salvar Fluxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FlowEditor, {\n        elements: elements,\n        setElements: setElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vNG/cn5akLg9g/BxLeKEYY3Ptj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactFlow","addEdge","MiniMap","Controls","saveFlow","startChat","FlowEditor","StartChat","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","message","data","style","padding","backgroundColor","borderRadius","children","label","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","elements","setElements","chatStarted","setChatStarted","addNode","newNode","id","length","type","position","x","y","border","els","saveChatFlow","flowData","alert","onConnect","params","initialElements","source","target","animated","height","onStart","top","left","zIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactFlow, { addEdge, MiniMap, Controls } from \"react-flow-renderer\";\r\nimport { saveFlow, startChat } from \"./services\";  // Função para enviar o fluxo para o backend\r\nimport FlowEditor from \"./FlowEditor\";\r\nimport StartChat from \"./StartChat\";\r\n\r\n// Definindo os tipos de nós\r\nconst nodeTypes = {\r\n  message: ({ data }) => (\r\n    <div style={{ padding: 10, backgroundColor: \"#f9f9f9\", borderRadius: 5 }}>\r\n      <strong>{data.label}</strong>\r\n    </div>\r\n  ),\r\n};\r\n\r\nfunction App() {\r\n  const [elements, setElements] = useState([]);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n\r\n  // Função para adicionar um nó de tipo mensagem\r\n  const addNode = () => {\r\n    const newNode = {\r\n      id: `node-${elements.length + 1}`,\r\n      type: \"message\", // Tipo de nó que vai renderizar uma mensagem\r\n      data: { label: `Mensagem ${elements.length + 1}` },  // Adicionando label\r\n      position: { x: 100, y: 100 + elements.length * 150 },  // Ajuste a posição\r\n      style: { border: \"1px solid #ddd\", padding: \"10px\" },\r\n    };\r\n\r\n    // Atualizando o estado com o novo nó\r\n    setElements((els) => [...els, newNode]);\r\n  };\r\n\r\n  // Função para salvar o fluxo no backend\r\n  const saveChatFlow = async () => {\r\n    const flowData = { elements };\r\n    await saveFlow(flowData);  // Salva o fluxo no backend\r\n    alert(\"Fluxo salvo com sucesso!\");\r\n  };\r\n\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  // Adicionando um nó inicial quando o componente for montado\r\n  useEffect(() => {\r\n    if (chatStarted) {\r\n      const initialElements = [\r\n        { id: '1', type: 'message', data: { label: 'Escolha o setor' }, position: { x: 100, y: 100 } },\r\n        { id: '2', type: 'message', data: { label: 'Mensagem de resposta' }, position: { x: 300, y: 100 } },\r\n        { id: 'e1-2', source: '1', target: '2', animated: true },  // Conectando os dois nós\r\n      ];\r\n      setElements(initialElements);\r\n    }\r\n  }, [chatStarted]);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      {!chatStarted ? (\r\n        <StartChat onStart={() => setChatStarted(true)} />\r\n      ) : (\r\n        <>\r\n          <div style={{ position: \"absolute\", top: 20, left: 20, zIndex: 1000 }}>\r\n            <button onClick={addNode}>Adicionar Mensagem</button>\r\n            <button onClick={saveChatFlow}>Salvar Fluxo</button>\r\n          </div>\r\n          <FlowEditor elements={elements} setElements={setElements} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}