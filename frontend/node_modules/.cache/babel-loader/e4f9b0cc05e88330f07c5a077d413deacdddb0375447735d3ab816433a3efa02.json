{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\n// src/FlowEditor.js\nimport React, { useState } from \"react\";\nimport ReactFlow, { Handle, addEdge, MiniMap, Controls } from \"react-flow-renderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowEditor = () => {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [idCounter, setIdCounter] = useState(0); // Contador para os IDs dos nós\n\n  // Função que conecta os nós\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  // Função para adicionar um nó de mensagem\n  const addNode = (type, label = \"Novo Node\") => {\n    const newNode = {\n      id: `node-${idCounter}`,\n      // ID único para cada nó\n      type: type,\n      // 'message' ou 'question'\n      data: {\n        label: label\n      },\n      position: {\n        x: 100 + idCounter * 150,\n        y: 100 + idCounter * 100\n      } // Ajustando a posição\n    };\n    setIdCounter(idCounter + 1); // Atualiza o contador de IDs\n    setElements(els => [...els, newNode]); // Adiciona o nó na lista de elementos\n  };\n\n  // Função para adicionar um nó de pergunta com opções\n  const addQuestionNode = options => {\n    const newQuestionNode = {\n      id: `node-${idCounter}`,\n      // ID único para cada nó\n      type: \"question\",\n      // Tipo personalizado para perguntas\n      data: {\n        label: \"Escolha uma opção\",\n        options: options // Passa as opções para o nó\n      },\n      position: {\n        x: 200 + idCounter * 150,\n        y: 200 + idCounter * 100\n      } // Ajustando a posição\n    };\n    setIdCounter(idCounter + 1); // Atualiza o contador de IDs\n    setElements(els => [...els, newQuestionNode]); // Adiciona o nó de pergunta na lista de elementos\n  };\n\n  // Função para adicionar um fluxo de mensagens\n  const addFlow = () => {\n    addNode(\"message\", \"Olá, bem-vindo ao chat!\");\n    addQuestionNode([\"Vendas\", \"Cobrança\", \"SAC\", \"E-commerce\"]); // Exemplo de opções para uma pergunta\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onConnect: onConnect,\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 20,\n          left: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFlow,\n          children: \"Adicionar Fluxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowEditor, \"IgTsgE2e+8xN3BB7LhqDEENZKGw=\");\n_c = FlowEditor;\nexport default FlowEditor;\nvar _c;\n$RefreshReg$(_c, \"FlowEditor\");","map":{"version":3,"names":["React","useState","ReactFlow","Handle","addEdge","MiniMap","Controls","jsxDEV","_jsxDEV","FlowEditor","_s","elements","setElements","idCounter","setIdCounter","onConnect","params","els","addNode","type","label","newNode","id","data","position","x","y","addQuestionNode","options","newQuestionNode","addFlow","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","top","left","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["// src/FlowEditor.js\r\nimport React, { useState } from \"react\";\r\nimport ReactFlow, { Handle, addEdge, MiniMap, Controls } from \"react-flow-renderer\";\r\n\r\nconst FlowEditor = () => {\r\n  const [elements, setElements] = useState([]);\r\n  const [idCounter, setIdCounter] = useState(0); // Contador para os IDs dos nós\r\n\r\n  // Função que conecta os nós\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  // Função para adicionar um nó de mensagem\r\n  const addNode = (type, label = \"Novo Node\") => {\r\n    const newNode = {\r\n      id: `node-${idCounter}`, // ID único para cada nó\r\n      type: type,  // 'message' ou 'question'\r\n      data: { label: label },\r\n      position: { x: 100 + idCounter * 150, y: 100 + idCounter * 100 }, // Ajustando a posição\r\n    };\r\n    setIdCounter(idCounter + 1); // Atualiza o contador de IDs\r\n    setElements((els) => [...els, newNode]); // Adiciona o nó na lista de elementos\r\n  };\r\n\r\n  // Função para adicionar um nó de pergunta com opções\r\n  const addQuestionNode = (options) => {\r\n    const newQuestionNode = {\r\n      id: `node-${idCounter}`, // ID único para cada nó\r\n      type: \"question\", // Tipo personalizado para perguntas\r\n      data: {\r\n        label: \"Escolha uma opção\",\r\n        options: options, // Passa as opções para o nó\r\n      },\r\n      position: { x: 200 + idCounter * 150, y: 200 + idCounter * 100 }, // Ajustando a posição\r\n    };\r\n    setIdCounter(idCounter + 1); // Atualiza o contador de IDs\r\n    setElements((els) => [...els, newQuestionNode]); // Adiciona o nó de pergunta na lista de elementos\r\n  };\r\n\r\n  // Função para adicionar um fluxo de mensagens\r\n  const addFlow = () => {\r\n    addNode(\"message\", \"Olá, bem-vindo ao chat!\");\r\n    addQuestionNode([\"Vendas\", \"Cobrança\", \"SAC\", \"E-commerce\"]); // Exemplo de opções para uma pergunta\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <ReactFlow\r\n        elements={elements}\r\n        onConnect={onConnect}\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <MiniMap />\r\n        <Controls />\r\n\r\n        {/* Botões para adicionar mensagens ou perguntas */}\r\n        <div style={{ position: \"absolute\", top: 20, left: 20 }}>\r\n          <button onClick={addFlow}>Adicionar Fluxo</button>\r\n        </div>\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}