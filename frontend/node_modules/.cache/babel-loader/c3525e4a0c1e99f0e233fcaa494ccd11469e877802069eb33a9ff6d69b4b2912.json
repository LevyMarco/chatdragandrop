{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'react-flow-renderer';\n\n// =============== ESTILOS GERAIS ===============\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sidebarStyles = {\n  width: '260px',\n  backgroundColor: '#fff',\n  borderRadius: '8px',\n  padding: '20px',\n  margin: '10px',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n};\nconst flowContainerStyles = {\n  flex: 1,\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    width: '100%'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '10px'\n  }\n};\nconst handleStyle = {\n  width: '15px',\n  height: '15px',\n  backgroundColor: '#2684ff',\n  border: '2px solid #fff',\n  borderRadius: '50%'\n};\n\n// Estilo de \"chips\" para os botões na sidebar\nconst chipStyle = {\n  margin: '5px',\n  padding: '6px 12px',\n  border: '1px solid #ddd',\n  borderRadius: '20px',\n  background: '#f8f9fa',\n  cursor: 'pointer',\n  fontSize: '14px'\n};\n\n// =============== COMPONENTES DOS NÓS ===============\n\n// (1) Alteramos o MessageNode para ter um botão que envia a mensagem\nconst MessageNode = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      marginTop: '10px'\n    },\n    onClick: () => data.sendMessage(data.content),\n    children: \"Enviar Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 3\n}, this));\n_c2 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => {\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...data.options];\n    newOptions[index] = value;\n    data.updateOptions(newOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.base,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      style: handleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u2753 Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: nodeStyles.input,\n      value: data.question,\n      onChange: e => data.updateQuestion(e.target.value),\n      placeholder: \"Digite a pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nodeStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Op\\xE7\\xF5es de Resposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: opt,\n          style: {\n            ...nodeStyles.input,\n            width: '80%'\n          },\n          onChange: e => handleOptionChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: \"right\",\n          id: `option-${index}`,\n          style: {\n            ...handleStyle,\n            right: '-8px',\n            top: '50%',\n            transform: 'translateY(-50%)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: data.addOption,\n        children: \"+ Adicionar Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.deleteButton,\n      onClick: () => data.onDelete(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n});\n_c4 = QuestionNode;\nconst MediaNode = /*#__PURE__*/React.memo(_c5 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDDBC\\uFE0F M\\xEDdia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: e => data.handleFileUpload(e.target.files[0]),\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Ou insira URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: e => data.updateUrl(e.target.value),\n      placeholder: \"https://exemplo.com/imagem.jpg\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 176,\n  columnNumber: 3\n}, this));\n_c6 = MediaNode;\nconst ConditionNode = /*#__PURE__*/React.memo(_c7 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2696\\uFE0F Condi\\xE7\\xE3o\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: data.conditionType,\n    onChange: e => data.updateConditionType(e.target.value),\n    style: nodeStyles.select,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"cadastro\",\n      children: \"Verificar Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"valor\",\n      children: \"Comparar Valores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this), data.conditionType === 'cadastro' && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.field,\n      onChange: e => data.updateField(e.target.value),\n      placeholder: \"Campo para verifica\\xE7\\xE3o (ex: PHONE)\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 7\n  }, this), data.conditionType === 'valor' && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.comparison,\n      onChange: e => data.updateComparison(e.target.value),\n      placeholder: \"Express\\xE3o (ex: VALUE > 100)\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"true\",\n    style: {\n      ...handleStyle,\n      top: '30%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"false\",\n    style: {\n      ...handleStyle,\n      top: '70%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 202,\n  columnNumber: 3\n}, this));\n_c8 = ConditionNode;\nconst IntervalNode = /*#__PURE__*/React.memo(_c9 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u23F1\\uFE0F Intervalo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: data.duration,\n      onChange: e => data.updateDuration(e.target.value),\n      placeholder: \"Dura\\xE7\\xE3o em segundos\",\n      min: \"1\",\n      max: \"7200\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: \"M\\xE1ximo: 2 horas (7200 segundos)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 257,\n  columnNumber: 3\n}, this));\n_c10 = IntervalNode;\nconst ChatGPTNode = /*#__PURE__*/React.memo(_c11 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83E\\uDD16 Chat GPT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    value: data.apiKey,\n    onChange: e => data.updateApiKey(e.target.value),\n    placeholder: \"Insira sua API Key da OpenAI\",\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    value: data.instructions,\n    onChange: e => data.updateInstructions(e.target.value),\n    placeholder: \"Instru\\xE7\\xF5es para o assistente...\",\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 280,\n  columnNumber: 3\n}, this));\n_c12 = ChatGPTNode;\nconst APINode = /*#__PURE__*/React.memo(_c13 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83C\\uDF10 API Externa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.method,\n      onChange: e => data.updateMethod(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GET\",\n        children: \"GET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"POST\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"PUT\",\n        children: \"PUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"DELETE\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: e => data.updateUrl(e.target.value),\n      placeholder: \"URL da API\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Cabe\\xE7alhos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.headers,\n      onChange: e => data.updateHeaders(e.target.value),\n      placeholder: \"JSON de cabe\\xE7alhos\",\n      style: {\n        ...nodeStyles.input,\n        height: '80px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Corpo da Requisi\\xE7\\xE3o:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.body,\n      onChange: e => data.updateBody(e.target.value),\n      placeholder: \"JSON do corpo\",\n      style: {\n        ...nodeStyles.input,\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 304,\n  columnNumber: 3\n}, this));\n_c14 = APINode;\nconst UpdateCRMNode = /*#__PURE__*/React.memo(_c15 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDD04 Atualizar CRM\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.entity,\n      onChange: e => data.updateEntity(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lead\",\n        children: \"Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deal\",\n        children: \"Neg\\xF3cio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"contact\",\n        children: \"Contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"company\",\n        children: \"Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.field,\n      onChange: e => data.updateField(e.target.value),\n      placeholder: \"Campo para atualizar\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.value,\n      onChange: e => data.updateValue(e.target.value),\n      placeholder: \"Novo valor\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 354,\n  columnNumber: 3\n}, this));\n_c16 = UpdateCRMNode;\nconst CreateRecordNode = /*#__PURE__*/React.memo(_c17 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCDD Criar Cadastro\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.entity,\n      onChange: e => data.updateEntity(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lead\",\n        children: \"Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deal\",\n        children: \"Neg\\xF3cio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"contact\",\n        children: \"Contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"company\",\n        children: \"Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.stage,\n      onChange: e => data.updateStage(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"new\",\n        children: \"Novo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"qualified\",\n        children: \"Qualificado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"proposal\",\n        children: \"Proposta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"closed\",\n        children: \"Fechado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.fields,\n      onChange: e => data.updateFields(e.target.value),\n      placeholder: \"Campos (JSON)\",\n      style: {\n        ...nodeStyles.input,\n        height: '150px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 393,\n  columnNumber: 3\n}, this));\n\n// PLACEHOLDERS\n_c18 = CreateRecordNode;\nconst TransferNode = /*#__PURE__*/React.memo(_c19 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDD00 Transferir\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"Exemplo de n\\xF3 de transfer\\xEAncia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 435,\n  columnNumber: 3\n}, this));\n_c20 = TransferNode;\nconst ScheduleNode = /*#__PURE__*/React.memo(_c21 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u23F0 Hor\\xE1rio\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"Exemplo de n\\xF3 de agendamento\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 447,\n  columnNumber: 3\n}, this));\n_c22 = ScheduleNode;\nconst EndNode = /*#__PURE__*/React.memo(_c23 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83C\\uDFC1 Finalizar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"Exemplo de n\\xF3 de finaliza\\xE7\\xE3o\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 459,\n  columnNumber: 3\n}, this));\n\n// =============== REGISTRO DE TIPOS DE NÓ ===============\n_c24 = EndNode;\nconst nodeTypes = {\n  message: MessageNode,\n  question: QuestionNode,\n  media: MediaNode,\n  condition: ConditionNode,\n  interval: IntervalNode,\n  chatgpt: ChatGPTNode,\n  api: APINode,\n  updateCRM: UpdateCRMNode,\n  createRecord: CreateRecordNode,\n  transfer: TransferNode,\n  schedule: ScheduleNode,\n  end: EndNode\n};\n\n// =============== COMPONENTE PRINCIPAL ===============\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n\n  // (2) Exemplo de função que envia mensagem para o chat\n  // Aqui, você deve implementar de fato a chamada à sua API de chat ou SDK.\n  const sendMessageToChannel = message => {\n    // Exemplo de placeholder:\n    console.log('Enviando mensagem para o chat:', message);\n    // Se você tiver um ID de chat ou canal, inclua-o aqui:\n    // ex.: chatApi.sendMessage(chatId, message);\n  };\n\n  // Ao conectar nós\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Validação de conexões\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'question' || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'condition') {\n      return true;\n    }\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n\n  // Deletar nó\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n\n  // Atualizar dados do nó\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n\n  // (3) Ajustar o createNode para incluir a função de envio no data do nó de mensagem\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode,\n        // Passamos a função de envio para o data do nó\n        sendMessage: content => sendMessageToChannel(content)\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: () => {\n          setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n            ...node,\n            data: {\n              ...node.data,\n              options: [...(node.data.options || []), `Opção ${node.data.options ? node.data.options.length + 1 : 1}`]\n            }\n          } : node));\n        },\n        updateOptions: options => updateNode(nodeId, {\n          options\n        }),\n        onDelete: deleteNode\n      },\n      media: {\n        handleFileUpload: file => updateNode(nodeId, {\n          file\n        }),\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        onDelete: deleteNode\n      },\n      condition: {\n        updateConditionType: conditionType => updateNode(nodeId, {\n          conditionType\n        }),\n        updateField: field => updateNode(nodeId, {\n          field\n        }),\n        updateComparison: comparison => updateNode(nodeId, {\n          comparison\n        }),\n        onDelete: deleteNode\n      },\n      interval: {\n        updateDuration: duration => updateNode(nodeId, {\n          duration\n        }),\n        onDelete: deleteNode\n      },\n      chatgpt: {\n        updateApiKey: apiKey => updateNode(nodeId, {\n          apiKey\n        }),\n        updateInstructions: instructions => updateNode(nodeId, {\n          instructions\n        }),\n        onDelete: deleteNode\n      },\n      api: {\n        updateMethod: method => updateNode(nodeId, {\n          method\n        }),\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        updateHeaders: headers => updateNode(nodeId, {\n          headers\n        }),\n        updateBody: body => updateNode(nodeId, {\n          body\n        }),\n        onDelete: deleteNode\n      },\n      updateCRM: {\n        updateEntity: entity => updateNode(nodeId, {\n          entity\n        }),\n        updateField: field => updateNode(nodeId, {\n          field\n        }),\n        updateValue: value => updateNode(nodeId, {\n          value\n        }),\n        onDelete: deleteNode\n      },\n      createRecord: {\n        updateEntity: entity => updateNode(nodeId, {\n          entity\n        }),\n        updateStage: stage => updateNode(nodeId, {\n          stage\n        }),\n        updateFields: fields => updateNode(nodeId, {\n          fields\n        }),\n        onDelete: deleteNode\n      },\n      transfer: {\n        onDelete: deleteNode\n      },\n      schedule: {\n        onDelete: deleteNode\n      },\n      end: {\n        onDelete: deleteNode\n      }\n    };\n    const newNode = {\n      id: nodeId,\n      type,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  }, [idCounter, updateNode, deleteNode, setNodes, sendMessageToChannel]);\n\n  // Categorias da sidebar\n  const categories = [{\n    title: 'Conversa',\n    items: [{\n      label: 'Mensagem',\n      nodeType: 'message',\n      initialData: {\n        content: ''\n      }\n    }, {\n      label: 'Pergunta',\n      nodeType: 'question',\n      initialData: {\n        question: '',\n        options: []\n      }\n    }, {\n      label: 'Mídia',\n      nodeType: 'media',\n      initialData: {\n        url: ''\n      }\n    }]\n  }, {\n    title: 'Ações do chat',\n    items: [{\n      label: 'Condição',\n      nodeType: 'condition',\n      initialData: {\n        conditionType: 'cadastro',\n        field: '',\n        comparison: ''\n      }\n    }, {\n      label: 'Transferir',\n      nodeType: 'transfer',\n      initialData: {}\n    }, {\n      label: 'Horário',\n      nodeType: 'schedule',\n      initialData: {}\n    }, {\n      label: 'Finalizar',\n      nodeType: 'end',\n      initialData: {}\n    }, {\n      label: 'Intervalo',\n      nodeType: 'interval',\n      initialData: {\n        duration: 1\n      }\n    }]\n  }, {\n    title: 'Integrações',\n    items: [{\n      label: 'Chat GPT',\n      nodeType: 'chatgpt',\n      initialData: {\n        apiKey: '',\n        instructions: ''\n      }\n    }, {\n      label: 'API Externa',\n      nodeType: 'api',\n      initialData: {\n        method: 'GET',\n        url: '',\n        headers: '',\n        body: ''\n      }\n    }]\n  }, {\n    title: 'Bitrix',\n    items: [{\n      label: 'Atualizar CRM',\n      nodeType: 'updateCRM',\n      initialData: {\n        entity: 'lead',\n        field: '',\n        value: ''\n      }\n    }, {\n      label: 'Criar Cadastro',\n      nodeType: 'createRecord',\n      initialData: {\n        entity: 'lead',\n        stage: 'new',\n        fields: ''\n      }\n    }]\n  }];\n  function CategoryBlock({\n    title,\n    items\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: chipStyle,\n          onClick: () => createNode(item.nodeType, item.initialData),\n          children: item.label\n        }, item.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: sidebarStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: \"Qual a intera\\xE7\\xE3o que deseja?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(CategoryBlock, {\n        title: cat.title,\n        items: cat.items\n      }, cat.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        connectionLineStyle: {\n          stroke: '#ddd',\n          strokeWidth: 2\n        },\n        snapToGrid: true,\n        snapGrid: [15, 15],\n        isValidConnection: isValidConnection,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 733,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowEditor, \"8LzU+OApYRwHuFhXyEByb6x3Ouk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c25 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25;\n$RefreshReg$(_c, \"MessageNode$React.memo\");\n$RefreshReg$(_c2, \"MessageNode\");\n$RefreshReg$(_c3, \"QuestionNode$React.memo\");\n$RefreshReg$(_c4, \"QuestionNode\");\n$RefreshReg$(_c5, \"MediaNode$React.memo\");\n$RefreshReg$(_c6, \"MediaNode\");\n$RefreshReg$(_c7, \"ConditionNode$React.memo\");\n$RefreshReg$(_c8, \"ConditionNode\");\n$RefreshReg$(_c9, \"IntervalNode$React.memo\");\n$RefreshReg$(_c10, \"IntervalNode\");\n$RefreshReg$(_c11, \"ChatGPTNode$React.memo\");\n$RefreshReg$(_c12, \"ChatGPTNode\");\n$RefreshReg$(_c13, \"APINode$React.memo\");\n$RefreshReg$(_c14, \"APINode\");\n$RefreshReg$(_c15, \"UpdateCRMNode$React.memo\");\n$RefreshReg$(_c16, \"UpdateCRMNode\");\n$RefreshReg$(_c17, \"CreateRecordNode$React.memo\");\n$RefreshReg$(_c18, \"CreateRecordNode\");\n$RefreshReg$(_c19, \"TransferNode$React.memo\");\n$RefreshReg$(_c20, \"TransferNode\");\n$RefreshReg$(_c21, \"ScheduleNode$React.memo\");\n$RefreshReg$(_c22, \"ScheduleNode\");\n$RefreshReg$(_c23, \"EndNode$React.memo\");\n$RefreshReg$(_c24, \"EndNode\");\n$RefreshReg$(_c25, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","sidebarStyles","width","backgroundColor","borderRadius","padding","margin","boxShadow","flowContainerStyles","flex","height","position","overflow","nodeStyles","base","border","minWidth","display","flexDirection","alignItems","input","section","select","deleteButton","background","color","cursor","justifyContent","marginTop","handleStyle","chipStyle","fontSize","MessageNode","memo","_c","id","data","style","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","content","onChange","e","updateContent","target","placeholder","onClick","sendMessage","onDelete","_c2","QuestionNode","_c3","handleOptionChange","index","newOptions","options","updateOptions","question","updateQuestion","map","opt","right","top","transform","addOption","_c4","MediaNode","_c5","handleFileUpload","files","url","updateUrl","_c6","ConditionNode","_c7","conditionType","updateConditionType","field","updateField","comparison","updateComparison","_c8","IntervalNode","_c9","duration","updateDuration","min","max","_c10","ChatGPTNode","_c11","apiKey","updateApiKey","instructions","updateInstructions","_c12","APINode","_c13","method","updateMethod","headers","updateHeaders","body","updateBody","_c14","UpdateCRMNode","_c15","entity","updateEntity","updateValue","_c16","CreateRecordNode","_c17","stage","updateStage","fields","updateFields","_c18","TransferNode","_c19","textAlign","_c20","ScheduleNode","_c21","_c22","EndNode","_c23","_c24","nodeTypes","message","media","condition","interval","chatgpt","api","updateCRM","createRecord","transfer","schedule","end","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","sendMessageToChannel","console","log","onConnect","params","eds","isValidConnection","connection","sourceNode","find","node","source","hasExistingConnection","some","edge","deleteNode","nodeId","nds","filter","updateNode","newData","prevNodes","createNode","initialData","prev","updateFunctions","length","file","newNode","x","Math","random","y","categories","title","items","label","nodeType","CategoryBlock","marginBottom","flexWrap","item","cat","connectionLineStyle","stroke","strokeWidth","snapToGrid","snapGrid","gap","_c25","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge\r\n} from 'react-flow-renderer';\r\n\r\n// =============== ESTILOS GERAIS ===============\r\nconst sidebarStyles = {\r\n  width: '260px',\r\n  backgroundColor: '#fff',\r\n  borderRadius: '8px',\r\n  padding: '20px',\r\n  margin: '10px',\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n};\r\n\r\nconst flowContainerStyles = {\r\n  flex: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n  base: {\r\n    padding: '20px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '8px',\r\n    border: '2px solid #2684ff',\r\n    minWidth: '300px',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  input: {\r\n    margin: '10px 0',\r\n    padding: '8px',\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ddd'\r\n  },\r\n  section: {\r\n    margin: '15px 0',\r\n    padding: '10px',\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: '6px',\r\n    width: '100%'\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    margin: '5px 0'\r\n  },\r\n  deleteButton: {\r\n    background: 'red',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '50%',\r\n    width: '24px',\r\n    height: '24px',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '10px'\r\n  }\r\n};\r\n\r\nconst handleStyle = {\r\n  width: '15px',\r\n  height: '15px',\r\n  backgroundColor: '#2684ff',\r\n  border: '2px solid #fff',\r\n  borderRadius: '50%'\r\n};\r\n\r\n// Estilo de \"chips\" para os botões na sidebar\r\nconst chipStyle = {\r\n  margin: '5px',\r\n  padding: '6px 12px',\r\n  border: '1px solid #ddd',\r\n  borderRadius: '20px',\r\n  background: '#f8f9fa',\r\n  cursor: 'pointer',\r\n  fontSize: '14px'\r\n};\r\n\r\n// =============== COMPONENTES DOS NÓS ===============\r\n\r\n// (1) Alteramos o MessageNode para ter um botão que envia a mensagem\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>💬 Mensagem</h4>\r\n\r\n    <textarea\r\n      style={{ ...nodeStyles.input, height: '100px' }}\r\n      value={data.content}\r\n      onChange={(e) => data.updateContent(e.target.value)}\r\n      placeholder=\"Escreva sua mensagem...\"\r\n    />\r\n\r\n    {/* Botão para enviar a mensagem ao chat */}\r\n    <button\r\n      style={{ marginTop: '10px' }}\r\n      onClick={() => data.sendMessage(data.content)}\r\n    >\r\n      Enviar Mensagem\r\n    </button>\r\n\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => {\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...data.options];\r\n    newOptions[index] = value;\r\n    data.updateOptions(newOptions);\r\n  };\r\n\r\n  return (\r\n    <div style={nodeStyles.base}>\r\n      <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n      <h4>❓ Pergunta</h4>\r\n      <input\r\n        type=\"text\"\r\n        style={nodeStyles.input}\r\n        value={data.question}\r\n        onChange={(e) => data.updateQuestion(e.target.value)}\r\n        placeholder=\"Digite a pergunta\"\r\n      />\r\n      <div style={nodeStyles.section}>\r\n        <h5>Opções de Resposta:</h5>\r\n        {data.options.map((opt, index) => (\r\n          <div key={index} style={{ margin: '5px 0', position: 'relative' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={opt}\r\n              style={{ ...nodeStyles.input, width: '80%' }}\r\n              onChange={(e) => handleOptionChange(index, e.target.value)}\r\n            />\r\n            <Handle\r\n              type=\"source\"\r\n              position=\"right\"\r\n              id={`option-${index}`}\r\n              style={{\r\n                ...handleStyle,\r\n                right: '-8px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)'\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n      </div>\r\n      <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n        🗑️\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst MediaNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>🖼️ Mídia</h4>\r\n    <input\r\n      type=\"file\"\r\n      onChange={(e) => data.handleFileUpload(e.target.files[0])}\r\n      style={nodeStyles.input}\r\n    />\r\n    <div style={nodeStyles.section}>\r\n      <h5>Ou insira URL:</h5>\r\n      <input\r\n        type=\"text\"\r\n        value={data.url}\r\n        onChange={(e) => data.updateUrl(e.target.value)}\r\n        placeholder=\"https://exemplo.com/imagem.jpg\"\r\n        style={nodeStyles.input}\r\n      />\r\n    </div>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst ConditionNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>⚖️ Condição</h4>\r\n    <select\r\n      value={data.conditionType}\r\n      onChange={(e) => data.updateConditionType(e.target.value)}\r\n      style={nodeStyles.select}\r\n    >\r\n      <option value=\"cadastro\">Verificar Cadastro</option>\r\n      <option value=\"valor\">Comparar Valores</option>\r\n    </select>\r\n\r\n    {data.conditionType === 'cadastro' && (\r\n      <div style={nodeStyles.section}>\r\n        <input\r\n          type=\"text\"\r\n          value={data.field}\r\n          onChange={(e) => data.updateField(e.target.value)}\r\n          placeholder=\"Campo para verificação (ex: PHONE)\"\r\n          style={nodeStyles.input}\r\n        />\r\n      </div>\r\n    )}\r\n\r\n    {data.conditionType === 'valor' && (\r\n      <div style={nodeStyles.section}>\r\n        <input\r\n          type=\"text\"\r\n          value={data.comparison}\r\n          onChange={(e) => data.updateComparison(e.target.value)}\r\n          placeholder=\"Expressão (ex: VALUE > 100)\"\r\n          style={nodeStyles.input}\r\n        />\r\n      </div>\r\n    )}\r\n\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle\r\n      type=\"source\"\r\n      position=\"right\"\r\n      id=\"true\"\r\n      style={{ ...handleStyle, top: '30%' }}\r\n    />\r\n    <Handle\r\n      type=\"source\"\r\n      position=\"right\"\r\n      id=\"false\"\r\n      style={{ ...handleStyle, top: '70%' }}\r\n    />\r\n  </div>\r\n));\r\n\r\nconst IntervalNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>⏱️ Intervalo</h4>\r\n    <div style={nodeStyles.section}>\r\n      <input\r\n        type=\"number\"\r\n        value={data.duration}\r\n        onChange={(e) => data.updateDuration(e.target.value)}\r\n        placeholder=\"Duração em segundos\"\r\n        min=\"1\"\r\n        max=\"7200\"\r\n        style={nodeStyles.input}\r\n      />\r\n      <small>Máximo: 2 horas (7200 segundos)</small>\r\n    </div>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst ChatGPTNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>🤖 Chat GPT</h4>\r\n    <input\r\n      type=\"password\"\r\n      value={data.apiKey}\r\n      onChange={(e) => data.updateApiKey(e.target.value)}\r\n      placeholder=\"Insira sua API Key da OpenAI\"\r\n      style={nodeStyles.input}\r\n    />\r\n    <textarea\r\n      value={data.instructions}\r\n      onChange={(e) => data.updateInstructions(e.target.value)}\r\n      placeholder=\"Instruções para o assistente...\"\r\n      style={{ ...nodeStyles.input, height: '100px' }}\r\n    />\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst APINode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>🌐 API Externa</h4>\r\n    <div style={nodeStyles.section}>\r\n      <select\r\n        value={data.method}\r\n        onChange={(e) => data.updateMethod(e.target.value)}\r\n        style={nodeStyles.select}\r\n      >\r\n        <option value=\"GET\">GET</option>\r\n        <option value=\"POST\">POST</option>\r\n        <option value=\"PUT\">PUT</option>\r\n        <option value=\"DELETE\">DELETE</option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        value={data.url}\r\n        onChange={(e) => data.updateUrl(e.target.value)}\r\n        placeholder=\"URL da API\"\r\n        style={nodeStyles.input}\r\n      />\r\n    </div>\r\n\r\n    <div style={nodeStyles.section}>\r\n      <h5>Cabeçalhos:</h5>\r\n      <textarea\r\n        value={data.headers}\r\n        onChange={(e) => data.updateHeaders(e.target.value)}\r\n        placeholder=\"JSON de cabeçalhos\"\r\n        style={{ ...nodeStyles.input, height: '80px' }}\r\n      />\r\n    </div>\r\n\r\n    <div style={nodeStyles.section}>\r\n      <h5>Corpo da Requisição:</h5>\r\n      <textarea\r\n        value={data.body}\r\n        onChange={(e) => data.updateBody(e.target.value)}\r\n        placeholder=\"JSON do corpo\"\r\n        style={{ ...nodeStyles.input, height: '100px' }}\r\n      />\r\n    </div>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst UpdateCRMNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>🔄 Atualizar CRM</h4>\r\n    <div style={nodeStyles.section}>\r\n      <select\r\n        value={data.entity}\r\n        onChange={(e) => data.updateEntity(e.target.value)}\r\n        style={nodeStyles.select}\r\n      >\r\n        <option value=\"lead\">Lead</option>\r\n        <option value=\"deal\">Negócio</option>\r\n        <option value=\"contact\">Contato</option>\r\n        <option value=\"company\">Empresa</option>\r\n      </select>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={data.field}\r\n        onChange={(e) => data.updateField(e.target.value)}\r\n        placeholder=\"Campo para atualizar\"\r\n        style={nodeStyles.input}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={data.value}\r\n        onChange={(e) => data.updateValue(e.target.value)}\r\n        placeholder=\"Novo valor\"\r\n        style={nodeStyles.input}\r\n      />\r\n    </div>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst CreateRecordNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>📝 Criar Cadastro</h4>\r\n    <div style={nodeStyles.section}>\r\n      <select\r\n        value={data.entity}\r\n        onChange={(e) => data.updateEntity(e.target.value)}\r\n        style={nodeStyles.select}\r\n      >\r\n        <option value=\"lead\">Lead</option>\r\n        <option value=\"deal\">Negócio</option>\r\n        <option value=\"contact\">Contato</option>\r\n        <option value=\"company\">Empresa</option>\r\n      </select>\r\n\r\n      <select\r\n        value={data.stage}\r\n        onChange={(e) => data.updateStage(e.target.value)}\r\n        style={nodeStyles.select}\r\n      >\r\n        <option value=\"new\">Novo</option>\r\n        <option value=\"qualified\">Qualificado</option>\r\n        <option value=\"proposal\">Proposta</option>\r\n        <option value=\"closed\">Fechado</option>\r\n      </select>\r\n\r\n      <textarea\r\n        value={data.fields}\r\n        onChange={(e) => data.updateFields(e.target.value)}\r\n        placeholder=\"Campos (JSON)\"\r\n        style={{ ...nodeStyles.input, height: '150px' }}\r\n      />\r\n    </div>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\n// PLACEHOLDERS\r\nconst TransferNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>🔀 Transferir</h4>\r\n    <p style={{ textAlign: 'center' }}>Exemplo de nó de transferência</p>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst ScheduleNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>⏰ Horário</h4>\r\n    <p style={{ textAlign: 'center' }}>Exemplo de nó de agendamento</p>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\nconst EndNode = React.memo(({ id, data }) => (\r\n  <div style={nodeStyles.base}>\r\n    <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n    <h4>🏁 Finalizar</h4>\r\n    <p style={{ textAlign: 'center' }}>Exemplo de nó de finalização</p>\r\n    <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>\r\n      🗑️\r\n    </button>\r\n    <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n  </div>\r\n));\r\n\r\n// =============== REGISTRO DE TIPOS DE NÓ ===============\r\nconst nodeTypes = {\r\n  message: MessageNode,\r\n  question: QuestionNode,\r\n  media: MediaNode,\r\n  condition: ConditionNode,\r\n  interval: IntervalNode,\r\n  chatgpt: ChatGPTNode,\r\n  api: APINode,\r\n  updateCRM: UpdateCRMNode,\r\n  createRecord: CreateRecordNode,\r\n  transfer: TransferNode,\r\n  schedule: ScheduleNode,\r\n  end: EndNode\r\n};\r\n\r\n// =============== COMPONENTE PRINCIPAL ===============\r\nconst FlowEditor = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [idCounter, setIdCounter] = useState(0);\r\n\r\n  // (2) Exemplo de função que envia mensagem para o chat\r\n  // Aqui, você deve implementar de fato a chamada à sua API de chat ou SDK.\r\n  const sendMessageToChannel = (message) => {\r\n    // Exemplo de placeholder:\r\n    console.log('Enviando mensagem para o chat:', message);\r\n    // Se você tiver um ID de chat ou canal, inclua-o aqui:\r\n    // ex.: chatApi.sendMessage(chatId, message);\r\n  };\r\n\r\n  // Ao conectar nós\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  // Validação de conexões\r\n  const isValidConnection = useCallback(\r\n    (connection) => {\r\n      const sourceNode = nodes.find((node) => node.id === connection.source);\r\n      if (sourceNode?.type === 'question' || sourceNode?.type === 'condition') {\r\n        return true;\r\n      }\r\n      const hasExistingConnection = edges.some(\r\n        (edge) => edge.source === connection.source\r\n      );\r\n      return !hasExistingConnection;\r\n    },\r\n    [nodes, edges]\r\n  );\r\n\r\n  // Deletar nó\r\n  const deleteNode = useCallback(\r\n    (nodeId) => {\r\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n      setEdges((eds) =>\r\n        eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n      );\r\n    },\r\n    [setNodes, setEdges]\r\n  );\r\n\r\n  // Atualizar dados do nó\r\n  const updateNode = useCallback(\r\n    (nodeId, newData) => {\r\n      setNodes((prevNodes) =>\r\n        prevNodes.map((node) =>\r\n          node.id === nodeId\r\n            ? { ...node, data: { ...node.data, ...newData } }\r\n            : node\r\n        )\r\n      );\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // (3) Ajustar o createNode para incluir a função de envio no data do nó de mensagem\r\n  const createNode = useCallback(\r\n    (type, initialData) => {\r\n      const nodeId = `${type}-${idCounter}`;\r\n      setIdCounter((prev) => prev + 1);\r\n\r\n      const updateFunctions = {\r\n        message: {\r\n          updateContent: (content) => updateNode(nodeId, { content }),\r\n          onDelete: deleteNode,\r\n          // Passamos a função de envio para o data do nó\r\n          sendMessage: (content) => sendMessageToChannel(content)\r\n        },\r\n        question: {\r\n          updateQuestion: (question) => updateNode(nodeId, { question }),\r\n          addOption: () => {\r\n            setNodes((prevNodes) =>\r\n              prevNodes.map((node) =>\r\n                node.id === nodeId\r\n                  ? {\r\n                      ...node,\r\n                      data: {\r\n                        ...node.data,\r\n                        options: [\r\n                          ...(node.data.options || []),\r\n                          `Opção ${\r\n                            node.data.options ? node.data.options.length + 1 : 1\r\n                          }`\r\n                        ]\r\n                      }\r\n                    }\r\n                  : node\r\n              )\r\n            );\r\n          },\r\n          updateOptions: (options) => updateNode(nodeId, { options }),\r\n          onDelete: deleteNode\r\n        },\r\n        media: {\r\n          handleFileUpload: (file) => updateNode(nodeId, { file }),\r\n          updateUrl: (url) => updateNode(nodeId, { url }),\r\n          onDelete: deleteNode\r\n        },\r\n        condition: {\r\n          updateConditionType: (conditionType) =>\r\n            updateNode(nodeId, { conditionType }),\r\n          updateField: (field) => updateNode(nodeId, { field }),\r\n          updateComparison: (comparison) => updateNode(nodeId, { comparison }),\r\n          onDelete: deleteNode\r\n        },\r\n        interval: {\r\n          updateDuration: (duration) => updateNode(nodeId, { duration }),\r\n          onDelete: deleteNode\r\n        },\r\n        chatgpt: {\r\n          updateApiKey: (apiKey) => updateNode(nodeId, { apiKey }),\r\n          updateInstructions: (instructions) =>\r\n            updateNode(nodeId, { instructions }),\r\n          onDelete: deleteNode\r\n        },\r\n        api: {\r\n          updateMethod: (method) => updateNode(nodeId, { method }),\r\n          updateUrl: (url) => updateNode(nodeId, { url }),\r\n          updateHeaders: (headers) => updateNode(nodeId, { headers }),\r\n          updateBody: (body) => updateNode(nodeId, { body }),\r\n          onDelete: deleteNode\r\n        },\r\n        updateCRM: {\r\n          updateEntity: (entity) => updateNode(nodeId, { entity }),\r\n          updateField: (field) => updateNode(nodeId, { field }),\r\n          updateValue: (value) => updateNode(nodeId, { value }),\r\n          onDelete: deleteNode\r\n        },\r\n        createRecord: {\r\n          updateEntity: (entity) => updateNode(nodeId, { entity }),\r\n          updateStage: (stage) => updateNode(nodeId, { stage }),\r\n          updateFields: (fields) => updateNode(nodeId, { fields }),\r\n          onDelete: deleteNode\r\n        },\r\n        transfer: {\r\n          onDelete: deleteNode\r\n        },\r\n        schedule: {\r\n          onDelete: deleteNode\r\n        },\r\n        end: {\r\n          onDelete: deleteNode\r\n        }\r\n      };\r\n\r\n      const newNode = {\r\n        id: nodeId,\r\n        type,\r\n        data: { ...initialData, ...updateFunctions[type] },\r\n        position: { x: Math.random() * 400, y: Math.random() * 400 }\r\n      };\r\n\r\n      setNodes((nds) => [...nds, newNode]);\r\n    },\r\n    [idCounter, updateNode, deleteNode, setNodes, sendMessageToChannel]\r\n  );\r\n\r\n  // Categorias da sidebar\r\n  const categories = [\r\n    {\r\n      title: 'Conversa',\r\n      items: [\r\n        { label: 'Mensagem', nodeType: 'message', initialData: { content: '' } },\r\n        {\r\n          label: 'Pergunta',\r\n          nodeType: 'question',\r\n          initialData: { question: '', options: [] }\r\n        },\r\n        { label: 'Mídia', nodeType: 'media', initialData: { url: '' } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Ações do chat',\r\n      items: [\r\n        {\r\n          label: 'Condição',\r\n          nodeType: 'condition',\r\n          initialData: {\r\n            conditionType: 'cadastro',\r\n            field: '',\r\n            comparison: ''\r\n          }\r\n        },\r\n        { label: 'Transferir', nodeType: 'transfer', initialData: {} },\r\n        { label: 'Horário', nodeType: 'schedule', initialData: {} },\r\n        { label: 'Finalizar', nodeType: 'end', initialData: {} },\r\n        { label: 'Intervalo', nodeType: 'interval', initialData: { duration: 1 } }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Integrações',\r\n      items: [\r\n        {\r\n          label: 'Chat GPT',\r\n          nodeType: 'chatgpt',\r\n          initialData: { apiKey: '', instructions: '' }\r\n        },\r\n        {\r\n          label: 'API Externa',\r\n          nodeType: 'api',\r\n          initialData: { method: 'GET', url: '', headers: '', body: '' }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Bitrix',\r\n      items: [\r\n        {\r\n          label: 'Atualizar CRM',\r\n          nodeType: 'updateCRM',\r\n          initialData: { entity: 'lead', field: '', value: '' }\r\n        },\r\n        {\r\n          label: 'Criar Cadastro',\r\n          nodeType: 'createRecord',\r\n          initialData: { entity: 'lead', stage: 'new', fields: '' }\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  function CategoryBlock({ title, items }) {\r\n    return (\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h4 style={{ marginBottom: '10px' }}>{title}</h4>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n          {items.map((item) => (\r\n            <button\r\n              key={item.label}\r\n              style={chipStyle}\r\n              onClick={() => createNode(item.nodeType, item.initialData)}\r\n            >\r\n              {item.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      {/* SIDEBAR */}\r\n      <div style={sidebarStyles}>\r\n        <h3 style={{ marginBottom: '20px' }}>Qual a interação que deseja?</h3>\r\n        {categories.map((cat) => (\r\n          <CategoryBlock key={cat.title} title={cat.title} items={cat.items} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* ÁREA DO FLUXO */}\r\n      <div style={flowContainerStyles}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          nodeTypes={nodeTypes}\r\n          connectionLineStyle={{ stroke: '#ddd', strokeWidth: 2 }}\r\n          snapToGrid={true}\r\n          snapGrid={[15, 15]}\r\n          isValidConnection={isValidConnection}\r\n        >\r\n          <MiniMap />\r\n          <Controls />\r\n          <Background color=\"#aaa\" gap={16} />\r\n        </ReactFlow>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}