{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Estilos atualizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flowContainerStyles = {\n  width: '100%',\n  height: 'calc(100vh - 20px)',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    width: '100%'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '10px'\n  },\n  menuButton: {\n    padding: '10px 15px',\n    fontSize: '16px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    margin: '5px'\n  },\n  menuContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: '10px',\n    padding: '15px'\n  }\n};\nconst handleStyle = {\n  width: '15px',\n  height: '15px',\n  backgroundColor: '#2684ff',\n  border: '2px solid #fff',\n  borderRadius: '50%'\n};\n\n// Componente do Menu de Adição de Nós\nconst AddNodeMenu = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    ...nodeStyles.base,\n    minWidth: '400px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2795 Adicionar Novo N\\xF3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.menuContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('message'),\n      children: \"Mensagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('question'),\n      children: \"Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('media'),\n      children: \"M\\xEDdia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('condition'),\n      children: \"Condi\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('interval'),\n      children: \"Intervalo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('chatgpt'),\n      children: \"Chat GPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('api'),\n      children: \"API Externa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('updateCRM'),\n      children: \"Atualizar CRM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('createRecord'),\n      children: \"Criar Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 5\n}, this));\n\n// Componentes dos Nós\n_c2 = AddNodeMenu;\nconst MessageNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 5\n}, this));\n_c4 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c5 = ({\n  id,\n  data\n}) => {\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...data.options];\n    newOptions[index] = value;\n    data.updateOptions(newOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.base,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      style: handleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u2753 Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: nodeStyles.input,\n      value: data.question,\n      onChange: e => data.updateQuestion(e.target.value),\n      placeholder: \"Digite a pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nodeStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Op\\xE7\\xF5es de Resposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: opt,\n          style: {\n            ...nodeStyles.input,\n            width: '80%'\n          },\n          onChange: e => handleOptionChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: \"right\",\n          id: `option-${index}`,\n          style: {\n            ...handleStyle,\n            right: '-8px',\n            top: '50%',\n            transform: 'translateY(-50%)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: data.addOption,\n        children: \"+ Adicionar Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.deleteButton,\n      onClick: () => data.onDelete(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n});\n_c6 = QuestionNode;\nconst MediaNode = /*#__PURE__*/React.memo(_c7 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCF7 M\\xEDdia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    style: nodeStyles.input,\n    placeholder: \"URL da m\\xEDdia\",\n    value: data.url,\n    onChange: e => data.updateUrl(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 171,\n  columnNumber: 5\n}, this));\n_c8 = MediaNode;\nconst ConditionNode = /*#__PURE__*/React.memo(_c9 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2696\\uFE0F Condi\\xE7\\xE3o\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      style: nodeStyles.select,\n      value: data.conditionType,\n      onChange: e => data.updateConditionType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cadastro\",\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"campo\",\n        children: \"Campo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 187,\n  columnNumber: 5\n}, this));\n_c10 = ConditionNode;\nconst nodeTypes = {\n  addNodeMenu: AddNodeMenu,\n  message: MessageNode,\n  question: QuestionNode,\n  media: MediaNode,\n  condition: ConditionNode\n  // Adicione outros tipos de nós aqui...\n};\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    const targetNode = nodes.find(node => node.id === connection.target);\n    if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'question' || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'condition') {\n      return true;\n    }\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: () => {\n          setNodes(prevNodes => prevNodes.map(node => {\n            var _node$data$options;\n            return node.id === nodeId ? {\n              ...node,\n              data: {\n                ...node.data,\n                options: [...(node.data.options || []), `Opção ${(((_node$data$options = node.data.options) === null || _node$data$options === void 0 ? void 0 : _node$data$options.length) || 0) + 1}`]\n              }\n            } : node;\n          }));\n        },\n        updateOptions: options => updateNode(nodeId, {\n          options\n        }),\n        onDelete: deleteNode\n      },\n      media: {\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        onDelete: deleteNode\n      },\n      condition: {\n        updateConditionType: conditionType => updateNode(nodeId, {\n          conditionType\n        }),\n        onDelete: deleteNode\n      }\n      // Adicione outras funções de atualização aqui...\n    };\n    return {\n      id: nodeId,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      }\n    };\n  }, [idCounter, updateNode, deleteNode, setNodes]);\n  const addNode = useCallback(type => {\n    const nodeConfig = {\n      message: {\n        content: ''\n      },\n      question: {\n        question: '',\n        options: ['Sim', 'Não']\n      },\n      media: {\n        url: ''\n      },\n      condition: {\n        conditionType: 'cadastro'\n      },\n      interval: {\n        duration: 300\n      },\n      chatgpt: {\n        apiKey: '',\n        instructions: ''\n      },\n      api: {\n        method: 'GET',\n        url: '',\n        headers: '',\n        body: ''\n      },\n      updateCRM: {\n        entity: 'lead',\n        field: '',\n        value: ''\n      },\n      createRecord: {\n        entity: 'lead',\n        stage: 'new',\n        fields: '{}'\n      }\n    };\n    setNodes(prevNodes => [...prevNodes, createNode(type, nodeConfig[type])]);\n  }, [createNode, setNodes]);\n  useEffect(() => {\n    if (nodes.length === 0) {\n      const initialMenuNode = {\n        id: 'add-node-menu',\n        type: 'addNodeMenu',\n        position: {\n          x: 100,\n          y: 50\n        },\n        data: {\n          addNode\n        },\n        draggable: false\n      };\n      setNodes([initialMenuNode]);\n    }\n  }, [nodes.length, setNodes, addNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        isValidConnection: isValidConnection,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 9\n  }, this);\n};\n_s(FlowEditor, \"0IXXHrqRfH8FCYiVqRpMVQbbPag=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c11 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"AddNodeMenu$React.memo\");\n$RefreshReg$(_c2, \"AddNodeMenu\");\n$RefreshReg$(_c3, \"MessageNode$React.memo\");\n$RefreshReg$(_c4, \"MessageNode\");\n$RefreshReg$(_c5, \"QuestionNode$React.memo\");\n$RefreshReg$(_c6, \"QuestionNode\");\n$RefreshReg$(_c7, \"MediaNode$React.memo\");\n$RefreshReg$(_c8, \"MediaNode\");\n$RefreshReg$(_c9, \"ConditionNode$React.memo\");\n$RefreshReg$(_c10, \"ConditionNode\");\n$RefreshReg$(_c11, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","flowContainerStyles","width","height","position","overflow","nodeStyles","base","padding","backgroundColor","borderRadius","border","minWidth","boxShadow","display","flexDirection","alignItems","input","margin","section","select","deleteButton","background","color","cursor","justifyContent","marginTop","menuButton","fontSize","menuContainer","flexWrap","gap","handleStyle","AddNodeMenu","memo","_c","id","data","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addNode","_c2","MessageNode","_c3","type","value","content","onChange","e","updateContent","target","placeholder","onDelete","_c4","QuestionNode","_c5","handleOptionChange","index","newOptions","options","updateOptions","question","updateQuestion","map","opt","right","top","transform","addOption","_c6","MediaNode","_c7","url","updateUrl","_c8","ConditionNode","_c9","conditionType","updateConditionType","_c10","nodeTypes","addNodeMenu","message","media","condition","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","onConnect","params","eds","isValidConnection","connection","sourceNode","find","node","source","targetNode","hasExistingConnection","some","edge","deleteNode","nodeId","nds","filter","updateNode","newData","prevNodes","createNode","initialData","prev","updateFunctions","_node$data$options","length","x","Math","random","y","draggable","nodeConfig","interval","duration","chatgpt","apiKey","instructions","api","method","headers","body","updateCRM","entity","field","createRecord","stage","fields","initialMenuNode","fitView","_c11","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n    Handle,\r\n    useNodesState,\r\n    useEdgesState,\r\n    addEdge\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\n// Estilos atualizados\r\nconst flowContainerStyles = {\r\n    width: '100%',\r\n    height: 'calc(100vh - 20px)',\r\n    position: 'relative',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n    base: {\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        border: '2px solid #2684ff',\r\n        minWidth: '300px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        margin: '10px 0',\r\n        padding: '8px',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd'\r\n    },\r\n    section: {\r\n        margin: '15px 0',\r\n        padding: '10px',\r\n        backgroundColor: '#f8f9fa',\r\n        borderRadius: '6px',\r\n        width: '100%'\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        padding: '8px',\r\n        margin: '5px 0'\r\n    },\r\n    deleteButton: {\r\n        background: 'red',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '50%',\r\n        width: '24px',\r\n        height: '24px',\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: '10px'\r\n    },\r\n    menuButton: {\r\n        padding: '10px 15px',\r\n        fontSize: '16px',\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        margin: '5px'\r\n    },\r\n    menuContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        gap: '10px',\r\n        padding: '15px'\r\n    }\r\n};\r\n\r\nconst handleStyle = {\r\n    width: '15px',\r\n    height: '15px',\r\n    backgroundColor: '#2684ff',\r\n    border: '2px solid #fff',\r\n    borderRadius: '50%'\r\n};\r\n\r\n// Componente do Menu de Adição de Nós\r\nconst AddNodeMenu = React.memo(({ id, data }) => (\r\n    <div style={{ ...nodeStyles.base, minWidth: '400px' }}>\r\n        <h4>➕ Adicionar Novo Nó</h4>\r\n        <div style={nodeStyles.menuContainer}>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('message')}>Mensagem</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('question')}>Pergunta</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('media')}>Mídia</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('condition')}>Condição</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('interval')}>Intervalo</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('chatgpt')}>Chat GPT</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('api')}>API Externa</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('updateCRM')}>Atualizar CRM</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('createRecord')}>Criar Cadastro</button>\r\n        </div>\r\n    </div>\r\n));\r\n\r\n// Componentes dos Nós\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>💬 Mensagem</h4>\r\n        <textarea\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n            value={data.content}\r\n            onChange={(e) => data.updateContent(e.target.value)}\r\n            placeholder=\"Escreva sua mensagem...\"\r\n        />\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => {\r\n    const handleOptionChange = (index, value) => {\r\n        const newOptions = [...data.options];\r\n        newOptions[index] = value;\r\n        data.updateOptions(newOptions);\r\n    };\r\n\r\n    return (\r\n        <div style={nodeStyles.base}>\r\n            <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n            <h4>❓ Pergunta</h4>\r\n            <input\r\n                type=\"text\"\r\n                style={nodeStyles.input}\r\n                value={data.question}\r\n                onChange={(e) => data.updateQuestion(e.target.value)}\r\n                placeholder=\"Digite a pergunta\"\r\n            />\r\n            <div style={nodeStyles.section}>\r\n                <h5>Opções de Resposta:</h5>\r\n                {data.options.map((opt, index) => (\r\n                    <div key={index} style={{ margin: '5px 0', position: 'relative' }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={opt}\r\n                            style={{ ...nodeStyles.input, width: '80%' }}\r\n                            onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                        />\r\n                        <Handle\r\n                            type=\"source\"\r\n                            position=\"right\"\r\n                            id={`option-${index}`}\r\n                            style={{ ...handleStyle, right: '-8px', top: '50%', transform: 'translateY(-50%)' }}\r\n                        />\r\n                    </div>\r\n                ))}\r\n                <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n            </div>\r\n            <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst MediaNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>📷 Mídia</h4>\r\n        <input\r\n            type=\"text\"\r\n            style={nodeStyles.input}\r\n            placeholder=\"URL da mídia\"\r\n            value={data.url}\r\n            onChange={(e) => data.updateUrl(e.target.value)}\r\n        />\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst ConditionNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>⚖️ Condição</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select \r\n                style={nodeStyles.select} \r\n                value={data.conditionType}\r\n                onChange={(e) => data.updateConditionType(e.target.value)}\r\n            >\r\n                <option value=\"cadastro\">Cadastro</option>\r\n                <option value=\"campo\">Campo</option>\r\n            </select>\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst nodeTypes = {\r\n    addNodeMenu: AddNodeMenu,\r\n    message: MessageNode,\r\n    question: QuestionNode,\r\n    media: MediaNode,\r\n    condition: ConditionNode,\r\n    // Adicione outros tipos de nós aqui...\r\n};\r\n\r\nconst FlowEditor = () => {\r\n    const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n    const [idCounter, setIdCounter] = useState(0);\r\n\r\n    const onConnect = useCallback(\r\n        (params) => setEdges((eds) => addEdge(params, eds)),\r\n        [setEdges]\r\n    );\r\n\r\n    const isValidConnection = useCallback((connection) => {\r\n        const sourceNode = nodes.find((node) => node.id === connection.source);\r\n        const targetNode = nodes.find((node) => node.id === connection.target);\r\n\r\n        if (sourceNode?.type === 'question' || sourceNode?.type === 'condition') {\r\n            return true;\r\n        }\r\n\r\n        const hasExistingConnection = edges.some(\r\n            (edge) => edge.source === connection.source\r\n        );\r\n\r\n        return !hasExistingConnection;\r\n    }, [nodes, edges]);\r\n\r\n    const deleteNode = useCallback((nodeId) => {\r\n        setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n        setEdges((eds) => eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId));\r\n    }, [setNodes, setEdges]);\r\n\r\n    const updateNode = useCallback((nodeId, newData) => {\r\n        setNodes((prevNodes) =>\r\n            prevNodes.map((node) =>\r\n                node.id === nodeId ? { ...node, data: { ...node.data, ...newData } } : node\r\n            )\r\n        );\r\n    }, [setNodes]);\r\n\r\n    const createNode = useCallback((type, initialData) => {\r\n        const nodeId = `${type}-${idCounter}`;\r\n        setIdCounter((prev) => prev + 1);\r\n\r\n        const updateFunctions = {\r\n            message: {\r\n                updateContent: (content) => updateNode(nodeId, { content }),\r\n                onDelete: deleteNode,\r\n            },\r\n            question: {\r\n                updateQuestion: (question) => updateNode(nodeId, { question }),\r\n                addOption: () => {\r\n                    setNodes((prevNodes) =>\r\n                        prevNodes.map((node) =>\r\n                            node.id === nodeId\r\n                                ? {\r\n                                    ...node,\r\n                                    data: {\r\n                                        ...node.data,\r\n                                        options: [...(node.data.options || []), `Opção ${(node.data.options?.length || 0) + 1}`],\r\n                                    },\r\n                                }\r\n                                : node\r\n                        )\r\n                    );\r\n                },\r\n                updateOptions: (options) => updateNode(nodeId, { options }),\r\n                onDelete: deleteNode,\r\n            },\r\n            media: {\r\n                updateUrl: (url) => updateNode(nodeId, { url }),\r\n                onDelete: deleteNode,\r\n            },\r\n            condition: {\r\n                updateConditionType: (conditionType) => updateNode(nodeId, { conditionType }),\r\n                onDelete: deleteNode,\r\n            },\r\n            // Adicione outras funções de atualização aqui...\r\n        };\r\n\r\n        return {\r\n            id: nodeId,\r\n            type,\r\n            position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n            draggable: true,\r\n            data: {\r\n                ...initialData,\r\n                ...updateFunctions[type],\r\n            },\r\n        };\r\n    }, [idCounter, updateNode, deleteNode, setNodes]);\r\n\r\n    const addNode = useCallback((type) => {\r\n        const nodeConfig = {\r\n            message: { content: '' },\r\n            question: { question: '', options: ['Sim', 'Não'] },\r\n            media: { url: '' },\r\n            condition: { conditionType: 'cadastro' },\r\n            interval: { duration: 300 },\r\n            chatgpt: { apiKey: '', instructions: '' },\r\n            api: { method: 'GET', url: '', headers: '', body: '' },\r\n            updateCRM: { entity: 'lead', field: '', value: '' },\r\n            createRecord: { entity: 'lead', stage: 'new', fields: '{}' },\r\n        };\r\n        setNodes((prevNodes) => [...prevNodes, createNode(type, nodeConfig[type])]);\r\n    }, [createNode, setNodes]);\r\n\r\n    useEffect(() => {\r\n        if (nodes.length === 0) {\r\n            const initialMenuNode = {\r\n                id: 'add-node-menu',\r\n                type: 'addNodeMenu',\r\n                position: { x: 100, y: 50 },\r\n                data: { addNode },\r\n                draggable: false,\r\n            };\r\n            setNodes([initialMenuNode]);\r\n        }\r\n    }, [nodes.length, setNodes, addNode]);\r\n\r\n    return (\r\n        <div style={{ height: '100vh' }}>\r\n            <div style={flowContainerStyles}>\r\n                <ReactFlow\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onConnect={onConnect}\r\n                    isValidConnection={isValidConnection}\r\n                    nodeTypes={nodeTypes}\r\n                    fitView\r\n                >\r\n                    <MiniMap />\r\n                    <Controls />\r\n                    <Background />\r\n                </ReactFlow>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlowEditor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAOC,SAAS,IACZC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,OAAO,QACJ,WAAW;AAClB,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAG;EACxBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,oBAAoB;EAC5BC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,UAAU,GAAG;EACfC,IAAI,EAAE;IACFC,OAAO,EAAE,MAAM;IACfC,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,mBAAmB;IAC3BC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE,8BAA8B;IACzCT,QAAQ,EAAE,UAAU;IACpBU,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EAChB,CAAC;EACDC,KAAK,EAAE;IACHC,MAAM,EAAE,QAAQ;IAChBV,OAAO,EAAE,KAAK;IACdN,KAAK,EAAE,MAAM;IACbQ,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE;EACZ,CAAC;EACDQ,OAAO,EAAE;IACLD,MAAM,EAAE,QAAQ;IAChBV,OAAO,EAAE,MAAM;IACfC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,KAAK;IACnBR,KAAK,EAAE;EACX,CAAC;EACDkB,MAAM,EAAE;IACJlB,KAAK,EAAE,MAAM;IACbM,OAAO,EAAE,KAAK;IACdU,MAAM,EAAE;EACZ,CAAC;EACDG,YAAY,EAAE;IACVC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,OAAO;IACdZ,MAAM,EAAE,MAAM;IACdD,YAAY,EAAE,KAAK;IACnBR,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdqB,MAAM,EAAE,SAAS;IACjBV,OAAO,EAAE,MAAM;IACfE,UAAU,EAAE,QAAQ;IACpBS,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE;EACf,CAAC;EACDC,UAAU,EAAE;IACRnB,OAAO,EAAE,WAAW;IACpBoB,QAAQ,EAAE,MAAM;IAChBnB,eAAe,EAAE,SAAS;IAC1Bc,KAAK,EAAE,OAAO;IACdZ,MAAM,EAAE,MAAM;IACdD,YAAY,EAAE,KAAK;IACnBc,MAAM,EAAE,SAAS;IACjBN,MAAM,EAAE;EACZ,CAAC;EACDW,aAAa,EAAE;IACXf,OAAO,EAAE,MAAM;IACfgB,QAAQ,EAAE,MAAM;IAChBL,cAAc,EAAE,QAAQ;IACxBM,GAAG,EAAE,MAAM;IACXvB,OAAO,EAAE;EACb;AACJ,CAAC;AAED,MAAMwB,WAAW,GAAG;EAChB9B,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdM,eAAe,EAAE,SAAS;EAC1BE,MAAM,EAAE,gBAAgB;EACxBD,YAAY,EAAE;AAClB,CAAC;;AAED;AACA,MAAMuB,WAAW,gBAAG9C,KAAK,CAAC+C,IAAI,CAAAC,EAAA,GAACA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,kBACxCrC,OAAA;EAAKsC,KAAK,EAAE;IAAE,GAAGhC,UAAU,CAACC,IAAI;IAAEK,QAAQ,EAAE;EAAQ,CAAE;EAAA2B,QAAA,gBAClDvC,OAAA;IAAAuC,QAAA,EAAI;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAC5B3C,OAAA;IAAKsC,KAAK,EAAEhC,UAAU,CAACuB,aAAc;IAAAU,QAAA,gBACjCvC,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,SAAS,CAAE;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/F3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,UAAU,CAAE;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChG3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,OAAO,CAAE;MAAAN,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1F3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,WAAW,CAAE;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjG3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,UAAU,CAAE;MAAAN,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjG3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,SAAS,CAAE;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/F3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,KAAK,CAAE;MAAAN,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9F3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,WAAW,CAAE;MAAAN,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtG3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACqB,UAAW;MAACiB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACQ,OAAO,CAAC,cAAc,CAAE;MAAAN,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzG,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACR,CAAC;;AAEF;AAAAG,GAAA,GAjBMb,WAAW;AAkBjB,MAAMc,WAAW,gBAAG5D,KAAK,CAAC+C,IAAI,CAAAc,GAAA,GAACA,CAAC;EAAEZ,EAAE;EAAEC;AAAK,CAAC,kBACxCrC,OAAA;EAAKsC,KAAK,EAAEhC,UAAU,CAACC,IAAK;EAAAgC,QAAA,gBACxBvC,OAAA,CAACL,MAAM;IAACsD,IAAI,EAAC,QAAQ;IAAC7C,QAAQ,EAAC,MAAM;IAACkC,KAAK,EAAEN;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC5D3C,OAAA;IAAAuC,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACpB3C,OAAA;IACIsC,KAAK,EAAE;MAAE,GAAGhC,UAAU,CAACW,KAAK;MAAEd,MAAM,EAAE;IAAQ,CAAE;IAChD+C,KAAK,EAAEb,IAAI,CAACc,OAAQ;IACpBC,QAAQ,EAAGC,CAAC,IAAKhB,IAAI,CAACiB,aAAa,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;IACpDM,WAAW,EAAC;EAAyB;IAAAhB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC,eACF3C,OAAA;IAAQsC,KAAK,EAAEhC,UAAU,CAACe,YAAa;IAACuB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACoB,QAAQ,CAACrB,EAAE,CAAE;IAAAG,QAAA,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eACtF3C,OAAA,CAACL,MAAM;IAACsD,IAAI,EAAC,QAAQ;IAAC7C,QAAQ,EAAC,OAAO;IAACkC,KAAK,EAAEN;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5D,CACR,CAAC;AAACe,GAAA,GAbGX,WAAW;AAejB,MAAMY,YAAY,gBAAGxE,KAAK,CAAC+C,IAAI,CAAA0B,GAAA,GAACA,CAAC;EAAExB,EAAE;EAAEC;AAAK,CAAC,KAAK;EAC9C,MAAMwB,kBAAkB,GAAGA,CAACC,KAAK,EAAEZ,KAAK,KAAK;IACzC,MAAMa,UAAU,GAAG,CAAC,GAAG1B,IAAI,CAAC2B,OAAO,CAAC;IACpCD,UAAU,CAACD,KAAK,CAAC,GAAGZ,KAAK;IACzBb,IAAI,CAAC4B,aAAa,CAACF,UAAU,CAAC;EAClC,CAAC;EAED,oBACI/D,OAAA;IAAKsC,KAAK,EAAEhC,UAAU,CAACC,IAAK;IAAAgC,QAAA,gBACxBvC,OAAA,CAACL,MAAM;MAACsD,IAAI,EAAC,QAAQ;MAAC7C,QAAQ,EAAC,MAAM;MAACkC,KAAK,EAAEN;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5D3C,OAAA;MAAAuC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB3C,OAAA;MACIiD,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEhC,UAAU,CAACW,KAAM;MACxBiC,KAAK,EAAEb,IAAI,CAAC6B,QAAS;MACrBd,QAAQ,EAAGC,CAAC,IAAKhB,IAAI,CAAC8B,cAAc,CAACd,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;MACrDM,WAAW,EAAC;IAAmB;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF3C,OAAA;MAAKsC,KAAK,EAAEhC,UAAU,CAACa,OAAQ;MAAAoB,QAAA,gBAC3BvC,OAAA;QAAAuC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BN,IAAI,CAAC2B,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEP,KAAK,kBACzB9D,OAAA;QAAiBsC,KAAK,EAAE;UAAEpB,MAAM,EAAE,OAAO;UAAEd,QAAQ,EAAE;QAAW,CAAE;QAAAmC,QAAA,gBAC9DvC,OAAA;UACIiD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEmB,GAAI;UACX/B,KAAK,EAAE;YAAE,GAAGhC,UAAU,CAACW,KAAK;YAAEf,KAAK,EAAE;UAAM,CAAE;UAC7CkD,QAAQ,EAAGC,CAAC,IAAKQ,kBAAkB,CAACC,KAAK,EAAET,CAAC,CAACE,MAAM,CAACL,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,eACF3C,OAAA,CAACL,MAAM;UACHsD,IAAI,EAAC,QAAQ;UACb7C,QAAQ,EAAC,OAAO;UAChBgC,EAAE,EAAE,UAAU0B,KAAK,EAAG;UACtBxB,KAAK,EAAE;YAAE,GAAGN,WAAW;YAAEsC,KAAK,EAAE,MAAM;YAAEC,GAAG,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAmB;QAAE;UAAAhC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC;MAAA,GAZImB,KAAK;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaV,CACR,CAAC,eACF3C,OAAA;QAAQ4C,OAAO,EAAEP,IAAI,CAACoC,SAAU;QAAAlC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACN3C,OAAA;MAAQsC,KAAK,EAAEhC,UAAU,CAACe,YAAa;MAACuB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACoB,QAAQ,CAACrB,EAAE,CAAE;MAAAG,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEd,CAAC,CAAC;AAAC+B,GAAA,GAzCGf,YAAY;AA2ClB,MAAMgB,SAAS,gBAAGxF,KAAK,CAAC+C,IAAI,CAAA0C,GAAA,GAACA,CAAC;EAAExC,EAAE;EAAEC;AAAK,CAAC,kBACtCrC,OAAA;EAAKsC,KAAK,EAAEhC,UAAU,CAACC,IAAK;EAAAgC,QAAA,gBACxBvC,OAAA,CAACL,MAAM;IAACsD,IAAI,EAAC,QAAQ;IAAC7C,QAAQ,EAAC,MAAM;IAACkC,KAAK,EAAEN;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC5D3C,OAAA;IAAAuC,QAAA,EAAI;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACjB3C,OAAA;IACIiD,IAAI,EAAC,MAAM;IACXX,KAAK,EAAEhC,UAAU,CAACW,KAAM;IACxBuC,WAAW,EAAC,iBAAc;IAC1BN,KAAK,EAAEb,IAAI,CAACwC,GAAI;IAChBzB,QAAQ,EAAGC,CAAC,IAAKhB,IAAI,CAACyC,SAAS,CAACzB,CAAC,CAACE,MAAM,CAACL,KAAK;EAAE;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC,eACF3C,OAAA;IAAQsC,KAAK,EAAEhC,UAAU,CAACe,YAAa;IAACuB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACoB,QAAQ,CAACrB,EAAE,CAAE;IAAAG,QAAA,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eACtF3C,OAAA,CAACL,MAAM;IAACsD,IAAI,EAAC,QAAQ;IAAC7C,QAAQ,EAAC,OAAO;IAACkC,KAAK,EAAEN;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5D,CACR,CAAC;AAACoC,GAAA,GAdGJ,SAAS;AAgBf,MAAMK,aAAa,gBAAG7F,KAAK,CAAC+C,IAAI,CAAA+C,GAAA,GAACA,CAAC;EAAE7C,EAAE;EAAEC;AAAK,CAAC,kBAC1CrC,OAAA;EAAKsC,KAAK,EAAEhC,UAAU,CAACC,IAAK;EAAAgC,QAAA,gBACxBvC,OAAA,CAACL,MAAM;IAACsD,IAAI,EAAC,QAAQ;IAAC7C,QAAQ,EAAC,MAAM;IAACkC,KAAK,EAAEN;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC5D3C,OAAA;IAAAuC,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACpB3C,OAAA;IAAKsC,KAAK,EAAEhC,UAAU,CAACa,OAAQ;IAAAoB,QAAA,eAC3BvC,OAAA;MACIsC,KAAK,EAAEhC,UAAU,CAACc,MAAO;MACzB8B,KAAK,EAAEb,IAAI,CAAC6C,aAAc;MAC1B9B,QAAQ,EAAGC,CAAC,IAAKhB,IAAI,CAAC8C,mBAAmB,CAAC9B,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;MAAAX,QAAA,gBAE1DvC,OAAA;QAAQkD,KAAK,EAAC,UAAU;QAAAX,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C3C,OAAA;QAAQkD,KAAK,EAAC,OAAO;QAAAX,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC,eACN3C,OAAA;IAAQsC,KAAK,EAAEhC,UAAU,CAACe,YAAa;IAACuB,OAAO,EAAEA,CAAA,KAAMP,IAAI,CAACoB,QAAQ,CAACrB,EAAE,CAAE;IAAAG,QAAA,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eACtF3C,OAAA,CAACL,MAAM;IAACsD,IAAI,EAAC,QAAQ;IAAC7C,QAAQ,EAAC,OAAO;IAACkC,KAAK,EAAEN;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5D,CACR,CAAC;AAACyC,IAAA,GAjBGJ,aAAa;AAmBnB,MAAMK,SAAS,GAAG;EACdC,WAAW,EAAErD,WAAW;EACxBsD,OAAO,EAAExC,WAAW;EACpBmB,QAAQ,EAAEP,YAAY;EACtB6B,KAAK,EAAEb,SAAS;EAChBc,SAAS,EAAET;EACX;AACJ,CAAC;AAED,MAAMU,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGlG,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmG,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGpG,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqG,SAAS,EAAEC,YAAY,CAAC,GAAG/G,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMgH,SAAS,GAAG/G,WAAW,CACxBgH,MAAM,IAAKL,QAAQ,CAAEM,GAAG,IAAKxG,OAAO,CAACuG,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAACN,QAAQ,CACb,CAAC;EAED,MAAMO,iBAAiB,GAAGlH,WAAW,CAAEmH,UAAU,IAAK;IAClD,MAAMC,UAAU,GAAGb,KAAK,CAACc,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACvE,EAAE,KAAKoE,UAAU,CAACI,MAAM,CAAC;IACtE,MAAMC,UAAU,GAAGjB,KAAK,CAACc,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACvE,EAAE,KAAKoE,UAAU,CAACjD,MAAM,CAAC;IAEtE,IAAI,CAAAkD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAExD,IAAI,MAAK,UAAU,IAAI,CAAAwD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAExD,IAAI,MAAK,WAAW,EAAE;MACrE,OAAO,IAAI;IACf;IAEA,MAAM6D,qBAAqB,GAAGf,KAAK,CAACgB,IAAI,CACnCC,IAAI,IAAKA,IAAI,CAACJ,MAAM,KAAKJ,UAAU,CAACI,MACzC,CAAC;IAED,OAAO,CAACE,qBAAqB;EACjC,CAAC,EAAE,CAAClB,KAAK,EAAEG,KAAK,CAAC,CAAC;EAElB,MAAMkB,UAAU,GAAG5H,WAAW,CAAE6H,MAAM,IAAK;IACvCrB,QAAQ,CAAEsB,GAAG,IAAKA,GAAG,CAACC,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACvE,EAAE,KAAK8E,MAAM,CAAC,CAAC;IAC3DlB,QAAQ,CAAEM,GAAG,IAAKA,GAAG,CAACc,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,MAAM,KAAKM,MAAM,IAAIF,IAAI,CAACzD,MAAM,KAAK2D,MAAM,CAAC,CAAC;EAC7F,CAAC,EAAE,CAACrB,QAAQ,EAAEG,QAAQ,CAAC,CAAC;EAExB,MAAMqB,UAAU,GAAGhI,WAAW,CAAC,CAAC6H,MAAM,EAAEI,OAAO,KAAK;IAChDzB,QAAQ,CAAE0B,SAAS,IACfA,SAAS,CAACnD,GAAG,CAAEuC,IAAI,IACfA,IAAI,CAACvE,EAAE,KAAK8E,MAAM,GAAG;MAAE,GAAGP,IAAI;MAAEtE,IAAI,EAAE;QAAE,GAAGsE,IAAI,CAACtE,IAAI;QAAE,GAAGiF;MAAQ;IAAE,CAAC,GAAGX,IAC3E,CACJ,CAAC;EACL,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAM2B,UAAU,GAAGnI,WAAW,CAAC,CAAC4D,IAAI,EAAEwE,WAAW,KAAK;IAClD,MAAMP,MAAM,GAAG,GAAGjE,IAAI,IAAIiD,SAAS,EAAE;IACrCC,YAAY,CAAEuB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAEhC,MAAMC,eAAe,GAAG;MACpBpC,OAAO,EAAE;QACLjC,aAAa,EAAGH,OAAO,IAAKkE,UAAU,CAACH,MAAM,EAAE;UAAE/D;QAAQ,CAAC,CAAC;QAC3DM,QAAQ,EAAEwD;MACd,CAAC;MACD/C,QAAQ,EAAE;QACNC,cAAc,EAAGD,QAAQ,IAAKmD,UAAU,CAACH,MAAM,EAAE;UAAEhD;QAAS,CAAC,CAAC;QAC9DO,SAAS,EAAEA,CAAA,KAAM;UACboB,QAAQ,CAAE0B,SAAS,IACfA,SAAS,CAACnD,GAAG,CAAEuC,IAAI;YAAA,IAAAiB,kBAAA;YAAA,OACfjB,IAAI,CAACvE,EAAE,KAAK8E,MAAM,GACZ;cACE,GAAGP,IAAI;cACPtE,IAAI,EAAE;gBACF,GAAGsE,IAAI,CAACtE,IAAI;gBACZ2B,OAAO,EAAE,CAAC,IAAI2C,IAAI,CAACtE,IAAI,CAAC2B,OAAO,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,EAAA4D,kBAAA,GAAAjB,IAAI,CAACtE,IAAI,CAAC2B,OAAO,cAAA4D,kBAAA,uBAAjBA,kBAAA,CAAmBC,MAAM,KAAI,CAAC,IAAI,CAAC,EAAE;cAC3F;YACJ,CAAC,GACClB,IAAI;UAAA,CACd,CACJ,CAAC;QACL,CAAC;QACD1C,aAAa,EAAGD,OAAO,IAAKqD,UAAU,CAACH,MAAM,EAAE;UAAElD;QAAQ,CAAC,CAAC;QAC3DP,QAAQ,EAAEwD;MACd,CAAC;MACDzB,KAAK,EAAE;QACHV,SAAS,EAAGD,GAAG,IAAKwC,UAAU,CAACH,MAAM,EAAE;UAAErC;QAAI,CAAC,CAAC;QAC/CpB,QAAQ,EAAEwD;MACd,CAAC;MACDxB,SAAS,EAAE;QACPN,mBAAmB,EAAGD,aAAa,IAAKmC,UAAU,CAACH,MAAM,EAAE;UAAEhC;QAAc,CAAC,CAAC;QAC7EzB,QAAQ,EAAEwD;MACd;MACA;IACJ,CAAC;IAED,OAAO;MACH7E,EAAE,EAAE8E,MAAM;MACVjE,IAAI;MACJ7C,QAAQ,EAAE;QAAE0H,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QAAEC,CAAC,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;MAAI,CAAC;MAC5DE,SAAS,EAAE,IAAI;MACf7F,IAAI,EAAE;QACF,GAAGoF,WAAW;QACd,GAAGE,eAAe,CAAC1E,IAAI;MAC3B;IACJ,CAAC;EACL,CAAC,EAAE,CAACiD,SAAS,EAAEmB,UAAU,EAAEJ,UAAU,EAAEpB,QAAQ,CAAC,CAAC;EAEjD,MAAMhD,OAAO,GAAGxD,WAAW,CAAE4D,IAAI,IAAK;IAClC,MAAMkF,UAAU,GAAG;MACf5C,OAAO,EAAE;QAAEpC,OAAO,EAAE;MAAG,CAAC;MACxBe,QAAQ,EAAE;QAAEA,QAAQ,EAAE,EAAE;QAAEF,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK;MAAE,CAAC;MACnDwB,KAAK,EAAE;QAAEX,GAAG,EAAE;MAAG,CAAC;MAClBY,SAAS,EAAE;QAAEP,aAAa,EAAE;MAAW,CAAC;MACxCkD,QAAQ,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAC;MAC3BC,OAAO,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAC;MACzCC,GAAG,EAAE;QAAEC,MAAM,EAAE,KAAK;QAAE7D,GAAG,EAAE,EAAE;QAAE8D,OAAO,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MACtDC,SAAS,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE,EAAE;QAAE7F,KAAK,EAAE;MAAG,CAAC;MACnD8F,YAAY,EAAE;QAAEF,MAAM,EAAE,MAAM;QAAEG,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAK;IAC/D,CAAC;IACDrD,QAAQ,CAAE0B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEC,UAAU,CAACvE,IAAI,EAAEkF,UAAU,CAAClF,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/E,CAAC,EAAE,CAACuE,UAAU,EAAE3B,QAAQ,CAAC,CAAC;EAE1BvG,SAAS,CAAC,MAAM;IACZ,IAAIsG,KAAK,CAACiC,MAAM,KAAK,CAAC,EAAE;MACpB,MAAMsB,eAAe,GAAG;QACpB/G,EAAE,EAAE,eAAe;QACnBa,IAAI,EAAE,aAAa;QACnB7C,QAAQ,EAAE;UAAE0H,CAAC,EAAE,GAAG;UAAEG,CAAC,EAAE;QAAG,CAAC;QAC3B5F,IAAI,EAAE;UAAEQ;QAAQ,CAAC;QACjBqF,SAAS,EAAE;MACf,CAAC;MACDrC,QAAQ,CAAC,CAACsD,eAAe,CAAC,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACvD,KAAK,CAACiC,MAAM,EAAEhC,QAAQ,EAAEhD,OAAO,CAAC,CAAC;EAErC,oBACI7C,OAAA;IAAKsC,KAAK,EAAE;MAAEnC,MAAM,EAAE;IAAQ,CAAE;IAAAoC,QAAA,eAC5BvC,OAAA;MAAKsC,KAAK,EAAErC,mBAAoB;MAAAsC,QAAA,eAC5BvC,OAAA,CAACT,SAAS;QACNqG,KAAK,EAAEA,KAAM;QACbG,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA,aAAc;QAC7BG,aAAa,EAAEA,aAAc;QAC7BG,SAAS,EAAEA,SAAU;QACrBG,iBAAiB,EAAEA,iBAAkB;QACrClB,SAAS,EAAEA,SAAU;QACrB+D,OAAO;QAAA7G,QAAA,gBAEPvC,OAAA,CAACR,OAAO;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX3C,OAAA,CAACP,QAAQ;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZ3C,OAAA,CAACN,UAAU;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACgD,EAAA,CA1IID,UAAU;EAAA,QAC6B9F,aAAa,EACbC,aAAa;AAAA;AAAAwJ,IAAA,GAFpD3D,UAAU;AA4IhB,eAAeA,UAAU;AAAC,IAAAvD,EAAA,EAAAW,GAAA,EAAAE,GAAA,EAAAU,GAAA,EAAAE,GAAA,EAAAc,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,IAAA,EAAAiE,IAAA;AAAAC,YAAA,CAAAnH,EAAA;AAAAmH,YAAA,CAAAxG,GAAA;AAAAwG,YAAA,CAAAtG,GAAA;AAAAsG,YAAA,CAAA5F,GAAA;AAAA4F,YAAA,CAAA1F,GAAA;AAAA0F,YAAA,CAAA5E,GAAA;AAAA4E,YAAA,CAAA1E,GAAA;AAAA0E,YAAA,CAAAvE,GAAA;AAAAuE,YAAA,CAAArE,GAAA;AAAAqE,YAAA,CAAAlE,IAAA;AAAAkE,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}