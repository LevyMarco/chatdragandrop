{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls, Background, Handle, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport { saveFlow } from './services';\n\n// ... (mantenha os estilos e componentes MessageNode/QuestionNode anteriores)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [idCounter, setIdCounter] = useState(0);\n\n  // Função para adicionar nós (com draggable habilitado)\n  const addNode = (type, label) => {\n    const newNode = {\n      id: `${type}-${idCounter}`,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      // ← Corrigido aqui\n      data: {\n        label,\n        content: '',\n        options: [{\n          label: 'Sim',\n          value: 'yes'\n        }, {\n          label: 'Não',\n          value: 'no'\n        }],\n        updateContent: content => updateNodeData(`${type}-${idCounter}`, {\n          content\n        }),\n        updateQuestion: content => updateNodeData(`${type}-${idCounter}`, {\n          content\n        }),\n        updateOption: (index, label) => {\n          const newOptions = [...newNode.data.options];\n          newOptions[index].label = label;\n          updateNodeData(`${type}-${idCounter}`, {\n            options: newOptions\n          });\n        }\n      }\n    };\n    setIdCounter(idCounter + 1);\n    setNodes(nds => [...nds, newNode]);\n  };\n\n  // ... (mantenha o restante do código anterior)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange // ← Adicionado aqui\n      ,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      nodeTypes: {\n        message: MessageNode,\n        question: QuestionNode\n      },\n      fitView: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowEditor, \"Kq2Ox2Wwx/QPsJ7reEt82GsqIlI=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = FlowEditor;\nvar _c;\n$RefreshReg$(_c, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","addEdge","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","saveFlow","jsxDEV","_jsxDEV","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","addNode","type","label","newNode","id","position","x","Math","random","y","draggable","data","content","options","value","updateContent","updateNodeData","updateQuestion","updateOption","index","newOptions","nds","style","height","display","children","onConnect","nodeTypes","message","MessageNode","question","QuestionNode","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  useNodesState,\r\n  useEdgesState\r\n} from 'react-flow-renderer';\r\nimport { saveFlow } from './services';\r\n\r\n// ... (mantenha os estilos e componentes MessageNode/QuestionNode anteriores)\r\n\r\nconst FlowEditor = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [idCounter, setIdCounter] = useState(0);\r\n\r\n  // Função para adicionar nós (com draggable habilitado)\r\n  const addNode = (type, label) => {\r\n    const newNode = {\r\n      id: `${type}-${idCounter}`,\r\n      type,\r\n      position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n      draggable: true, // ← Corrigido aqui\r\n      data: {\r\n        label,\r\n        content: '',\r\n        options: [{ label: 'Sim', value: 'yes' }, { label: 'Não', value: 'no' }],\r\n        updateContent: (content) => updateNodeData(`${type}-${idCounter}`, { content }),\r\n        updateQuestion: (content) => updateNodeData(`${type}-${idCounter}`, { content }),\r\n        updateOption: (index, label) => {\r\n          const newOptions = [...newNode.data.options];\r\n          newOptions[index].label = label;\r\n          updateNodeData(`${type}-${idCounter}`, { options: newOptions });\r\n        }\r\n      }\r\n    };\r\n    setIdCounter(idCounter + 1);\r\n    setNodes((nds) => [...nds, newNode]);\r\n  };\r\n\r\n  // ... (mantenha o restante do código anterior)\r\n\r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex' }}>\r\n      {/* Painel lateral */}\r\n\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange} // ← Adicionado aqui\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        nodeTypes={{ message: MessageNode, question: QuestionNode }}\r\n        fitView\r\n      >\r\n        {/* ... */}\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}