{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\DocsImportantes\\\\CLT\\\\Bitrix24\\\\ProjetoDragAndDrop\\\\frontend\\\\src\\\\FlowEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, useNodesState, useEdgesState, addEdge } from 'react-flow-renderer';\n\n// Estilos atualizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flowContainerStyles = {\n  width: '100%',\n  height: 'calc(100vh - 20px)',\n  // Adjust height to account for no top bar\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst nodeStyles = {\n  base: {\n    padding: '20px',\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    border: '2px solid #2684ff',\n    minWidth: '300px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    margin: '10px 0',\n    padding: '8px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  section: {\n    margin: '15px 0',\n    padding: '10px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    width: '100%'\n  },\n  select: {\n    width: '100%',\n    padding: '8px',\n    margin: '5px 0'\n  },\n  deleteButton: {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '10px'\n  },\n  menuButton: {\n    padding: '10px 15px',\n    fontSize: '16px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    margin: '5px'\n  },\n  menuContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: '10px',\n    padding: '15px'\n  }\n};\n\n// Estilo personalizado para os Handles (bolinhas de conexão)\nconst handleStyle = {\n  width: '15px',\n  height: '15px',\n  backgroundColor: '#2684ff',\n  border: '2px solid #fff',\n  borderRadius: '50%'\n};\n\n// Componente do Nó de Menu para Adicionar Nós\nconst AddNodeMenu = /*#__PURE__*/React.memo(_c = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    ...nodeStyles.base,\n    minWidth: '400px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2795 Adicionar Novo N\\xF3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.menuContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('message'),\n      children: \"Mensagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('question'),\n      children: \"Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('media'),\n      children: \"M\\xEDdia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('condition'),\n      children: \"Condi\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('interval'),\n      children: \"Intervalo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('chatgpt'),\n      children: \"Chat GPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('api'),\n      children: \"API Externa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('updateCRM'),\n      children: \"Atualizar CRM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.menuButton,\n      onClick: () => data.addNode('createRecord'),\n      children: \"Criar Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 5\n}, this));\n\n// Componentes dos Nós com React.memo para otimização\n_c2 = AddNodeMenu;\nconst MessageNode = /*#__PURE__*/React.memo(_c3 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCAC Mensagem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    },\n    value: data.content,\n    onChange: e => data.updateContent(e.target.value),\n    placeholder: \"Escreva sua mensagem...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 5\n}, this));\n_c4 = MessageNode;\nconst QuestionNode = /*#__PURE__*/React.memo(_c5 = ({\n  id,\n  data\n}) => {\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...data.options];\n    newOptions[index] = value;\n    data.updateOptions(newOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.base,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      style: handleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u2753 Pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: nodeStyles.input,\n      value: data.question,\n      onChange: e => data.updateQuestion(e.target.value),\n      placeholder: \"Digite a pergunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nodeStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Op\\xE7\\xF5es de Resposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), data.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: opt,\n          style: {\n            ...nodeStyles.input,\n            width: '80%'\n          },\n          onChange: e => handleOptionChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: \"right\",\n          id: `option-${index}`,\n          style: {\n            ...handleStyle,\n            right: '-8px',\n            top: '50%',\n            transform: 'translateY(-50%)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: data.addOption,\n        children: \"+ Adicionar Op\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nodeStyles.deleteButton,\n      onClick: () => data.onDelete(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n});\n_c6 = QuestionNode;\nconst MediaNode = /*#__PURE__*/React.memo(_c7 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDDBC\\uFE0F M\\xEDdia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: e => data.handleFileUpload(e.target.files[0]),\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Ou insira URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: e => data.updateUrl(e.target.value),\n      placeholder: \"https://exemplo.com/imagem.jpg\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 171,\n  columnNumber: 5\n}, this));\n_c8 = MediaNode;\nconst ConditionNode = /*#__PURE__*/React.memo(_c9 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u2696\\uFE0F Condi\\xE7\\xE3o\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: data.conditionType,\n    onChange: e => data.updateConditionType(e.target.value),\n    style: nodeStyles.select,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"cadastro\",\n      children: \"Verificar Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"valor\",\n      children: \"Comparar Valores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this), data.conditionType === 'cadastro' && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.field,\n      onChange: e => data.updateField(e.target.value),\n      placeholder: \"Campo para verifica\\xE7\\xE3o (ex: PHONE)\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 13\n  }, this), data.conditionType === 'valor' && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.comparison,\n      onChange: e => data.updateComparison(e.target.value),\n      placeholder: \"Express\\xE3o (ex: VALUE > 100)\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"true\",\n    style: {\n      ...handleStyle,\n      top: '30%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"false\",\n    style: {\n      ...handleStyle,\n      top: '70%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 195,\n  columnNumber: 5\n}, this));\n_c10 = ConditionNode;\nconst IntervalNode = /*#__PURE__*/React.memo(_c11 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\u23F1\\uFE0F Intervalo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: data.duration,\n      onChange: e => data.updateDuration(e.target.value),\n      placeholder: \"Dura\\xE7\\xE3o em segundos\",\n      min: \"1\",\n      max: \"7200\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: \"M\\xE1ximo: 2 horas (7200 segundos)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 238,\n  columnNumber: 5\n}, this));\n_c12 = IntervalNode;\nconst ChatGPTNode = /*#__PURE__*/React.memo(_c13 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83E\\uDD16 Chat GPT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    value: data.apiKey,\n    onChange: e => data.updateApiKey(e.target.value),\n    placeholder: \"Insira sua API Key da OpenAI\",\n    style: nodeStyles.input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    value: data.instructions,\n    onChange: e => data.updateInstructions(e.target.value),\n    placeholder: \"Instru\\xE7\\xF5es para o assistente...\",\n    style: {\n      ...nodeStyles.input,\n      height: '100px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 259,\n  columnNumber: 5\n}, this));\n_c14 = ChatGPTNode;\nconst APINode = /*#__PURE__*/React.memo(_c15 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83C\\uDF10 API Externa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.method,\n      onChange: e => data.updateMethod(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GET\",\n        children: \"GET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"POST\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"PUT\",\n        children: \"PUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"DELETE\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.url,\n      onChange: e => data.updateUrl(e.target.value),\n      placeholder: \"URL da API\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Cabe\\xE7alhos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.headers,\n      onChange: e => data.updateHeaders(e.target.value),\n      placeholder: \"JSON de cabe\\xE7alhos\",\n      style: {\n        ...nodeStyles.input,\n        height: '80px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Corpo da Requisi\\xE7\\xE3o:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.body,\n      onChange: e => data.updateBody(e.target.value),\n      placeholder: \"JSON do corpo\",\n      style: {\n        ...nodeStyles.input,\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 281,\n  columnNumber: 5\n}, this));\n_c16 = APINode;\nconst UpdateCRMNode = /*#__PURE__*/React.memo(_c17 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDD04 Atualizar CRM\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.entity,\n      onChange: e => data.updateEntity(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lead\",\n        children: \"Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deal\",\n        children: \"Neg\\xF3cio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"contact\",\n        children: \"Contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"company\",\n        children: \"Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.field,\n      onChange: e => data.updateField(e.target.value),\n      placeholder: \"Campo para atualizar\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data.value,\n      onChange: e => data.updateValue(e.target.value),\n      placeholder: \"Novo valor\",\n      style: nodeStyles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 329,\n  columnNumber: 5\n}, this));\n_c18 = UpdateCRMNode;\nconst CreateRecordNode = /*#__PURE__*/React.memo(_c19 = ({\n  id,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: nodeStyles.base,\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"left\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"\\uD83D\\uDCDD Criar Cadastro\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyles.section,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.entity,\n      onChange: e => data.updateEntity(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lead\",\n        children: \"Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deal\",\n        children: \"Neg\\xF3cio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"contact\",\n        children: \"Contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"company\",\n        children: \"Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: data.stage,\n      onChange: e => data.updateStage(e.target.value),\n      style: nodeStyles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"new\",\n        children: \"Novo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"qualified\",\n        children: \"Qualificado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"proposal\",\n        children: \"Proposta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"closed\",\n        children: \"Fechado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data.fields,\n      onChange: e => data.updateFields(e.target.value),\n      placeholder: \"Campos (JSON)\",\n      style: {\n        ...nodeStyles.input,\n        height: '150px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: nodeStyles.deleteButton,\n    onClick: () => data.onDelete(id),\n    children: \"\\uD83D\\uDDD1\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"right\",\n    style: handleStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 366,\n  columnNumber: 5\n}, this));\n\n// Defina nodeTypes fora do componente FlowEditor\n_c20 = CreateRecordNode;\nconst nodeTypes = {\n  addNodeMenu: AddNodeMenu,\n  message: MessageNode,\n  question: QuestionNode,\n  media: MediaNode,\n  condition: ConditionNode,\n  interval: IntervalNode,\n  chatgpt: ChatGPTNode,\n  api: APINode,\n  updateCRM: UpdateCRMNode,\n  createRecord: CreateRecordNode\n};\nconst FlowEditor = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState();\n  const [edges, setEdges, onEdgesChange] = useEdgesState();\n  const [idCounter, setIdCounter] = useState(0);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const isValidConnection = useCallback(connection => {\n    const sourceNode = nodes.find(node => node.id === connection.source);\n    const targetNode = nodes.find(node => node.id === connection.target);\n\n    // Permite múltiplas conexões para perguntas e condições\n    if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'question' || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === 'condition') {\n      return true;\n    }\n\n    // Verifica se o nó de origem já tem uma conexão (para outros tipos de nós)\n    const hasExistingConnection = edges.some(edge => edge.source === connection.source);\n    return !hasExistingConnection;\n  }, [nodes, edges]);\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  }, [setNodes, setEdges]);\n  const updateNode = useCallback((nodeId, newData) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node));\n  }, [setNodes]);\n  const createNode = useCallback((type, initialData) => {\n    const nodeId = `${type}-${idCounter}`;\n    setIdCounter(prev => prev + 1);\n    const updateFunctions = {\n      message: {\n        updateContent: content => updateNode(nodeId, {\n          content\n        }),\n        onDelete: deleteNode\n      },\n      question: {\n        updateQuestion: question => updateNode(nodeId, {\n          question\n        }),\n        addOption: () => {\n          setNodes(prevNodes => prevNodes.map(node => {\n            var _node$data$options;\n            return node.id === nodeId ? {\n              ...node,\n              data: {\n                ...node.data,\n                options: [...(node.data.options || []), `Opção ${((_node$data$options = node.data.options) === null || _node$data$options === void 0 ? void 0 : _node$data$options.length) + 1 || 1}`]\n              }\n            } : node;\n          }));\n        },\n        updateOptions: options => updateNode(nodeId, {\n          options\n        }),\n        onDelete: deleteNode\n      },\n      media: {\n        handleFileUpload: file => updateNode(nodeId, {\n          file\n        }),\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        onDelete: deleteNode\n      },\n      condition: {\n        updateConditionType: conditionType => updateNode(nodeId, {\n          conditionType\n        }),\n        updateField: field => updateNode(nodeId, {\n          field\n        }),\n        updateComparison: comparison => updateNode(nodeId, {\n          comparison\n        }),\n        onDelete: deleteNode\n      },\n      interval: {\n        updateDuration: duration => updateNode(nodeId, {\n          duration\n        }),\n        onDelete: deleteNode\n      },\n      chatgpt: {\n        updateApiKey: apiKey => updateNode(nodeId, {\n          apiKey\n        }),\n        updateInstructions: instructions => updateNode(nodeId, {\n          instructions\n        }),\n        onDelete: deleteNode\n      },\n      api: {\n        updateMethod: method => updateNode(nodeId, {\n          method\n        }),\n        updateUrl: url => updateNode(nodeId, {\n          url\n        }),\n        updateHeaders: headers => updateNode(nodeId, {\n          headers\n        }),\n        updateBody: body => updateNode(nodeId, {\n          body\n        }),\n        onDelete: deleteNode\n      },\n      updateCRM: {\n        updateEntity: entity => updateNode(nodeId, {\n          entity\n        }),\n        updateField: field => updateNode(nodeId, {\n          field\n        }),\n        updateValue: value => updateNode(nodeId, {\n          value\n        }),\n        onDelete: deleteNode\n      },\n      createRecord: {\n        updateEntity: entity => updateNode(nodeId, {\n          entity\n        }),\n        updateStage: stage => updateNode(nodeId, {\n          stage\n        }),\n        updateFields: fields => updateNode(nodeId, {\n          fields\n        }),\n        onDelete: deleteNode\n      }\n    };\n    return {\n      id: nodeId,\n      type,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      draggable: true,\n      data: {\n        ...initialData,\n        ...updateFunctions[type]\n      }\n    };\n  }, [idCounter, updateNode, deleteNode, setNodes]);\n  const addNode = useCallback(type => {\n    const nodeConfig = {\n      message: {\n        content: ''\n      },\n      question: {\n        question: '',\n        options: ['Sim', 'Não']\n      },\n      media: {\n        url: '',\n        file: null\n      },\n      condition: {\n        conditionType: 'cadastro',\n        field: '',\n        comparison: ''\n      },\n      interval: {\n        duration: 300\n      },\n      chatgpt: {\n        apiKey: '',\n        instructions: ''\n      },\n      api: {\n        method: 'GET',\n        url: '',\n        headers: '',\n        body: ''\n      },\n      updateCRM: {\n        entity: 'lead',\n        field: '',\n        value: ''\n      },\n      createRecord: {\n        entity: 'lead',\n        stage: 'new',\n        fields: '{}'\n      }\n    };\n    setNodes(prevNodes => [...prevNodes, createNode(type, nodeConfig[type])]);\n  }, [createNode, setNodes]);\n\n  // Initialize with the AddNodeMenu node\n  useEffect(() => {\n    if (nodes.length === 0) {\n      const initialMenuNode = {\n        id: 'add-node-menu',\n        type: 'addNodeMenu',\n        position: {\n          x: 100,\n          y: 50\n        },\n        data: {\n          addNode\n        },\n        draggable: false\n      };\n      setNodes([initialMenuNode]);\n    }\n  }, [nodes.length, setNodes, addNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: flowContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        isValidConnection: isValidConnection,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 9\n  }, this);\n};\n_s(FlowEditor, \"0IXXHrqRfH8FCYiVqRpMVQbbPag=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c21 = FlowEditor;\nexport default FlowEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"AddNodeMenu$React.memo\");\n$RefreshReg$(_c2, \"AddNodeMenu\");\n$RefreshReg$(_c3, \"MessageNode$React.memo\");\n$RefreshReg$(_c4, \"MessageNode\");\n$RefreshReg$(_c5, \"QuestionNode$React.memo\");\n$RefreshReg$(_c6, \"QuestionNode\");\n$RefreshReg$(_c7, \"MediaNode$React.memo\");\n$RefreshReg$(_c8, \"MediaNode\");\n$RefreshReg$(_c9, \"ConditionNode$React.memo\");\n$RefreshReg$(_c10, \"ConditionNode\");\n$RefreshReg$(_c11, \"IntervalNode$React.memo\");\n$RefreshReg$(_c12, \"IntervalNode\");\n$RefreshReg$(_c13, \"ChatGPTNode$React.memo\");\n$RefreshReg$(_c14, \"ChatGPTNode\");\n$RefreshReg$(_c15, \"APINode$React.memo\");\n$RefreshReg$(_c16, \"APINode\");\n$RefreshReg$(_c17, \"UpdateCRMNode$React.memo\");\n$RefreshReg$(_c18, \"UpdateCRMNode\");\n$RefreshReg$(_c19, \"CreateRecordNode$React.memo\");\n$RefreshReg$(_c20, \"CreateRecordNode\");\n$RefreshReg$(_c21, \"FlowEditor\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","MiniMap","Controls","Background","Handle","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","flowContainerStyles","width","height","position","overflow","nodeStyles","base","padding","backgroundColor","borderRadius","border","minWidth","boxShadow","display","flexDirection","alignItems","input","margin","section","select","deleteButton","background","color","cursor","justifyContent","marginTop","menuButton","fontSize","menuContainer","flexWrap","gap","handleStyle","AddNodeMenu","memo","_c","id","data","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addNode","_c2","MessageNode","_c3","type","value","content","onChange","e","updateContent","target","placeholder","onDelete","_c4","QuestionNode","_c5","handleOptionChange","index","newOptions","options","updateOptions","question","updateQuestion","map","opt","right","top","transform","addOption","_c6","MediaNode","_c7","handleFileUpload","files","url","updateUrl","_c8","ConditionNode","_c9","conditionType","updateConditionType","field","updateField","comparison","updateComparison","_c10","IntervalNode","_c11","duration","updateDuration","min","max","_c12","ChatGPTNode","_c13","apiKey","updateApiKey","instructions","updateInstructions","_c14","APINode","_c15","method","updateMethod","headers","updateHeaders","body","updateBody","_c16","UpdateCRMNode","_c17","entity","updateEntity","updateValue","_c18","CreateRecordNode","_c19","stage","updateStage","fields","updateFields","_c20","nodeTypes","addNodeMenu","message","media","condition","interval","chatgpt","api","updateCRM","createRecord","FlowEditor","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","idCounter","setIdCounter","onConnect","params","eds","isValidConnection","connection","sourceNode","find","node","source","targetNode","hasExistingConnection","some","edge","deleteNode","nodeId","nds","filter","updateNode","newData","prevNodes","createNode","initialData","prev","updateFunctions","_node$data$options","length","file","x","Math","random","y","draggable","nodeConfig","initialMenuNode","fitView","_c21","$RefreshReg$"],"sources":["C:/Users/marco/DocsImportantes/CLT/Bitrix24/ProjetoDragAndDrop/frontend/src/FlowEditor.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n    Handle,\r\n    useNodesState,\r\n    useEdgesState,\r\n    addEdge\r\n} from 'react-flow-renderer';\r\n\r\n// Estilos atualizados\r\nconst flowContainerStyles = {\r\n    width: '100%',\r\n    height: 'calc(100vh - 20px)', // Adjust height to account for no top bar\r\n    position: 'relative',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst nodeStyles = {\r\n    base: {\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        border: '2px solid #2684ff',\r\n        minWidth: '300px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        margin: '10px 0',\r\n        padding: '8px',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd'\r\n    },\r\n    section: {\r\n        margin: '15px 0',\r\n        padding: '10px',\r\n        backgroundColor: '#f8f9fa',\r\n        borderRadius: '6px',\r\n        width: '100%'\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        padding: '8px',\r\n        margin: '5px 0'\r\n    },\r\n    deleteButton: {\r\n        background: 'red',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '50%',\r\n        width: '24px',\r\n        height: '24px',\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: '10px'\r\n    },\r\n    menuButton: {\r\n        padding: '10px 15px',\r\n        fontSize: '16px',\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        margin: '5px'\r\n    },\r\n    menuContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        gap: '10px',\r\n        padding: '15px'\r\n    }\r\n};\r\n\r\n// Estilo personalizado para os Handles (bolinhas de conexão)\r\nconst handleStyle = {\r\n    width: '15px',\r\n    height: '15px',\r\n    backgroundColor: '#2684ff',\r\n    border: '2px solid #fff',\r\n    borderRadius: '50%'\r\n};\r\n\r\n// Componente do Nó de Menu para Adicionar Nós\r\nconst AddNodeMenu = React.memo(({ id, data }) => (\r\n    <div style={{ ...nodeStyles.base, minWidth: '400px' }}>\r\n        <h4>➕ Adicionar Novo Nó</h4>\r\n        <div style={nodeStyles.menuContainer}>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('message')}>Mensagem</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('question')}>Pergunta</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('media')}>Mídia</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('condition')}>Condição</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('interval')}>Intervalo</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('chatgpt')}>Chat GPT</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('api')}>API Externa</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('updateCRM')}>Atualizar CRM</button>\r\n            <button style={nodeStyles.menuButton} onClick={() => data.addNode('createRecord')}>Criar Cadastro</button>\r\n        </div>\r\n    </div>\r\n));\r\n\r\n// Componentes dos Nós com React.memo para otimização\r\nconst MessageNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>💬 Mensagem</h4>\r\n        <textarea\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n            value={data.content}\r\n            onChange={(e) => data.updateContent(e.target.value)}\r\n            placeholder=\"Escreva sua mensagem...\"\r\n        />\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst QuestionNode = React.memo(({ id, data }) => {\r\n    const handleOptionChange = (index, value) => {\r\n        const newOptions = [...data.options];\r\n        newOptions[index] = value;\r\n        data.updateOptions(newOptions);\r\n    };\r\n\r\n    return (\r\n        <div style={nodeStyles.base}>\r\n            <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n            <h4>❓ Pergunta</h4>\r\n            <input\r\n                type=\"text\"\r\n                style={nodeStyles.input}\r\n                value={data.question}\r\n                onChange={(e) => data.updateQuestion(e.target.value)}\r\n                placeholder=\"Digite a pergunta\"\r\n            />\r\n            <div style={nodeStyles.section}>\r\n                <h5>Opções de Resposta:</h5>\r\n                {data.options.map((opt, index) => (\r\n                    <div key={index} style={{ margin: '5px 0', position: 'relative' }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={opt}\r\n                            style={{ ...nodeStyles.input, width: '80%' }}\r\n                            onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                        />\r\n                        <Handle\r\n                            type=\"source\"\r\n                            position=\"right\"\r\n                            id={`option-${index}`}\r\n                            style={{ ...handleStyle, right: '-8px', top: '50%', transform: 'translateY(-50%)' }}\r\n                        />\r\n                    </div>\r\n                ))}\r\n                <button onClick={data.addOption}>+ Adicionar Opção</button>\r\n            </div>\r\n            <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst MediaNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>🖼️ Mídia</h4>\r\n        <input\r\n            type=\"file\"\r\n            onChange={(e) => data.handleFileUpload(e.target.files[0])}\r\n            style={nodeStyles.input}\r\n        />\r\n        <div style={nodeStyles.section}>\r\n            <h5>Ou insira URL:</h5>\r\n            <input\r\n                type=\"text\"\r\n                value={data.url}\r\n                onChange={(e) => data.updateUrl(e.target.value)}\r\n                placeholder=\"https://exemplo.com/imagem.jpg\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst ConditionNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>⚖️ Condição</h4>\r\n        <select\r\n            value={data.conditionType}\r\n            onChange={(e) => data.updateConditionType(e.target.value)}\r\n            style={nodeStyles.select}\r\n        >\r\n            <option value=\"cadastro\">Verificar Cadastro</option>\r\n            <option value=\"valor\">Comparar Valores</option>\r\n        </select>\r\n\r\n        {data.conditionType === 'cadastro' && (\r\n            <div style={nodeStyles.section}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={data.field}\r\n                    onChange={(e) => data.updateField(e.target.value)}\r\n                    placeholder=\"Campo para verificação (ex: PHONE)\"\r\n                    style={nodeStyles.input}\r\n                />\r\n            </div>\r\n        )}\r\n\r\n        {data.conditionType === 'valor' && (\r\n            <div style={nodeStyles.section}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={data.comparison}\r\n                    onChange={(e) => data.updateComparison(e.target.value)}\r\n                    placeholder=\"Expressão (ex: VALUE > 100)\"\r\n                    style={nodeStyles.input}\r\n                />\r\n            </div>\r\n        )}\r\n\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" id=\"true\" style={{ ...handleStyle, top: '30%' }} />\r\n        <Handle type=\"source\" position=\"right\" id=\"false\" style={{ ...handleStyle, top: '70%' }} />\r\n    </div>\r\n));\r\n\r\nconst IntervalNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>⏱️ Intervalo</h4>\r\n        <div style={nodeStyles.section}>\r\n            <input\r\n                type=\"number\"\r\n                value={data.duration}\r\n                onChange={(e) => data.updateDuration(e.target.value)}\r\n                placeholder=\"Duração em segundos\"\r\n                min=\"1\"\r\n                max=\"7200\"\r\n                style={nodeStyles.input}\r\n            />\r\n            <small>Máximo: 2 horas (7200 segundos)</small>\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst ChatGPTNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>🤖 Chat GPT</h4>\r\n        <input\r\n            type=\"password\"\r\n            value={data.apiKey}\r\n            onChange={(e) => data.updateApiKey(e.target.value)}\r\n            placeholder=\"Insira sua API Key da OpenAI\"\r\n            style={nodeStyles.input}\r\n        />\r\n        <textarea\r\n            value={data.instructions}\r\n            onChange={(e) => data.updateInstructions(e.target.value)}\r\n            placeholder=\"Instruções para o assistente...\"\r\n            style={{ ...nodeStyles.input, height: '100px' }}\r\n        />\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst APINode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>🌐 API Externa</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select\r\n                value={data.method}\r\n                onChange={(e) => data.updateMethod(e.target.value)}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"GET\">GET</option>\r\n                <option value=\"POST\">POST</option>\r\n                <option value=\"PUT\">PUT</option>\r\n                <option value=\"DELETE\">DELETE</option>\r\n            </select>\r\n            <input\r\n                type=\"text\"\r\n                value={data.url}\r\n                onChange={(e) => data.updateUrl(e.target.value)}\r\n                placeholder=\"URL da API\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n\r\n        <div style={nodeStyles.section}>\r\n            <h5>Cabeçalhos:</h5>\r\n            <textarea\r\n                value={data.headers}\r\n                onChange={(e) => data.updateHeaders(e.target.value)}\r\n                placeholder=\"JSON de cabeçalhos\"\r\n                style={{ ...nodeStyles.input, height: '80px' }}\r\n            />\r\n        </div>\r\n\r\n        <div style={nodeStyles.section}>\r\n            <h5>Corpo da Requisição:</h5>\r\n            <textarea\r\n                value={data.body}\r\n                onChange={(e) => data.updateBody(e.target.value)}\r\n                placeholder=\"JSON do corpo\"\r\n                style={{ ...nodeStyles.input, height: '100px' }}\r\n            />\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst UpdateCRMNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>🔄 Atualizar CRM</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select\r\n                value={data.entity}\r\n                onChange={(e) => data.updateEntity(e.target.value)}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"lead\">Lead</option>\r\n                <option value=\"deal\">Negócio</option>\r\n                <option value=\"contact\">Contato</option>\r\n                <option value=\"company\">Empresa</option>\r\n            </select>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={data.field}\r\n                onChange={(e) => data.updateField(e.target.value)}\r\n                placeholder=\"Campo para atualizar\"\r\n                style={nodeStyles.input}\r\n            />\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={data.value}\r\n                onChange={(e) => data.updateValue(e.target.value)}\r\n                placeholder=\"Novo valor\"\r\n                style={nodeStyles.input}\r\n            />\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\nconst CreateRecordNode = React.memo(({ id, data }) => (\r\n    <div style={nodeStyles.base}>\r\n        <Handle type=\"target\" position=\"left\" style={handleStyle} />\r\n        <h4>📝 Criar Cadastro</h4>\r\n        <div style={nodeStyles.section}>\r\n            <select\r\n                value={data.entity}\r\n                onChange={(e) => data.updateEntity(e.target.value)}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"lead\">Lead</option>\r\n                <option value=\"deal\">Negócio</option>\r\n                <option value=\"contact\">Contato</option>\r\n                <option value=\"company\">Empresa</option>\r\n            </select>\r\n\r\n            <select\r\n                value={data.stage}\r\n                onChange={(e) => data.updateStage(e.target.value)}\r\n                style={nodeStyles.select}\r\n            >\r\n                <option value=\"new\">Novo</option>\r\n                <option value=\"qualified\">Qualificado</option>\r\n                <option value=\"proposal\">Proposta</option>\r\n                <option value=\"closed\">Fechado</option>\r\n            </select>\r\n\r\n            <textarea\r\n                value={data.fields}\r\n                onChange={(e) => data.updateFields(e.target.value)}\r\n                placeholder=\"Campos (JSON)\"\r\n                style={{ ...nodeStyles.input, height: '150px' }}\r\n            />\r\n        </div>\r\n        <button style={nodeStyles.deleteButton} onClick={() => data.onDelete(id)}>🗑️</button>\r\n        <Handle type=\"source\" position=\"right\" style={handleStyle} />\r\n    </div>\r\n));\r\n\r\n// Defina nodeTypes fora do componente FlowEditor\r\nconst nodeTypes = {\r\n    addNodeMenu: AddNodeMenu,\r\n    message: MessageNode,\r\n    question: QuestionNode,\r\n    media: MediaNode,\r\n    condition: ConditionNode,\r\n    interval: IntervalNode,\r\n    chatgpt: ChatGPTNode,\r\n    api: APINode,\r\n    updateCRM: UpdateCRMNode,\r\n    createRecord: CreateRecordNode\r\n};\r\n\r\nconst FlowEditor = () => {\r\n    const [nodes, setNodes, onNodesChange] = useNodesState();\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState();\r\n    const [idCounter, setIdCounter] = useState(0);\r\n\r\n    const onConnect = useCallback(\r\n        (params) => setEdges((eds) => addEdge(params, eds)),\r\n        [setEdges]\r\n    );\r\n\r\n    const isValidConnection = useCallback((connection) => {\r\n        const sourceNode = nodes.find((node) => node.id === connection.source);\r\n        const targetNode = nodes.find((node) => node.id === connection.target);\r\n\r\n        // Permite múltiplas conexões para perguntas e condições\r\n        if (sourceNode?.type === 'question' || sourceNode?.type === 'condition') {\r\n            return true;\r\n        }\r\n\r\n        // Verifica se o nó de origem já tem uma conexão (para outros tipos de nós)\r\n        const hasExistingConnection = edges.some(\r\n            (edge) => edge.source === connection.source\r\n        );\r\n\r\n        return !hasExistingConnection;\r\n    }, [nodes, edges]);\r\n\r\n    const deleteNode = useCallback((nodeId) => {\r\n        setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n        setEdges((eds) => eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId));\r\n    }, [setNodes, setEdges]);\r\n\r\n    const updateNode = useCallback((nodeId, newData) => {\r\n        setNodes((prevNodes) =>\r\n            prevNodes.map((node) =>\r\n                node.id === nodeId ? { ...node, data: { ...node.data, ...newData } } : node\r\n            )\r\n        );\r\n    }, [setNodes]);\r\n\r\n    const createNode = useCallback((type, initialData) => {\r\n        const nodeId = `${type}-${idCounter}`;\r\n        setIdCounter((prev) => prev + 1);\r\n\r\n        const updateFunctions = {\r\n            message: {\r\n                updateContent: (content) => updateNode(nodeId, { content }),\r\n                onDelete: deleteNode,\r\n            },\r\n            question: {\r\n                updateQuestion: (question) => updateNode(nodeId, { question }),\r\n                addOption: () => {\r\n                    setNodes((prevNodes) =>\r\n                        prevNodes.map((node) =>\r\n                            node.id === nodeId\r\n                                ? {\r\n                                      ...node,\r\n                                      data: {\r\n                                          ...node.data,\r\n                                          options: [...(node.data.options || []), `Opção ${node.data.options?.length + 1 || 1}`],\r\n                                      },\r\n                                  }\r\n                                : node\r\n                        )\r\n                    );\r\n                },\r\n                updateOptions: (options) => updateNode(nodeId, { options }),\r\n                onDelete: deleteNode,\r\n            },\r\n            media: {\r\n                handleFileUpload: (file) => updateNode(nodeId, { file }),\r\n                updateUrl: (url) => updateNode(nodeId, { url }),\r\n                onDelete: deleteNode,\r\n            },\r\n            condition: {\r\n                updateConditionType: (conditionType) => updateNode(nodeId, { conditionType }),\r\n                updateField: (field) => updateNode(nodeId, { field }),\r\n                updateComparison: (comparison) => updateNode(nodeId, { comparison }),\r\n                onDelete: deleteNode,\r\n            },\r\n            interval: {\r\n                updateDuration: (duration) => updateNode(nodeId, { duration }),\r\n                onDelete: deleteNode,\r\n            },\r\n            chatgpt: {\r\n                updateApiKey: (apiKey) => updateNode(nodeId, { apiKey }),\r\n                updateInstructions: (instructions) => updateNode(nodeId, { instructions }),\r\n                onDelete: deleteNode,\r\n            },\r\n            api: {\r\n                updateMethod: (method) => updateNode(nodeId, { method }),\r\n                updateUrl: (url) => updateNode(nodeId, { url }),\r\n                updateHeaders: (headers) => updateNode(nodeId, { headers }),\r\n                updateBody: (body) => updateNode(nodeId, { body }),\r\n                onDelete: deleteNode,\r\n            },\r\n            updateCRM: {\r\n                updateEntity: (entity) => updateNode(nodeId, { entity }),\r\n                updateField: (field) => updateNode(nodeId, { field }),\r\n                updateValue: (value) => updateNode(nodeId, { value }),\r\n                onDelete: deleteNode,\r\n            },\r\n            createRecord: {\r\n                updateEntity: (entity) => updateNode(nodeId, { entity }),\r\n                updateStage: (stage) => updateNode(nodeId, { stage }),\r\n                updateFields: (fields) => updateNode(nodeId, { fields }),\r\n                onDelete: deleteNode,\r\n            },\r\n        };\r\n\r\n        return {\r\n            id: nodeId,\r\n            type,\r\n            position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n            draggable: true,\r\n            data: {\r\n                ...initialData,\r\n                ...updateFunctions[type],\r\n            },\r\n        };\r\n    }, [idCounter, updateNode, deleteNode, setNodes]);\r\n\r\n    const addNode = useCallback((type) => {\r\n        const nodeConfig = {\r\n            message: { content: '' },\r\n            question: { question: '', options: ['Sim', 'Não'] },\r\n            media: { url: '', file: null },\r\n            condition: { conditionType: 'cadastro', field: '', comparison: '' },\r\n            interval: { duration: 300 },\r\n            chatgpt: { apiKey: '', instructions: '' },\r\n            api: { method: 'GET', url: '', headers: '', body: '' },\r\n            updateCRM: { entity: 'lead', field: '', value: '' },\r\n            createRecord: { entity: 'lead', stage: 'new', fields: '{}' },\r\n        };\r\n        setNodes((prevNodes) => [...prevNodes, createNode(type, nodeConfig[type])]);\r\n    }, [createNode, setNodes]);\r\n\r\n    // Initialize with the AddNodeMenu node\r\n    useEffect(() => {\r\n        if (nodes.length === 0) {\r\n            const initialMenuNode = {\r\n                id: 'add-node-menu',\r\n                type: 'addNodeMenu',\r\n                position: { x: 100, y: 50 },\r\n                data: { addNode },\r\n                draggable: false,\r\n            };\r\n            setNodes([initialMenuNode]);\r\n        }\r\n    }, [nodes.length, setNodes, addNode]);\r\n\r\n    return (\r\n        <div style={{ height: '100vh' }}>\r\n            {/* Container para o React Flow */}\r\n            <div style={flowContainerStyles}>\r\n                <ReactFlow\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onConnect={onConnect}\r\n                    isValidConnection={isValidConnection}\r\n                    nodeTypes={nodeTypes}\r\n                    fitView\r\n                >\r\n                    <MiniMap />\r\n                    <Controls />\r\n                    <Background />\r\n                </ReactFlow>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlowEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}